{"version":3,"sources":["webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/table.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/table.js","webpack:///src/common/core/ui/confirm-modal/confirm-modal.component.ts","webpack:///src/common/core/ui/confirm-modal/confirm-modal.component.html","webpack:///src/common/uploads/formatted-file-size.pipe.ts","webpack:///src/common/shared/billing/full-plan-name/full-plan-name.component.ts","webpack:///src/common/core/ui/svg-image/svg-cache.service.ts","webpack:///src/common/core/ui/svg-image/svg-image.component.ts","webpack:///src/common/core/ui/no-results-message/no-results-message.component.ts","webpack:///src/common/core/ui/no-results-message/no-results-message.component.html","webpack:///src/common/core/ui/no-results-message/no-results-message.module.ts","webpack:///src/common/core/ui/svg-image/svg-image.module.ts","webpack:///src/common/shared/billing/guards/billing-enabled-guard.service.ts","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/stepper.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/stepper.js","webpack:///src/common/billing/subscriptions/subscription-stepper-state.service.ts","webpack:///src/common/billing/subscriptions/paypal-subscriptions.ts","webpack:///src/common/billing/upgrade-page/upgrade-page.component.html","webpack:///src/common/billing/upgrade-page/upgrade-page.component.ts","webpack:///src/common/billing/upgrade-page/billing-plans-resolver.service.ts","webpack:///src/common/billing/upgrade-page/accepted-payments-header/accepted-payments-header.component.html","webpack:///src/common/billing/upgrade-page/accepted-payments-header/accepted-payments-header.component.ts","webpack:///src/common/billing/upgrade-page/plan-features-list/plan-features-list.component.html","webpack:///src/common/billing/upgrade-page/plan-features-list/plan-features-list.component.ts","webpack:///src/common/billing/upgrade-page/upgrade-page-aside/upgrade-page-aside.component.html","webpack:///src/common/billing/upgrade-page/upgrade-page-aside/upgrade-page-aside.component.ts","webpack:///src/common/billing/upgrade-page/order-summary/order-summary.component.html","webpack:///src/common/billing/upgrade-page/order-summary/order-summary.component.ts","webpack:///src/common/billing/credit-card-form/credit-card-form.component.html","webpack:///src/common/billing/credit-card-form/credit-card-form.component.ts","webpack:///src/common/billing/subscriptions/create-subscription-panel/create-subscription-panel.component.html","webpack:///src/common/billing/subscriptions/create-subscription-panel/create-subscription-panel.component.ts","webpack:///src/common/billing/subscriptions/user-subscription-page/user-subscription-page.component.html","webpack:///src/common/billing/subscriptions/user-subscription-page/user-subscription-page.component.ts","webpack:///src/common/billing/guards/user-subscribed-guard.service.ts","webpack:///src/common/billing/upgrade-page/currencies-list-resolver.service.ts","webpack:///src/common/billing/invoices/invoice.service.ts","webpack:///src/common/billing/invoices/invoice-index/invoice-index.component.html","webpack:///src/common/billing/invoices/invoice-index/invoice-index.component.ts","webpack:///src/common/billing/pricing-page/pricing-page.component.ts","webpack:///src/common/billing/guards/redirect-to-upgrade-page.service.ts","webpack:///src/common/billing/billing-routing.module.ts","webpack:///src/common/billing/pricing-page/pricing-page.component.html","webpack:///src/common/billing/plans/select-plan-panel/select-plan-panel.component.html","webpack:///src/common/billing/plans/select-plan-panel/select-plan-panel.component.ts","webpack:///src/common/billing/plans/select-plan-period-panel/select-plan-period-panel.component.html","webpack:///src/common/billing/plans/select-plan-period-panel/select-plan-period-panel.component.ts","webpack:///src/common/billing/upgrade-page/contact-widget/contact-widget.component.ts","webpack:///src/common/billing/guards/user-not-subscribed-guard.service.ts","webpack:///src/common/billing/billing.module.ts","webpack:///src/common/billing/upgrade-page/contact-widget/contact-widget.component.html","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/radio.js","webpack:///src/common/shared/billing/plans.service.ts","webpack:///src/common/core/services/local-storage.service.ts","webpack:///src/common/shared/billing/full-plan-name/full-plan-name.module.ts","webpack:///src/common/core/ui/format-pipes/formatted-date.pipe.ts","webpack:///src/common/shared/billing/subscriptions.service.ts","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/tabs.js"],"names":["_c0","_c1","CdkTextColumn_th_1_Template","rf","ctx","ctx_r0","justify","headerText","CdkTextColumn_td_2_Template","data_r2","$implicit","ctx_r1","dataAccessor","name","mixinHasStickyInput","base","args","super","_sticky","this","_hasStickyChanged","hasStickyChanged","v","prevValue","c","CdkFooterCellDef","CdkHeaderCellDef","CdkCellDef","CdkColumnDef","BaseRowDef","CdkCell","CdkFooterCell","CdkHeaderCell","CdkHeaderRowDef","CdkNoDataRow","CdkRow","CdkFooterRow","CdkHeaderRow","CdkCellOutlet","CdkRowDef","CdkFooterRowDef","CDK_TABLE","TEXT_COLUMN_OPTIONS","template","ɵfac","t","ɵdir","type","selectors","_CdkColumnDefBase","_table","_stickyEnd","_name","cssClassFriendlyName","replace","contentQueries","dirIndex","_t","cell","first","headerCell","footerCell","inputs","sticky","stickyEnd","features","provide","useExisting","BaseCdkCell","columnDef","elementRef","nativeElement","classList","add","hostAttrs","_differs","changes","_columnsDiffer","columns","currentValue","find","create","diff","column","_CdkHeaderRowDefBase","_CdkFooterRowDefBase","when","_viewContainer","mostRecentCellOutlet","ɵcmp","decls","vars","consts","directives","encapsulation","templateRef","STICKY_DIRECTIONS","StickyStyler","_isNativeHtmlTable","_stickCellCss","direction","_isBrowser","rows","stickyDirections","row","nodeType","ELEMENT_NODE","_removeStickyStyle","i","children","length","stickyStartStates","stickyEndStates","hasStickyColumns","some","state","firstRow","numCells","cellWidths","_getCellWidths","startPositions","_getStickyStartColumnPositions","endPositions","_getStickyEndColumnPositions","isRtl","_addStickyStyle","rowsToStick","stickyStates","position","slice","reverse","states","stickyHeight","rowIndex","j","getBoundingClientRect","height","tableElement","tfoot","querySelector","element","dir","style","zIndex","_getCalculatedZIndex","remove","dirValue","cssText","zIndexIncrements","top","bottom","left","right","firstRowCells","push","width","widths","positions","nextPosition","getTableUnknownColumnError","id","Error","CdkTable","NoDataRowOutlet","FooterRowOutlet","HeaderRowOutlet","DataRowOutlet","viewContainer","_changeDetectorRef","_elementRef","role","_dir","_document","_platform","_onDestroy","Subject","_columnDefsByName","Map","_customColumnDefs","Set","_customRowDefs","_customHeaderRowDefs","_customFooterRowDefs","_headerRowDefChanged","_footerRowDefChanged","_cachedRenderRowsMap","stickyCssClass","_isShowingNoDataRow","_multiTemplateDataRows","viewChange","BehaviorSubject","start","end","Number","MAX_VALUE","setAttribute","nodeName","_setupStickyStyler","_applyNativeTableSections","_dataDiffer","_i","dataRow","trackBy","dataIndex","data","_cacheRowDefs","_cacheColumnDefs","_headerRowDefs","_footerRowDefs","_rowDefs","_renderUpdatedColumns","_forceRenderHeaderRows","_forceRenderFooterRows","dataSource","_renderChangeSubscription","_observeRenderChanges","_checkStickyStates","_rowOutlet","clear","_noDataRowOutlet","_headerRowOutlet","_footerRowOutlet","next","complete","disconnect","_renderRows","_getAllRenderRows","forEachOperation","record","prevIndex","currentIndex","previousIndex","_insertRow","item","view","get","move","_updateRowIndexContext","forEachIdentityChange","context","_updateNoDataRow","updateStickyColumnStyles","rowDef","headerRowDef","footerRowDef","headerRows","_getRenderedRows","thead","display","map","def","_stickyStyler","clearStickyPositioning","stickRows","forEach","resetStickyChanged","footerRows","updateStickyFooterContainer","dataRows","headerRow","_addStickyColumnStyles","footerRow","Array","from","values","renderRows","prevCachedRenderRows","_data","renderRowsForData","_getRenderRowsForData","has","set","WeakMap","renderRow","cache","_getRowDefs","cachedRenderRows","shift","mergeArrayAndSet","_getOwnDefs","_contentColumnDefs","_contentHeaderRowDefs","_contentFooterRowDefs","_contentRowDefs","defaultRowDefs","filter","multiTemplateDataRows","_defaultRowDef","columnsDiffReducer","acc","getColumnsDiff","reduce","_forceRenderDataRows","unsubscribe","_dataSource","dataStream","connect","isObservable","isArray","of","pipe","takeUntil","subscribe","_renderRow","updateStickyHeaderRowStyles","updateStickyFooterRowStyles","columnDefs","columnName","updateStickyColumns","rowOutlet","renderedRows","viewRef","rootNodes","rowDefs","JSON","stringify","renderIndex","outlet","index","createEmbeddedView","_getCellTemplates","cellTemplate","markForCheck","count","last","even","odd","columnId","extractCellTemplate","documentFragment","createDocumentFragment","tag","outlets","section","createElement","appendChild","stickyCheckReducer","d","value","isBrowser","change","items","_noDataRow","shouldShow","container","_trackByFn","fn","console","warn","_switchDataSource","viewQuery","exportAs","ngContentSelectors","array","concat","CdkTableModule","CdkTextColumn","_options","_syncColumnDefName","_createDefaultHeaderText","defaultDataAccessor","addColumnDef","removeColumnDef","defaultHeaderTextTransform","toUpperCase","ɵmod","ɵinj","factory","MatTextColumn_th_1_Template","MatTextColumn_td_2_Template","MatTable","MatCellDef","MatHeaderCellDef","MatFooterCellDef","MatColumnDef","MatHeaderRowDef","MatCell","MatFooterCell","MatHeaderCell","MatFooterRowDef","MatRowDef","MatHeaderRow","MatFooterRow","MatRow","MatNoDataRow","MatTextColumn","MatTableModule","arguments","ɵMatTable_BaseFactory","styles","ɵMatCellDef_BaseFactory","ɵMatHeaderCellDef_BaseFactory","ɵMatFooterCellDef_BaseFactory","ɵMatColumnDef_BaseFactory","ɵMatHeaderRowDef_BaseFactory","ɵMatFooterRowDef_BaseFactory","ɵMatRowDef_BaseFactory","ɵMatHeaderRow_BaseFactory","ɵMatFooterRow_BaseFactory","ɵMatRow_BaseFactory","ɵMatNoDataRow_BaseFactory","ɵMatTextColumn_BaseFactory","imports","ConfirmModalComponent","dialogRef","i18n","settings","key","ok","cancel","replacements","close","confirm","FormattedFileSizePipe","precision","bytes","isNaN","parseFloat","String","isFinite","FullPlanNameComponent","plan","parent","SvgCacheService","http","document","inProgressUrlFetches","fileName","endsWith","cloneSvg","fetchIcon","svgText","svgElementFromString","tap","svg","inProgressFetch","req","responseType","finalize","share","str","div","innerHTML","cloneNode","SvgImageComponent","NoResultsMessageComponent","el","svgIconChanges","currentSvgFetch","take","setSvgElement","previousValue","clearSvgElement","styleTags","querySelectorAll","textContent","layoutElement","childCount","childNodes","child","toLowerCase","removeChild","svgImage","horizontal","NoResultsMessageModule","SvgImageModule","BillingEnabledGuard","router","route","handle","navigate","CdkStep_ng_template_0_Template","CdkStepLabel","CdkStepHeader","CdkStepperModule","CdkStepperPrevious","CdkStepperNext","CdkStepper","CdkStep","focus","nextId","STEPPER_GLOBAL_OPTIONS","_stepper","stepperOptions","interacted","_editable","_optional","_completedOverride","_customError","_stepperOptions","_displayDefaultIndicatorType","displayDefaultIndicatorType","_showError","showError","stepControl","valid","invalid","selected","reset","_stateChanged","_getDefaultCompleted","_getDefaultError","stepLabel","content","editable","optional","completed","hasError","label","errorMessage","ariaLabel","ariaLabelledby","changeDetection","_destroyed","_linear","_selectedIndex","selectionChange","_orientation","_groupId","_keyManager","_stepHeader","withWrap","withVerticalOrientation","startWith","_layoutDirection","withHorizontalOrientation","updateActiveItem","steps","Math","max","selectedIndex","min","_updateSelectedItemIndex","step","toArray","isCurrentStep","_isCurrentStep","_getDefaultIndicatorLogic","_getGuidelineLogic","activeItemIndex","newIndex","stepsArray","emit","previouslySelectedIndex","selectedStep","previouslySelectedStep","_containsFocus","setActiveItem","event","hasModifier","keyCode","manager","setFirstItemActive","preventDefault","setLastItemActive","onKeydown","control","pending","stepperElement","focusedElement","activeElement","contains","_steps","_anyControlsInvalidOrPending","indexOf","linear","outputs","hostVars","hostBindings","_handleClick","previous","MatStepHeader_ng_container_3_Template","iconOverrides","_getIconContext","MatStepHeader_ng_container_4_span_1_Template","ctx_r6","_getDefaultTextForState","MatStepHeader_ng_container_4_mat_icon_2_Template","ctx_r7","MatStepHeader_ng_container_4_Template","MatStepHeader_ng_container_6_Template","ctx_r2","_templateLabel","MatStepHeader_div_7_Template","ctx_r3","MatStepHeader_div_8_Template","ctx_r4","_intl","optionalLabel","MatStepHeader_div_9_Template","ctx_r5","MatStep_ng_template_0_Template","MatHorizontalStepper_ng_container_1_div_2_Template","MatHorizontalStepper_ng_container_1_Template","_r8","select","$event","_onKeydown","step_r2","i_r3","isLast_r4","_getFocusIndex","_getStepLabelId","_getIndicatorType","_iconOverrides","disableRipple","_getStepContentId","MatHorizontalStepper_div_3_Template","_r12","_animationDone","step_r9","i_r10","_getAnimationDirection","MatVerticalStepper_div_0_Template","_r6","step_r1","i_r2","isLast_r3","MatStepLabel","MatStepperIntl","MatStepHeader","MatStepper","MatStep","MatStepperIcon","MatHorizontalStepper","MatStepperNext","MatVerticalStepper","MatStepperPrevious","MatStepperModule","SubscriptionStepperState","PaypalSubscriptions","ɵMatStepLabel_BaseFactory","ɵprov","token","providedIn","MAT_STEPPER_INTL_PROVIDER","deps","useFactory","parentIntl","_focusMonitor","changeDetectorRef","_intlSubscription","monitor","stopMonitoring","focusVia","active","_getHostElement","_stringLabel","matStepperAnimations","horizontalStepTransition","transform","visibility","verticalStepTransition","stepper","_errorStateMatcher","form","isErrorState","animationDone","_icons","distinctUntilChanged","x","y","fromState","toState","ɵMatStepper_BaseFactory","labelPosition","ɵMatHorizontalStepper_BaseFactory","animation","ɵMatStepperNext_BaseFactory","ɵMatStepperPrevious_BaseFactory","providers","currentUser","plans","initialPlan$","selectedPlan$","mode","isSubscribed","getSubscription","gateway","getChildPlans","radioGroupModel","parent_id","hidden","subscriptions","popupWidth","popupHeight","popupParams","menubar","location","locationbar","toolbar","titlebar","status","scrollbars","subscriptionPending","executingAgreement","params","popup","openPaypalPopup","getBaseUrl","Promise","resolve","reject","rejectSubscribe","resolveSubscribe","createPaypalAgreement","response","listenForMessages","plan_id","href","urls","approve","errResponse","rejectSubscriptionPromise","subscription","delete","start_date","renews_at","then","user","planId","window","addEventListener","e","origin","executePaypalAgreement","resolveSubscriptionPromise","url","Object","assign","screen","newWindow","open","keys","join","interval","setInterval","closed","clearInterval","post","agreement_id","message","loading$","UpgradePageComponent","BillingPlansResolver","Steps","Plans","Period","Payment","toast","localStorage","paypalSubscriptions","setPlans","hydrateStateFromLocalStorage","storedState","initial","initialPlan","p","finalPlan","selectInitialPlan","selectPlanById","changePlan","free","final","planName","getSelectedOrParentPlanName","activeSubscription","assignCurrent","selectedPlan","nextStep","all","order","perPage","pagination","catchError","navigateByUrl","mergeMap","AcceptedPaymentsHeaderComponent","acceptedCards","getJson","card","getAssetUrl","PlanFeaturesListComponent","showCheckIcons","dense","UpgradePageAsideComponent","OrderSummaryComponent","CreditCardFormComponent","zone","lazyLoader","theme","created","submitButtonText","showSubmitButton","showOrderSummary","error$","stripeElements","resetForm","initStripe","destroyStripe","error","stripe","createToken","addCardToUser","stripeToken","addCard","loadAsset","Stripe","elements","isDarkMode","selectedTheme$","is_dark","field","classes","color","mount","on","onChange","bind","unmount","destroy","run","submitForm","CreateSubscriptionPanelComponent","paypal","selectedIndex$","loading","submitText","disablePaypalTab","startLoading","createOnStripe","getNewSubscriptionPayload","completeSubscription","confirmCardPayment","errors","Default","stopLoading","payment_intent_secret","result","action","onAction","finalizeOnStripe","reference","finalResponse","payload","UserSubscriptionPageComponent","UserSubscribedGuard","CurrenciesListResolver","InvoiceService","modal","activeSubscription$","onGracePeriod","ends_at","split","title","body","afterClosed","confirmed","cancelSubscription","resume","setSubscription","request","updateUserAndSubscription","valueLists","currencies","toPromise","InvoiceIndexComponent","PricingPageComponent","RedirectToUpgradePage","BillingRoutingModule","invoices","invoices$","userId","invoice","uuid","routes","path","component","canActivate","listener","isLoggedIn","canActivateChild","forChild","SelectPlanPanelComponent","hasRecommendedPlan","recommended","setTimeout","model$","userSubscribedToPlan","ContactWidgetComponent","UserNotSubscribedGuard","SelectPlanPeriodPanelComponent","BillingModule","showSidebar","baseAmount","getAmountPerDay","amount","ceil","days","interval_count","enterDuration","_c2","MAT_RADIO_DEFAULT_OPTIONS","nextUniqueId","MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR","MatRadioGroup","multi","MatRadioChange","source","MAT_RADIO_GROUP","_MatRadioGroupBase","_changeDetector","_value","_selected","_isInitialized","_labelPosition","_disabled","_required","_controlValueAccessorChangeFn","onTouched","checked","_radios","radio","_markForCheck","isDisabled","disabled","_updateRadioButtonNames","_markRadiosForCheck","newValue","_updateSelectedRadioFromValue","_checkSelectedRadioButton","required","ɵMatRadioGroup_BaseFactory","MatRadioButton","_MatRadioButtonMixinBase","_MatRadioButtonBase","radioGroup","_radioDispatcher","_animationMode","_providerOverride","_uniqueId","_checked","_removeUniqueSelectionListener","listen","options","_inputElement","focusOrigin","_touch","stopPropagation","groupValueChanged","_emitChangeEvent","newCheckedState","notify","_setDisabled","_color","ariaDescribedby","changeDetector","focusMonitor","radioDispatcher","animationMode","providerOverride","tabIndex","_onInputChange","_onInputClick","_r0","inputId","_isRippleDisabled","MatRadioModule","BASE_URI","put","ids","LocalStorage","storage","localStorageAvailable","defaultValue","parse","getItem","setItem","removeItem","FullPlanNameModule","FormattedDatePipe","_locale","format","angularPipe","timezone","locale","Subscriptions","newPlanId","MatTab_ng_template_0_Template","MatTabBody_ng_template_2_Template","a0","animationDuration","a1","_c3","_c4","MatTabGroup_div_2_ng_template_2_ng_template_0_Template","MatTabGroup_div_2_ng_template_2_Template","tab_r4","templateLabel","MatTabGroup_div_2_ng_template_3_Template","textLabel","MatTabGroup_div_2_Template","i_r5","ctx_r11","_getTabLabelId","_getTabIndex","_tabs","_getTabContentId","MatTabGroup_mat_tab_body_5_Template","_r16","_removeTabBodyWrapperHeight","_setTabBodyWrapperHeight","tab_r13","i_r14","_c5","_c6","_c7","_c8","_c9","_MAT_INK_BAR_POSITIONER","offsetLeft","offsetWidth","MatInkBar","_ngZone","_inkBarPositioner","show","requestAnimationFrame","runOutsideAngular","_setStyles","inkBar","MAT_TAB_CONTENT","MatTabContent","MAT_TAB_LABEL","MatTabLabel","ɵMatTabLabel_BaseFactory","_MatTabMixinBase","MAT_TAB_GROUP","MatTab","_viewContainerRef","_closestTabGroup","_contentPortal","_stateChanges","isActive","hasOwnProperty","_explicitContent","_implicitContent","matTabsAnimations","translateTab","minHeight","MatTabBodyPortal","componentFactoryResolver","viewContainerRef","_host","_centeringSub","EMPTY","_leavingSub","_beforeCentering","_isCenterPosition","_position","isCentering","hasAttached","attach","_content","_afterLeavingCenter","detach","MatTabBody","_MatTabBodyBase","_dirChangeSubscription","_translateTabComplete","_onCentering","_onCentered","_computePositionAnimationState","_computePositionFromOrigin","clientHeight","_getLayoutDirection","_positionIndex","_portalHost","_onTranslateTabStarted","MAT_TABS_CONFIG","MatTabChangeEvent","_MatTabGroupMixinBase","_MatTabGroupBase","defaultConfig","_indexToSelect","_tabBodyWrapperHeight","_tabsSubscription","_tabLabelSubscription","_dynamicHeight","headerPosition","selectedIndexChange","focusChange","selectedTabChange","disablePagination","indexToSelect","_clampTabIndex","isFirstRun","_createChangeEvent","tab","_subscribeToAllTabChanges","_subscribeToTabLabels","tabs","_allTabs","notifyOnChanges","_tabHeader","_alignInkBarToSelectedTab","tabHeight","wrapper","_tabBodyWrapper","offsetHeight","tabHeader","focusIndex","idx","_animationDuration","test","_backgroundColor","backgroundColor","dynamicHeight","MatTabGroup","_focusChanged","MatTabHeader","MatTabLabelWrapper","_MatTabLabelWrapperMixinBase","passiveEventListenerOptions","passive","MatPaginatedTabHeader","_viewportRuler","_scrollDistance","_selectedIndexChanged","_showPaginationControls","_disableScrollAfter","_disableScrollBefore","_stopScrolling","selectFocusedIndex","indexFocused","_stopInterval","_previousPaginator","_handlePaginatorPress","_nextPaginator","dirChange","resize","realign","updatePagination","_items","newFocusIndex","_setTabFocus","_tabLabelCount","_scrollToLabel","_checkScrollingControls","_scrollDistanceChanged","_updateTabScrollPosition","_itemSelected","_currentTextContent","_checkPaginationEnabled","containerEl","_tabListContainer","scrollLeft","scrollWidth","scrollDistance","platform","translateX","_tabList","round","TRIDENT","EDGE","_scrollTo","_scrollHeader","labelIndex","selectedLabel","viewLength","labelBeforePos","labelAfterPos","beforeVisiblePos","afterVisiblePos","isEnabled","_getMaxScrollDistance","selectedItem","selectedLabelWrapper","_inkBar","alignToElement","hide","mouseEvent","button","maxScrollDistance","distance","_isValidIndex","_MatTabHeaderBase","viewportRuler","ngZone","_disableRipple","_handlePaginatorClick","_handleKeydown","_onContentChanges","_MatTabNavBase","updateActiveLink","_element","MatTabNav","MatTabLink","attrs","_MatTabLinkMixinBase","_MatTabLinkBase","_tabNavBar","globalRippleOptions","_isActive","rippleConfig","parseInt","exitDuration","tabNavBar","_tabLinkRipple","setupTriggerEvents","_removeTriggerEvents","MatTabsModule"],"mappings":"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","file":"x","sourcesContent":["import { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { isDataSource } from '@angular/cdk/collections';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\nimport * as ɵngcc2 from '@angular/cdk/platform';\n\nconst _c0 = [[[\"caption\"]], [[\"colgroup\"], [\"col\"]]];\nconst _c1 = [\"caption\", \"colgroup, col\"];\nfunction CdkTextColumn_th_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"th\", 3);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"text-align\", ctx_r0.justify);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r0.headerText, \" \");\n} }\nfunction CdkTextColumn_td_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\", 4);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const data_r2 = ctx.$implicit;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"text-align\", ctx_r1.justify);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r1.dataAccessor(data_r2, ctx_r1.name), \" \");\n} }\nexport { DataSource } from '@angular/cdk/collections';\nimport { Platform } from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\nimport { InjectionToken, Directive, TemplateRef, Inject, Optional, Input, ContentChild, ElementRef, IterableDiffers, ViewContainerRef, Component, ChangeDetectionStrategy, ViewEncapsulation, EmbeddedViewRef, isDevMode, ChangeDetectorRef, Attribute, ViewChild, ContentChildren, NgModule } from '@angular/core';\nimport { Subject, BehaviorSubject, isObservable, of } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Mixin to provide a directive with a function that checks if the sticky input has been\n * changed since the last time the function was called. Essentially adds a dirty-check to the\n * sticky value.\n * @docs-private\n */\nfunction mixinHasStickyInput(base) {\n    return class extends base {\n        constructor(...args) {\n            super(...args);\n            this._sticky = false;\n            /** Whether the sticky input has changed since it was last checked. */\n            this._hasStickyChanged = false;\n        }\n        /** Whether sticky positioning should be applied. */\n        get sticky() { return this._sticky; }\n        set sticky(v) {\n            const prevValue = this._sticky;\n            this._sticky = coerceBooleanProperty(v);\n            this._hasStickyChanged = prevValue !== this._sticky;\n        }\n        /** Whether the sticky value has changed since this was last called. */\n        hasStickyChanged() {\n            const hasStickyChanged = this._hasStickyChanged;\n            this._hasStickyChanged = false;\n            return hasStickyChanged;\n        }\n        /** Resets the dirty check for cases where the sticky state has been used without checking. */\n        resetStickyChanged() {\n            this._hasStickyChanged = false;\n        }\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Used to provide a table to some of the sub-components without causing a circular dependency.\n * @docs-private\n */\nconst CDK_TABLE = new InjectionToken('CDK_TABLE');\n/** Injection token that can be used to specify the text column options. */\nconst TEXT_COLUMN_OPTIONS = new InjectionToken('text-column-options');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Cell definition for a CDK table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\nclass CdkCellDef {\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkCellDef.ɵfac = function CdkCellDef_Factory(t) { return new (t || CdkCellDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkCellDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkCellDef, selectors: [[\"\", \"cdkCellDef\", \"\"]] });\nCdkCellDef.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkCellDef, [{\n        type: Directive,\n        args: [{ selector: '[cdkCellDef]' }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\n/**\n * Header cell definition for a CDK table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\nclass CdkHeaderCellDef {\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkHeaderCellDef.ɵfac = function CdkHeaderCellDef_Factory(t) { return new (t || CdkHeaderCellDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkHeaderCellDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkHeaderCellDef, selectors: [[\"\", \"cdkHeaderCellDef\", \"\"]] });\nCdkHeaderCellDef.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkHeaderCellDef, [{\n        type: Directive,\n        args: [{ selector: '[cdkHeaderCellDef]' }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\n/**\n * Footer cell definition for a CDK table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n */\nclass CdkFooterCellDef {\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkFooterCellDef.ɵfac = function CdkFooterCellDef_Factory(t) { return new (t || CdkFooterCellDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkFooterCellDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkFooterCellDef, selectors: [[\"\", \"cdkFooterCellDef\", \"\"]] });\nCdkFooterCellDef.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkFooterCellDef, [{\n        type: Directive,\n        args: [{ selector: '[cdkFooterCellDef]' }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\n// Boilerplate for applying mixins to CdkColumnDef.\n/** @docs-private */\nclass CdkColumnDefBase {\n}\nconst _CdkColumnDefBase = mixinHasStickyInput(CdkColumnDefBase);\n/**\n * Column definition for the CDK table.\n * Defines a set of cells available for a table column.\n */\nclass CdkColumnDef extends _CdkColumnDefBase {\n    constructor(_table) {\n        super();\n        this._table = _table;\n        this._stickyEnd = false;\n    }\n    /** Unique name for this column. */\n    get name() {\n        return this._name;\n    }\n    set name(name) {\n        // If the directive is set without a name (updated programatically), then this setter will\n        // trigger with an empty string and should not overwrite the programatically set value.\n        if (name) {\n            this._name = name;\n            this.cssClassFriendlyName = name.replace(/[^a-z0-9_-]/ig, '-');\n        }\n    }\n    /**\n     * Whether this column should be sticky positioned on the end of the row. Should make sure\n     * that it mimics the `CanStick` mixin such that `_hasStickyChanged` is set to true if the value\n     * has been changed.\n     */\n    get stickyEnd() {\n        return this._stickyEnd;\n    }\n    set stickyEnd(v) {\n        const prevValue = this._stickyEnd;\n        this._stickyEnd = coerceBooleanProperty(v);\n        this._hasStickyChanged = prevValue !== this._stickyEnd;\n    }\n}\nCdkColumnDef.ɵfac = function CdkColumnDef_Factory(t) { return new (t || CdkColumnDef)(ɵngcc0.ɵɵdirectiveInject(CDK_TABLE, 8)); };\nCdkColumnDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkColumnDef, selectors: [[\"\", \"cdkColumnDef\", \"\"]], contentQueries: function CdkColumnDef_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkCellDef, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkHeaderCellDef, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkFooterCellDef, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.cell = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.headerCell = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.footerCell = _t.first);\n    } }, inputs: { sticky: \"sticky\", name: [\"cdkColumnDef\", \"name\"], stickyEnd: \"stickyEnd\" }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: CdkColumnDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nCdkColumnDef.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_TABLE,] }, { type: Optional }] }\n];\nCdkColumnDef.propDecorators = {\n    name: [{ type: Input, args: ['cdkColumnDef',] }],\n    stickyEnd: [{ type: Input, args: ['stickyEnd',] }],\n    cell: [{ type: ContentChild, args: [CdkCellDef,] }],\n    headerCell: [{ type: ContentChild, args: [CdkHeaderCellDef,] }],\n    footerCell: [{ type: ContentChild, args: [CdkFooterCellDef,] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkColumnDef, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkColumnDef]',\n                inputs: ['sticky'],\n                providers: [{ provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: CdkColumnDef }]\n            }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_TABLE]\n            }, {\n                type: Optional\n            }] }]; }, { name: [{\n            type: Input,\n            args: ['cdkColumnDef']\n        }], stickyEnd: [{\n            type: Input,\n            args: ['stickyEnd']\n        }], cell: [{\n            type: ContentChild,\n            args: [CdkCellDef]\n        }], headerCell: [{\n            type: ContentChild,\n            args: [CdkHeaderCellDef]\n        }], footerCell: [{\n            type: ContentChild,\n            args: [CdkFooterCellDef]\n        }] }); })();\n/** Base class for the cells. Adds a CSS classname that identifies the column it renders in. */\nclass BaseCdkCell {\n    constructor(columnDef, elementRef) {\n        const columnClassName = `cdk-column-${columnDef.cssClassFriendlyName}`;\n        elementRef.nativeElement.classList.add(columnClassName);\n    }\n}\n/** Header cell template container that adds the right classes and role. */\nclass CdkHeaderCell extends BaseCdkCell {\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n    }\n}\nCdkHeaderCell.ɵfac = function CdkHeaderCell_Factory(t) { return new (t || CdkHeaderCell)(ɵngcc0.ɵɵdirectiveInject(CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nCdkHeaderCell.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkHeaderCell, selectors: [[\"cdk-header-cell\"], [\"th\", \"cdk-header-cell\", \"\"]], hostAttrs: [\"role\", \"columnheader\", 1, \"cdk-header-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nCdkHeaderCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkHeaderCell, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-header-cell, th[cdk-header-cell]',\n                host: {\n                    'class': 'cdk-header-cell',\n                    'role': 'columnheader'\n                }\n            }]\n    }], function () { return [{ type: CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n/** Footer cell template container that adds the right classes and role. */\nclass CdkFooterCell extends BaseCdkCell {\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n    }\n}\nCdkFooterCell.ɵfac = function CdkFooterCell_Factory(t) { return new (t || CdkFooterCell)(ɵngcc0.ɵɵdirectiveInject(CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nCdkFooterCell.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkFooterCell, selectors: [[\"cdk-footer-cell\"], [\"td\", \"cdk-footer-cell\", \"\"]], hostAttrs: [\"role\", \"gridcell\", 1, \"cdk-footer-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nCdkFooterCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkFooterCell, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-footer-cell, td[cdk-footer-cell]',\n                host: {\n                    'class': 'cdk-footer-cell',\n                    'role': 'gridcell'\n                }\n            }]\n    }], function () { return [{ type: CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n/** Cell template container that adds the right classes and role. */\nclass CdkCell extends BaseCdkCell {\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n    }\n}\nCdkCell.ɵfac = function CdkCell_Factory(t) { return new (t || CdkCell)(ɵngcc0.ɵɵdirectiveInject(CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nCdkCell.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkCell, selectors: [[\"cdk-cell\"], [\"td\", \"cdk-cell\", \"\"]], hostAttrs: [\"role\", \"gridcell\", 1, \"cdk-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nCdkCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkCell, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-cell, td[cdk-cell]',\n                host: {\n                    'class': 'cdk-cell',\n                    'role': 'gridcell'\n                }\n            }]\n    }], function () { return [{ type: CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The row template that can be used by the mat-table. Should not be used outside of the\n * material library.\n */\nconst CDK_ROW_TEMPLATE = `<ng-container cdkCellOutlet></ng-container>`;\n/**\n * Base class for the CdkHeaderRowDef and CdkRowDef that handles checking their columns inputs\n * for changes and notifying the table.\n */\nclass BaseRowDef {\n    constructor(\n    /** @docs-private */ template, _differs) {\n        this.template = template;\n        this._differs = _differs;\n    }\n    ngOnChanges(changes) {\n        // Create a new columns differ if one does not yet exist. Initialize it based on initial value\n        // of the columns property or an empty array if none is provided.\n        if (!this._columnsDiffer) {\n            const columns = (changes['columns'] && changes['columns'].currentValue) || [];\n            this._columnsDiffer = this._differs.find(columns).create();\n            this._columnsDiffer.diff(columns);\n        }\n    }\n    /**\n     * Returns the difference between the current columns and the columns from the last diff, or null\n     * if there is no difference.\n     */\n    getColumnsDiff() {\n        return this._columnsDiffer.diff(this.columns);\n    }\n    /** Gets this row def's relevant cell template from the provided column def. */\n    extractCellTemplate(column) {\n        if (this instanceof CdkHeaderRowDef) {\n            return column.headerCell.template;\n        }\n        if (this instanceof CdkFooterRowDef) {\n            return column.footerCell.template;\n        }\n        else {\n            return column.cell.template;\n        }\n    }\n}\nBaseRowDef.ɵfac = function BaseRowDef_Factory(t) { return new (t || BaseRowDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers)); };\nBaseRowDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: BaseRowDef, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nBaseRowDef.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: IterableDiffers }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BaseRowDef, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }]; }, null); })();\n// Boilerplate for applying mixins to CdkHeaderRowDef.\n/** @docs-private */\nclass CdkHeaderRowDefBase extends BaseRowDef {\n}\nconst _CdkHeaderRowDefBase = mixinHasStickyInput(CdkHeaderRowDefBase);\n/**\n * Header row definition for the CDK table.\n * Captures the header row's template and other header properties such as the columns to display.\n */\nclass CdkHeaderRowDef extends _CdkHeaderRowDefBase {\n    constructor(template, _differs, _table) {\n        super(template, _differs);\n        this._table = _table;\n    }\n    // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n    // Explicitly define it so that the method is called as part of the Angular lifecycle.\n    ngOnChanges(changes) {\n        super.ngOnChanges(changes);\n    }\n}\nCdkHeaderRowDef.ɵfac = function CdkHeaderRowDef_Factory(t) { return new (t || CdkHeaderRowDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(CDK_TABLE, 8)); };\nCdkHeaderRowDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkHeaderRowDef, selectors: [[\"\", \"cdkHeaderRowDef\", \"\"]], inputs: { columns: [\"cdkHeaderRowDef\", \"columns\"], sticky: [\"cdkHeaderRowDefSticky\", \"sticky\"] }, features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\nCdkHeaderRowDef.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: IterableDiffers },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_TABLE,] }, { type: Optional }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkHeaderRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkHeaderRowDef]',\n                inputs: ['columns: cdkHeaderRowDef', 'sticky: cdkHeaderRowDefSticky']\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_TABLE]\n            }, {\n                type: Optional\n            }] }]; }, null); })();\n// Boilerplate for applying mixins to CdkFooterRowDef.\n/** @docs-private */\nclass CdkFooterRowDefBase extends BaseRowDef {\n}\nconst _CdkFooterRowDefBase = mixinHasStickyInput(CdkFooterRowDefBase);\n/**\n * Footer row definition for the CDK table.\n * Captures the footer row's template and other footer properties such as the columns to display.\n */\nclass CdkFooterRowDef extends _CdkFooterRowDefBase {\n    constructor(template, _differs, _table) {\n        super(template, _differs);\n        this._table = _table;\n    }\n    // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n    // Explicitly define it so that the method is called as part of the Angular lifecycle.\n    ngOnChanges(changes) {\n        super.ngOnChanges(changes);\n    }\n}\nCdkFooterRowDef.ɵfac = function CdkFooterRowDef_Factory(t) { return new (t || CdkFooterRowDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(CDK_TABLE, 8)); };\nCdkFooterRowDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkFooterRowDef, selectors: [[\"\", \"cdkFooterRowDef\", \"\"]], inputs: { columns: [\"cdkFooterRowDef\", \"columns\"], sticky: [\"cdkFooterRowDefSticky\", \"sticky\"] }, features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\nCdkFooterRowDef.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: IterableDiffers },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_TABLE,] }, { type: Optional }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkFooterRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkFooterRowDef]',\n                inputs: ['columns: cdkFooterRowDef', 'sticky: cdkFooterRowDefSticky']\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_TABLE]\n            }, {\n                type: Optional\n            }] }]; }, null); })();\n/**\n * Data row definition for the CDK table.\n * Captures the header row's template and other row properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n */\nclass CdkRowDef extends BaseRowDef {\n    // TODO(andrewseguin): Add an input for providing a switch function to determine\n    //   if this template should be used.\n    constructor(template, _differs, _table) {\n        super(template, _differs);\n        this._table = _table;\n    }\n}\nCdkRowDef.ɵfac = function CdkRowDef_Factory(t) { return new (t || CdkRowDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(CDK_TABLE, 8)); };\nCdkRowDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkRowDef, selectors: [[\"\", \"cdkRowDef\", \"\"]], inputs: { columns: [\"cdkRowDefColumns\", \"columns\"], when: [\"cdkRowDefWhen\", \"when\"] }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nCdkRowDef.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: IterableDiffers },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_TABLE,] }, { type: Optional }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkRowDef]',\n                inputs: ['columns: cdkRowDefColumns', 'when: cdkRowDefWhen']\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_TABLE]\n            }, {\n                type: Optional\n            }] }]; }, null); })();\n/**\n * Outlet for rendering cells inside of a row or header row.\n * @docs-private\n */\nclass CdkCellOutlet {\n    constructor(_viewContainer) {\n        this._viewContainer = _viewContainer;\n        CdkCellOutlet.mostRecentCellOutlet = this;\n    }\n    ngOnDestroy() {\n        // If this was the last outlet being rendered in the view, remove the reference\n        // from the static property after it has been destroyed to avoid leaking memory.\n        if (CdkCellOutlet.mostRecentCellOutlet === this) {\n            CdkCellOutlet.mostRecentCellOutlet = null;\n        }\n    }\n}\nCdkCellOutlet.ɵfac = function CdkCellOutlet_Factory(t) { return new (t || CdkCellOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef)); };\nCdkCellOutlet.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkCellOutlet, selectors: [[\"\", \"cdkCellOutlet\", \"\"]] });\n/**\n * Static property containing the latest constructed instance of this class.\n * Used by the CDK table when each CdkHeaderRow and CdkRow component is created using\n * createEmbeddedView. After one of these components are created, this property will provide\n * a handle to provide that component's cells and context. After init, the CdkCellOutlet will\n * construct the cells with the provided context.\n */\nCdkCellOutlet.mostRecentCellOutlet = null;\nCdkCellOutlet.ctorParameters = () => [\n    { type: ViewContainerRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkCellOutlet, [{\n        type: Directive,\n        args: [{ selector: '[cdkCellOutlet]' }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }]; }, null); })();\n/** Header template container that contains the cell outlet. Adds the right class and role. */\nclass CdkHeaderRow {\n}\nCdkHeaderRow.ɵfac = function CdkHeaderRow_Factory(t) { return new (t || CdkHeaderRow)(); };\nCdkHeaderRow.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CdkHeaderRow, selectors: [[\"cdk-header-row\"], [\"tr\", \"cdk-header-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"cdk-header-row\"], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function CdkHeaderRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [CdkCellOutlet], encapsulation: 2 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkHeaderRow, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-header-row, tr[cdk-header-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'cdk-header-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], null, null); })();\n/** Footer template container that contains the cell outlet. Adds the right class and role. */\nclass CdkFooterRow {\n}\nCdkFooterRow.ɵfac = function CdkFooterRow_Factory(t) { return new (t || CdkFooterRow)(); };\nCdkFooterRow.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CdkFooterRow, selectors: [[\"cdk-footer-row\"], [\"tr\", \"cdk-footer-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"cdk-footer-row\"], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function CdkFooterRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [CdkCellOutlet], encapsulation: 2 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkFooterRow, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-footer-row, tr[cdk-footer-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'cdk-footer-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], null, null); })();\n/** Data row template container that contains the cell outlet. Adds the right class and role. */\nclass CdkRow {\n}\nCdkRow.ɵfac = function CdkRow_Factory(t) { return new (t || CdkRow)(); };\nCdkRow.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CdkRow, selectors: [[\"cdk-row\"], [\"tr\", \"cdk-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"cdk-row\"], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function CdkRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [CdkCellOutlet], encapsulation: 2 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkRow, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-row, tr[cdk-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'cdk-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], null, null); })();\n/** Row that can be used to display a message when no data is shown in the table. */\nclass CdkNoDataRow {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nCdkNoDataRow.ɵfac = function CdkNoDataRow_Factory(t) { return new (t || CdkNoDataRow)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkNoDataRow.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkNoDataRow, selectors: [[\"ng-template\", \"cdkNoDataRow\", \"\"]] });\nCdkNoDataRow.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkNoDataRow, [{\n        type: Directive,\n        args: [{\n                selector: 'ng-template[cdkNoDataRow]'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * List of all possible directions that can be used for sticky positioning.\n * @docs-private\n */\nconst STICKY_DIRECTIONS = ['top', 'bottom', 'left', 'right'];\n/**\n * Applies and removes sticky positioning styles to the `CdkTable` rows and columns cells.\n * @docs-private\n */\nclass StickyStyler {\n    /**\n     * @param _isNativeHtmlTable Whether the sticky logic should be based on a table\n     *     that uses the native `<table>` element.\n     * @param _stickCellCss The CSS class that will be applied to every row/cell that has\n     *     sticky positioning applied.\n     * @param direction The directionality context of the table (ltr/rtl); affects column positioning\n     *     by reversing left/right positions.\n     * @param _isBrowser Whether the table is currently being rendered on the server or the client.\n     */\n    constructor(_isNativeHtmlTable, _stickCellCss, direction, _isBrowser = true) {\n        this._isNativeHtmlTable = _isNativeHtmlTable;\n        this._stickCellCss = _stickCellCss;\n        this.direction = direction;\n        this._isBrowser = _isBrowser;\n    }\n    /**\n     * Clears the sticky positioning styles from the row and its cells by resetting the `position`\n     * style, setting the zIndex to 0, and unsetting each provided sticky direction.\n     * @param rows The list of rows that should be cleared from sticking in the provided directions\n     * @param stickyDirections The directions that should no longer be set as sticky on the rows.\n     */\n    clearStickyPositioning(rows, stickyDirections) {\n        for (const row of rows) {\n            // If the row isn't an element (e.g. if it's an `ng-container`),\n            // it won't have inline styles or `children` so we skip it.\n            if (row.nodeType !== row.ELEMENT_NODE) {\n                continue;\n            }\n            this._removeStickyStyle(row, stickyDirections);\n            for (let i = 0; i < row.children.length; i++) {\n                const cell = row.children[i];\n                this._removeStickyStyle(cell, stickyDirections);\n            }\n        }\n    }\n    /**\n     * Applies sticky left and right positions to the cells of each row according to the sticky\n     * states of the rendered column definitions.\n     * @param rows The rows that should have its set of cells stuck according to the sticky states.\n     * @param stickyStartStates A list of boolean states where each state represents whether the cell\n     *     in this index position should be stuck to the start of the row.\n     * @param stickyEndStates A list of boolean states where each state represents whether the cell\n     *     in this index position should be stuck to the end of the row.\n     */\n    updateStickyColumns(rows, stickyStartStates, stickyEndStates) {\n        const hasStickyColumns = stickyStartStates.some(state => state) || stickyEndStates.some(state => state);\n        if (!rows.length || !hasStickyColumns || !this._isBrowser) {\n            return;\n        }\n        const firstRow = rows[0];\n        const numCells = firstRow.children.length;\n        const cellWidths = this._getCellWidths(firstRow);\n        const startPositions = this._getStickyStartColumnPositions(cellWidths, stickyStartStates);\n        const endPositions = this._getStickyEndColumnPositions(cellWidths, stickyEndStates);\n        const isRtl = this.direction === 'rtl';\n        for (const row of rows) {\n            for (let i = 0; i < numCells; i++) {\n                const cell = row.children[i];\n                if (stickyStartStates[i]) {\n                    this._addStickyStyle(cell, isRtl ? 'right' : 'left', startPositions[i]);\n                }\n                if (stickyEndStates[i]) {\n                    this._addStickyStyle(cell, isRtl ? 'left' : 'right', endPositions[i]);\n                }\n            }\n        }\n    }\n    /**\n     * Applies sticky positioning to the row's cells if using the native table layout, and to the\n     * row itself otherwise.\n     * @param rowsToStick The list of rows that should be stuck according to their corresponding\n     *     sticky state and to the provided top or bottom position.\n     * @param stickyStates A list of boolean states where each state represents whether the row\n     *     should be stuck in the particular top or bottom position.\n     * @param position The position direction in which the row should be stuck if that row should be\n     *     sticky.\n     *\n     */\n    stickRows(rowsToStick, stickyStates, position) {\n        // Since we can't measure the rows on the server, we can't stick the rows properly.\n        if (!this._isBrowser) {\n            return;\n        }\n        // If positioning the rows to the bottom, reverse their order when evaluating the sticky\n        // position such that the last row stuck will be \"bottom: 0px\" and so on. Note that the\n        // sticky states need to be reversed as well.\n        const rows = position === 'bottom' ? rowsToStick.slice().reverse() : rowsToStick;\n        const states = position === 'bottom' ? stickyStates.slice().reverse() : stickyStates;\n        let stickyHeight = 0;\n        for (let rowIndex = 0; rowIndex < rows.length; rowIndex++) {\n            if (!states[rowIndex]) {\n                continue;\n            }\n            const row = rows[rowIndex];\n            if (this._isNativeHtmlTable) {\n                for (let j = 0; j < row.children.length; j++) {\n                    const cell = row.children[j];\n                    this._addStickyStyle(cell, position, stickyHeight);\n                }\n            }\n            else {\n                // Flex does not respect the stick positioning on the cells, needs to be applied to the row.\n                // If this is applied on a native table, Safari causes the header to fly in wrong direction.\n                this._addStickyStyle(row, position, stickyHeight);\n            }\n            if (rowIndex === rows.length - 1) {\n                // prevent unnecessary reflow from getBoundingClientRect()\n                return;\n            }\n            stickyHeight += row.getBoundingClientRect().height;\n        }\n    }\n    /**\n     * When using the native table in Safari, sticky footer cells do not stick. The only way to stick\n     * footer rows is to apply sticky styling to the tfoot container. This should only be done if\n     * all footer rows are sticky. If not all footer rows are sticky, remove sticky positioning from\n     * the tfoot element.\n     */\n    updateStickyFooterContainer(tableElement, stickyStates) {\n        if (!this._isNativeHtmlTable) {\n            return;\n        }\n        const tfoot = tableElement.querySelector('tfoot');\n        if (stickyStates.some(state => !state)) {\n            this._removeStickyStyle(tfoot, ['bottom']);\n        }\n        else {\n            this._addStickyStyle(tfoot, 'bottom', 0);\n        }\n    }\n    /**\n     * Removes the sticky style on the element by removing the sticky cell CSS class, re-evaluating\n     * the zIndex, removing each of the provided sticky directions, and removing the\n     * sticky position if there are no more directions.\n     */\n    _removeStickyStyle(element, stickyDirections) {\n        for (const dir of stickyDirections) {\n            element.style[dir] = '';\n        }\n        element.style.zIndex = this._getCalculatedZIndex(element);\n        // If the element no longer has any more sticky directions, remove sticky positioning and\n        // the sticky CSS class.\n        const hasDirection = STICKY_DIRECTIONS.some(dir => !!element.style[dir]);\n        if (!hasDirection) {\n            element.style.position = '';\n            element.classList.remove(this._stickCellCss);\n        }\n    }\n    /**\n     * Adds the sticky styling to the element by adding the sticky style class, changing position\n     * to be sticky (and -webkit-sticky), setting the appropriate zIndex, and adding a sticky\n     * direction and value.\n     */\n    _addStickyStyle(element, dir, dirValue) {\n        element.classList.add(this._stickCellCss);\n        element.style[dir] = `${dirValue}px`;\n        element.style.cssText += 'position: -webkit-sticky; position: sticky; ';\n        element.style.zIndex = this._getCalculatedZIndex(element);\n    }\n    /**\n     * Calculate what the z-index should be for the element, depending on what directions (top,\n     * bottom, left, right) have been set. It should be true that elements with a top direction\n     * should have the highest index since these are elements like a table header. If any of those\n     * elements are also sticky in another direction, then they should appear above other elements\n     * that are only sticky top (e.g. a sticky column on a sticky header). Bottom-sticky elements\n     * (e.g. footer rows) should then be next in the ordering such that they are below the header\n     * but above any non-sticky elements. Finally, left/right sticky elements (e.g. sticky columns)\n     * should minimally increment so that they are above non-sticky elements but below top and bottom\n     * elements.\n     */\n    _getCalculatedZIndex(element) {\n        const zIndexIncrements = {\n            top: 100,\n            bottom: 10,\n            left: 1,\n            right: 1,\n        };\n        let zIndex = 0;\n        // Use `Iterable` instead of `Array` because TypeScript, as of 3.6.3,\n        // loses the array generic type in the `for of`. But we *also* have to use `Array` because\n        // typescript won't iterate over an `Iterable` unless you compile with `--downlevelIteration`\n        for (const dir of STICKY_DIRECTIONS) {\n            if (element.style[dir]) {\n                zIndex += zIndexIncrements[dir];\n            }\n        }\n        return zIndex ? `${zIndex}` : '';\n    }\n    /** Gets the widths for each cell in the provided row. */\n    _getCellWidths(row) {\n        const cellWidths = [];\n        const firstRowCells = row.children;\n        for (let i = 0; i < firstRowCells.length; i++) {\n            let cell = firstRowCells[i];\n            cellWidths.push(cell.getBoundingClientRect().width);\n        }\n        return cellWidths;\n    }\n    /**\n     * Determines the left and right positions of each sticky column cell, which will be the\n     * accumulation of all sticky column cell widths to the left and right, respectively.\n     * Non-sticky cells do not need to have a value set since their positions will not be applied.\n     */\n    _getStickyStartColumnPositions(widths, stickyStates) {\n        const positions = [];\n        let nextPosition = 0;\n        for (let i = 0; i < widths.length; i++) {\n            if (stickyStates[i]) {\n                positions[i] = nextPosition;\n                nextPosition += widths[i];\n            }\n        }\n        return positions;\n    }\n    /**\n     * Determines the left and right positions of each sticky column cell, which will be the\n     * accumulation of all sticky column cell widths to the left and right, respectively.\n     * Non-sticky cells do not need to have a value set since their positions will not be applied.\n     */\n    _getStickyEndColumnPositions(widths, stickyStates) {\n        const positions = [];\n        let nextPosition = 0;\n        for (let i = widths.length; i > 0; i--) {\n            if (stickyStates[i]) {\n                positions[i] = nextPosition;\n                nextPosition += widths[i];\n            }\n        }\n        return positions;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an error to be thrown when attempting to find an unexisting column.\n * @param id Id whose lookup failed.\n * @docs-private\n */\nfunction getTableUnknownColumnError(id) {\n    return Error(`Could not find column with id \"${id}\".`);\n}\n/**\n * Returns an error to be thrown when two column definitions have the same name.\n * @docs-private\n */\nfunction getTableDuplicateColumnNameError(name) {\n    return Error(`Duplicate column definition name provided: \"${name}\".`);\n}\n/**\n * Returns an error to be thrown when there are multiple rows that are missing a when function.\n * @docs-private\n */\nfunction getTableMultipleDefaultRowDefsError() {\n    return Error(`There can only be one default row without a when predicate function.`);\n}\n/**\n * Returns an error to be thrown when there are no matching row defs for a particular set of data.\n * @docs-private\n */\nfunction getTableMissingMatchingRowDefError(data) {\n    return Error(`Could not find a matching row definition for the` +\n        `provided row data: ${JSON.stringify(data)}`);\n}\n/**\n * Returns an error to be thrown when there is no row definitions present in the content.\n * @docs-private\n */\nfunction getTableMissingRowDefsError() {\n    return Error('Missing definitions for header, footer, and row; ' +\n        'cannot determine which columns should be rendered.');\n}\n/**\n * Returns an error to be thrown when the data source does not match the compatible types.\n * @docs-private\n */\nfunction getTableUnknownDataSourceError() {\n    return Error(`Provided data source did not match an array, Observable, or DataSource`);\n}\n/**\n * Returns an error to be thrown when the text column cannot find a parent table to inject.\n * @docs-private\n */\nfunction getTableTextColumnMissingParentTableError() {\n    return Error(`Text column could not find a parent table for registration.`);\n}\n/**\n * Returns an error to be thrown when a table text column doesn't have a name.\n * @docs-private\n */\nfunction getTableTextColumnMissingNameError() {\n    return Error(`Table text column must have a name.`);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert data rows.\n * @docs-private\n */\nclass DataRowOutlet {\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nDataRowOutlet.ɵfac = function DataRowOutlet_Factory(t) { return new (t || DataRowOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nDataRowOutlet.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: DataRowOutlet, selectors: [[\"\", \"rowOutlet\", \"\"]] });\nDataRowOutlet.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DataRowOutlet, [{\n        type: Directive,\n        args: [{ selector: '[rowOutlet]' }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert the header.\n * @docs-private\n */\nclass HeaderRowOutlet {\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nHeaderRowOutlet.ɵfac = function HeaderRowOutlet_Factory(t) { return new (t || HeaderRowOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nHeaderRowOutlet.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: HeaderRowOutlet, selectors: [[\"\", \"headerRowOutlet\", \"\"]] });\nHeaderRowOutlet.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(HeaderRowOutlet, [{\n        type: Directive,\n        args: [{ selector: '[headerRowOutlet]' }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert the footer.\n * @docs-private\n */\nclass FooterRowOutlet {\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nFooterRowOutlet.ɵfac = function FooterRowOutlet_Factory(t) { return new (t || FooterRowOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nFooterRowOutlet.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: FooterRowOutlet, selectors: [[\"\", \"footerRowOutlet\", \"\"]] });\nFooterRowOutlet.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FooterRowOutlet, [{\n        type: Directive,\n        args: [{ selector: '[footerRowOutlet]' }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * Provides a handle for the table to grab the view\n * container's ng-container to insert the no data row.\n * @docs-private\n */\nclass NoDataRowOutlet {\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nNoDataRowOutlet.ɵfac = function NoDataRowOutlet_Factory(t) { return new (t || NoDataRowOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nNoDataRowOutlet.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NoDataRowOutlet, selectors: [[\"\", \"noDataRowOutlet\", \"\"]] });\nNoDataRowOutlet.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NoDataRowOutlet, [{\n        type: Directive,\n        args: [{ selector: '[noDataRowOutlet]' }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * The table template that can be used by the mat-table. Should not be used outside of the\n * material library.\n * @docs-private\n */\nconst CDK_TABLE_TEMPLATE = \n// Note that according to MDN, the `caption` element has to be projected as the **first**\n// element in the table. See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/caption\n`\n  <ng-content select=\"caption\"></ng-content>\n  <ng-content select=\"colgroup, col\"></ng-content>\n  <ng-container headerRowOutlet></ng-container>\n  <ng-container rowOutlet></ng-container>\n  <ng-container noDataRowOutlet></ng-container>\n  <ng-container footerRowOutlet></ng-container>\n`;\n/**\n * Class used to conveniently type the embedded view ref for rows with a context.\n * @docs-private\n */\nclass RowViewRef extends EmbeddedViewRef {\n}\n/**\n * A data table that can render a header row, data rows, and a footer row.\n * Uses the dataSource input to determine the data to be rendered. The data can be provided either\n * as a data array, an Observable stream that emits the data array to render, or a DataSource with a\n * connect function that will return an Observable stream that emits the data array to render.\n */\nclass CdkTable {\n    constructor(_differs, _changeDetectorRef, _elementRef, role, _dir, _document, _platform) {\n        this._differs = _differs;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        this._dir = _dir;\n        this._platform = _platform;\n        /** Subject that emits when the component has been destroyed. */\n        this._onDestroy = new Subject();\n        /**\n         * Map of all the user's defined columns (header, data, and footer cell template) identified by\n         * name. Collection populated by the column definitions gathered by `ContentChildren` as well as\n         * any custom column definitions added to `_customColumnDefs`.\n         */\n        this._columnDefsByName = new Map();\n        /**\n         * Column definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * column definitions as *its* content child.\n         */\n        this._customColumnDefs = new Set();\n        /**\n         * Data row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * built-in data rows as *its* content child.\n         */\n        this._customRowDefs = new Set();\n        /**\n         * Header row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * built-in header rows as *its* content child.\n         */\n        this._customHeaderRowDefs = new Set();\n        /**\n         * Footer row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has a\n         * built-in footer row as *its* content child.\n         */\n        this._customFooterRowDefs = new Set();\n        /**\n         * Whether the header row definition has been changed. Triggers an update to the header row after\n         * content is checked. Initialized as true so that the table renders the initial set of rows.\n         */\n        this._headerRowDefChanged = true;\n        /**\n         * Whether the footer row definition has been changed. Triggers an update to the footer row after\n         * content is checked. Initialized as true so that the table renders the initial set of rows.\n         */\n        this._footerRowDefChanged = true;\n        /**\n         * Cache of the latest rendered `RenderRow` objects as a map for easy retrieval when constructing\n         * a new list of `RenderRow` objects for rendering rows. Since the new list is constructed with\n         * the cached `RenderRow` objects when possible, the row identity is preserved when the data\n         * and row template matches, which allows the `IterableDiffer` to check rows by reference\n         * and understand which rows are added/moved/removed.\n         *\n         * Implemented as a map of maps where the first key is the `data: T` object and the second is the\n         * `CdkRowDef<T>` object. With the two keys, the cache points to a `RenderRow<T>` object that\n         * contains an array of created pairs. The array is necessary to handle cases where the data\n         * array contains multiple duplicate data objects and each instantiated `RenderRow` must be\n         * stored.\n         */\n        this._cachedRenderRowsMap = new Map();\n        /**\n         * CSS class added to any row or cell that has sticky positioning applied. May be overriden by\n         * table subclasses.\n         */\n        this.stickyCssClass = 'cdk-table-sticky';\n        /** Whether the no data row is currently showing anything. */\n        this._isShowingNoDataRow = false;\n        this._multiTemplateDataRows = false;\n        // TODO(andrewseguin): Remove max value as the end index\n        //   and instead calculate the view on init and scroll.\n        /**\n         * Stream containing the latest information on what rows are being displayed on screen.\n         * Can be used by the data source to as a heuristic of what data should be provided.\n         *\n         * @docs-private\n         */\n        this.viewChange = new BehaviorSubject({ start: 0, end: Number.MAX_VALUE });\n        if (!role) {\n            this._elementRef.nativeElement.setAttribute('role', 'grid');\n        }\n        this._document = _document;\n        this._isNativeHtmlTable = this._elementRef.nativeElement.nodeName === 'TABLE';\n    }\n    /**\n     * Tracking function that will be used to check the differences in data changes. Used similarly\n     * to `ngFor` `trackBy` function. Optimize row operations by identifying a row based on its data\n     * relative to the function to know if a row should be added/removed/moved.\n     * Accepts a function that takes two parameters, `index` and `item`.\n     */\n    get trackBy() {\n        return this._trackByFn;\n    }\n    set trackBy(fn) {\n        if (isDevMode() && fn != null && typeof fn !== 'function' && console &&\n            console.warn) {\n            console.warn(`trackBy must be a function, but received ${JSON.stringify(fn)}.`);\n        }\n        this._trackByFn = fn;\n    }\n    /**\n     * The table's source of data, which can be provided in three ways (in order of complexity):\n     *   - Simple data array (each object represents one table row)\n     *   - Stream that emits a data array each time the array changes\n     *   - `DataSource` object that implements the connect/disconnect interface.\n     *\n     * If a data array is provided, the table must be notified when the array's objects are\n     * added, removed, or moved. This can be done by calling the `renderRows()` function which will\n     * render the diff since the last table render. If the data array reference is changed, the table\n     * will automatically trigger an update to the rows.\n     *\n     * When providing an Observable stream, the table will trigger an update automatically when the\n     * stream emits a new array of data.\n     *\n     * Finally, when providing a `DataSource` object, the table will use the Observable stream\n     * provided by the connect function and trigger updates when that stream emits new data array\n     * values. During the table's ngOnDestroy or when the data source is removed from the table, the\n     * table will call the DataSource's `disconnect` function (may be useful for cleaning up any\n     * subscriptions registered during the connect process).\n     */\n    get dataSource() {\n        return this._dataSource;\n    }\n    set dataSource(dataSource) {\n        if (this._dataSource !== dataSource) {\n            this._switchDataSource(dataSource);\n        }\n    }\n    /**\n     * Whether to allow multiple rows per data object by evaluating which rows evaluate their 'when'\n     * predicate to true. If `multiTemplateDataRows` is false, which is the default value, then each\n     * dataobject will render the first row that evaluates its when predicate to true, in the order\n     * defined in the table, or otherwise the default row which does not have a when predicate.\n     */\n    get multiTemplateDataRows() {\n        return this._multiTemplateDataRows;\n    }\n    set multiTemplateDataRows(v) {\n        this._multiTemplateDataRows = coerceBooleanProperty(v);\n        // In Ivy if this value is set via a static attribute (e.g. <table multiTemplateDataRows>),\n        // this setter will be invoked before the row outlet has been defined hence the null check.\n        if (this._rowOutlet && this._rowOutlet.viewContainer.length) {\n            this._forceRenderDataRows();\n        }\n    }\n    ngOnInit() {\n        this._setupStickyStyler();\n        if (this._isNativeHtmlTable) {\n            this._applyNativeTableSections();\n        }\n        // Set up the trackBy function so that it uses the `RenderRow` as its identity by default. If\n        // the user has provided a custom trackBy, return the result of that function as evaluated\n        // with the values of the `RenderRow`'s data and index.\n        this._dataDiffer = this._differs.find([]).create((_i, dataRow) => {\n            return this.trackBy ? this.trackBy(dataRow.dataIndex, dataRow.data) : dataRow;\n        });\n    }\n    ngAfterContentChecked() {\n        // Cache the row and column definitions gathered by ContentChildren and programmatic injection.\n        this._cacheRowDefs();\n        this._cacheColumnDefs();\n        // Make sure that the user has at least added header, footer, or data row def.\n        if (!this._headerRowDefs.length && !this._footerRowDefs.length && !this._rowDefs.length) {\n            throw getTableMissingRowDefsError();\n        }\n        // Render updates if the list of columns have been changed for the header, row, or footer defs.\n        this._renderUpdatedColumns();\n        // If the header row definition has been changed, trigger a render to the header row.\n        if (this._headerRowDefChanged) {\n            this._forceRenderHeaderRows();\n            this._headerRowDefChanged = false;\n        }\n        // If the footer row definition has been changed, trigger a render to the footer row.\n        if (this._footerRowDefChanged) {\n            this._forceRenderFooterRows();\n            this._footerRowDefChanged = false;\n        }\n        // If there is a data source and row definitions, connect to the data source unless a\n        // connection has already been made.\n        if (this.dataSource && this._rowDefs.length > 0 && !this._renderChangeSubscription) {\n            this._observeRenderChanges();\n        }\n        this._checkStickyStates();\n    }\n    ngOnDestroy() {\n        this._rowOutlet.viewContainer.clear();\n        this._noDataRowOutlet.viewContainer.clear();\n        this._headerRowOutlet.viewContainer.clear();\n        this._footerRowOutlet.viewContainer.clear();\n        this._cachedRenderRowsMap.clear();\n        this._onDestroy.next();\n        this._onDestroy.complete();\n        if (isDataSource(this.dataSource)) {\n            this.dataSource.disconnect(this);\n        }\n    }\n    /**\n     * Renders rows based on the table's latest set of data, which was either provided directly as an\n     * input or retrieved through an Observable stream (directly or from a DataSource).\n     * Checks for differences in the data since the last diff to perform only the necessary\n     * changes (add/remove/move rows).\n     *\n     * If the table's data source is a DataSource or Observable, this will be invoked automatically\n     * each time the provided Observable stream emits a new data array. Otherwise if your data is\n     * an array, this function will need to be called to render any changes.\n     */\n    renderRows() {\n        this._renderRows = this._getAllRenderRows();\n        const changes = this._dataDiffer.diff(this._renderRows);\n        if (!changes) {\n            return;\n        }\n        const viewContainer = this._rowOutlet.viewContainer;\n        changes.forEachOperation((record, prevIndex, currentIndex) => {\n            if (record.previousIndex == null) {\n                this._insertRow(record.item, currentIndex);\n            }\n            else if (currentIndex == null) {\n                viewContainer.remove(prevIndex);\n            }\n            else {\n                const view = viewContainer.get(prevIndex);\n                viewContainer.move(view, currentIndex);\n            }\n        });\n        // Update the meta context of a row's context data (index, count, first, last, ...)\n        this._updateRowIndexContext();\n        // Update rows that did not get added/removed/moved but may have had their identity changed,\n        // e.g. if trackBy matched data on some property but the actual data reference changed.\n        changes.forEachIdentityChange((record) => {\n            const rowView = viewContainer.get(record.currentIndex);\n            rowView.context.$implicit = record.item.data;\n        });\n        this._updateNoDataRow();\n        this.updateStickyColumnStyles();\n    }\n    /** Adds a column definition that was not included as part of the content children. */\n    addColumnDef(columnDef) {\n        this._customColumnDefs.add(columnDef);\n    }\n    /** Removes a column definition that was not included as part of the content children. */\n    removeColumnDef(columnDef) {\n        this._customColumnDefs.delete(columnDef);\n    }\n    /** Adds a row definition that was not included as part of the content children. */\n    addRowDef(rowDef) {\n        this._customRowDefs.add(rowDef);\n    }\n    /** Removes a row definition that was not included as part of the content children. */\n    removeRowDef(rowDef) {\n        this._customRowDefs.delete(rowDef);\n    }\n    /** Adds a header row definition that was not included as part of the content children. */\n    addHeaderRowDef(headerRowDef) {\n        this._customHeaderRowDefs.add(headerRowDef);\n        this._headerRowDefChanged = true;\n    }\n    /** Removes a header row definition that was not included as part of the content children. */\n    removeHeaderRowDef(headerRowDef) {\n        this._customHeaderRowDefs.delete(headerRowDef);\n        this._headerRowDefChanged = true;\n    }\n    /** Adds a footer row definition that was not included as part of the content children. */\n    addFooterRowDef(footerRowDef) {\n        this._customFooterRowDefs.add(footerRowDef);\n        this._footerRowDefChanged = true;\n    }\n    /** Removes a footer row definition that was not included as part of the content children. */\n    removeFooterRowDef(footerRowDef) {\n        this._customFooterRowDefs.delete(footerRowDef);\n        this._footerRowDefChanged = true;\n    }\n    /**\n     * Updates the header sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the top. Then, evaluating which cells need to be stuck to the top. This is\n     * automatically called when the header row changes its displayed set of columns, or if its\n     * sticky input changes. May be called manually for cases where the cell content changes outside\n     * of these events.\n     */\n    updateStickyHeaderRowStyles() {\n        const headerRows = this._getRenderedRows(this._headerRowOutlet);\n        const tableElement = this._elementRef.nativeElement;\n        // Hide the thead element if there are no header rows. This is necessary to satisfy\n        // overzealous a11y checkers that fail because the `rowgroup` element does not contain\n        // required child `row`.\n        const thead = tableElement.querySelector('thead');\n        if (thead) {\n            thead.style.display = headerRows.length ? '' : 'none';\n        }\n        const stickyStates = this._headerRowDefs.map(def => def.sticky);\n        this._stickyStyler.clearStickyPositioning(headerRows, ['top']);\n        this._stickyStyler.stickRows(headerRows, stickyStates, 'top');\n        // Reset the dirty state of the sticky input change since it has been used.\n        this._headerRowDefs.forEach(def => def.resetStickyChanged());\n    }\n    /**\n     * Updates the footer sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the bottom. Then, evaluating which cells need to be stuck to the bottom. This is\n     * automatically called when the footer row changes its displayed set of columns, or if its\n     * sticky input changes. May be called manually for cases where the cell content changes outside\n     * of these events.\n     */\n    updateStickyFooterRowStyles() {\n        const footerRows = this._getRenderedRows(this._footerRowOutlet);\n        const tableElement = this._elementRef.nativeElement;\n        // Hide the tfoot element if there are no footer rows. This is necessary to satisfy\n        // overzealous a11y checkers that fail because the `rowgroup` element does not contain\n        // required child `row`.\n        const tfoot = tableElement.querySelector('tfoot');\n        if (tfoot) {\n            tfoot.style.display = footerRows.length ? '' : 'none';\n        }\n        const stickyStates = this._footerRowDefs.map(def => def.sticky);\n        this._stickyStyler.clearStickyPositioning(footerRows, ['bottom']);\n        this._stickyStyler.stickRows(footerRows, stickyStates, 'bottom');\n        this._stickyStyler.updateStickyFooterContainer(this._elementRef.nativeElement, stickyStates);\n        // Reset the dirty state of the sticky input change since it has been used.\n        this._footerRowDefs.forEach(def => def.resetStickyChanged());\n    }\n    /**\n     * Updates the column sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the left and right. Then sticky styles are added for the left and right according\n     * to the column definitions for each cell in each row. This is automatically called when\n     * the data source provides a new set of data or when a column definition changes its sticky\n     * input. May be called manually for cases where the cell content changes outside of these events.\n     */\n    updateStickyColumnStyles() {\n        const headerRows = this._getRenderedRows(this._headerRowOutlet);\n        const dataRows = this._getRenderedRows(this._rowOutlet);\n        const footerRows = this._getRenderedRows(this._footerRowOutlet);\n        // Clear the left and right positioning from all columns in the table across all rows since\n        // sticky columns span across all table sections (header, data, footer)\n        this._stickyStyler.clearStickyPositioning([...headerRows, ...dataRows, ...footerRows], ['left', 'right']);\n        // Update the sticky styles for each header row depending on the def's sticky state\n        headerRows.forEach((headerRow, i) => {\n            this._addStickyColumnStyles([headerRow], this._headerRowDefs[i]);\n        });\n        // Update the sticky styles for each data row depending on its def's sticky state\n        this._rowDefs.forEach(rowDef => {\n            // Collect all the rows rendered with this row definition.\n            const rows = [];\n            for (let i = 0; i < dataRows.length; i++) {\n                if (this._renderRows[i].rowDef === rowDef) {\n                    rows.push(dataRows[i]);\n                }\n            }\n            this._addStickyColumnStyles(rows, rowDef);\n        });\n        // Update the sticky styles for each footer row depending on the def's sticky state\n        footerRows.forEach((footerRow, i) => {\n            this._addStickyColumnStyles([footerRow], this._footerRowDefs[i]);\n        });\n        // Reset the dirty state of the sticky input change since it has been used.\n        Array.from(this._columnDefsByName.values()).forEach(def => def.resetStickyChanged());\n    }\n    /**\n     * Get the list of RenderRow objects to render according to the current list of data and defined\n     * row definitions. If the previous list already contained a particular pair, it should be reused\n     * so that the differ equates their references.\n     */\n    _getAllRenderRows() {\n        const renderRows = [];\n        // Store the cache and create a new one. Any re-used RenderRow objects will be moved into the\n        // new cache while unused ones can be picked up by garbage collection.\n        const prevCachedRenderRows = this._cachedRenderRowsMap;\n        this._cachedRenderRowsMap = new Map();\n        // For each data object, get the list of rows that should be rendered, represented by the\n        // respective `RenderRow` object which is the pair of `data` and `CdkRowDef`.\n        for (let i = 0; i < this._data.length; i++) {\n            let data = this._data[i];\n            const renderRowsForData = this._getRenderRowsForData(data, i, prevCachedRenderRows.get(data));\n            if (!this._cachedRenderRowsMap.has(data)) {\n                this._cachedRenderRowsMap.set(data, new WeakMap());\n            }\n            for (let j = 0; j < renderRowsForData.length; j++) {\n                let renderRow = renderRowsForData[j];\n                const cache = this._cachedRenderRowsMap.get(renderRow.data);\n                if (cache.has(renderRow.rowDef)) {\n                    cache.get(renderRow.rowDef).push(renderRow);\n                }\n                else {\n                    cache.set(renderRow.rowDef, [renderRow]);\n                }\n                renderRows.push(renderRow);\n            }\n        }\n        return renderRows;\n    }\n    /**\n     * Gets a list of `RenderRow<T>` for the provided data object and any `CdkRowDef` objects that\n     * should be rendered for this data. Reuses the cached RenderRow objects if they match the same\n     * `(T, CdkRowDef)` pair.\n     */\n    _getRenderRowsForData(data, dataIndex, cache) {\n        const rowDefs = this._getRowDefs(data, dataIndex);\n        return rowDefs.map(rowDef => {\n            const cachedRenderRows = (cache && cache.has(rowDef)) ? cache.get(rowDef) : [];\n            if (cachedRenderRows.length) {\n                const dataRow = cachedRenderRows.shift();\n                dataRow.dataIndex = dataIndex;\n                return dataRow;\n            }\n            else {\n                return { data, rowDef, dataIndex };\n            }\n        });\n    }\n    /** Update the map containing the content's column definitions. */\n    _cacheColumnDefs() {\n        this._columnDefsByName.clear();\n        const columnDefs = mergeArrayAndSet(this._getOwnDefs(this._contentColumnDefs), this._customColumnDefs);\n        columnDefs.forEach(columnDef => {\n            if (this._columnDefsByName.has(columnDef.name)) {\n                throw getTableDuplicateColumnNameError(columnDef.name);\n            }\n            this._columnDefsByName.set(columnDef.name, columnDef);\n        });\n    }\n    /** Update the list of all available row definitions that can be used. */\n    _cacheRowDefs() {\n        this._headerRowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentHeaderRowDefs), this._customHeaderRowDefs);\n        this._footerRowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentFooterRowDefs), this._customFooterRowDefs);\n        this._rowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentRowDefs), this._customRowDefs);\n        // After all row definitions are determined, find the row definition to be considered default.\n        const defaultRowDefs = this._rowDefs.filter(def => !def.when);\n        if (!this.multiTemplateDataRows && defaultRowDefs.length > 1) {\n            throw getTableMultipleDefaultRowDefsError();\n        }\n        this._defaultRowDef = defaultRowDefs[0];\n    }\n    /**\n     * Check if the header, data, or footer rows have changed what columns they want to display or\n     * whether the sticky states have changed for the header or footer. If there is a diff, then\n     * re-render that section.\n     */\n    _renderUpdatedColumns() {\n        const columnsDiffReducer = (acc, def) => acc || !!def.getColumnsDiff();\n        // Force re-render data rows if the list of column definitions have changed.\n        if (this._rowDefs.reduce(columnsDiffReducer, false)) {\n            this._forceRenderDataRows();\n        }\n        // Force re-render header/footer rows if the list of column definitions have changed..\n        if (this._headerRowDefs.reduce(columnsDiffReducer, false)) {\n            this._forceRenderHeaderRows();\n        }\n        if (this._footerRowDefs.reduce(columnsDiffReducer, false)) {\n            this._forceRenderFooterRows();\n        }\n    }\n    /**\n     * Switch to the provided data source by resetting the data and unsubscribing from the current\n     * render change subscription if one exists. If the data source is null, interpret this by\n     * clearing the row outlet. Otherwise start listening for new data.\n     */\n    _switchDataSource(dataSource) {\n        this._data = [];\n        if (isDataSource(this.dataSource)) {\n            this.dataSource.disconnect(this);\n        }\n        // Stop listening for data from the previous data source.\n        if (this._renderChangeSubscription) {\n            this._renderChangeSubscription.unsubscribe();\n            this._renderChangeSubscription = null;\n        }\n        if (!dataSource) {\n            if (this._dataDiffer) {\n                this._dataDiffer.diff([]);\n            }\n            this._rowOutlet.viewContainer.clear();\n        }\n        this._dataSource = dataSource;\n    }\n    /** Set up a subscription for the data provided by the data source. */\n    _observeRenderChanges() {\n        // If no data source has been set, there is nothing to observe for changes.\n        if (!this.dataSource) {\n            return;\n        }\n        let dataStream;\n        if (isDataSource(this.dataSource)) {\n            dataStream = this.dataSource.connect(this);\n        }\n        else if (isObservable(this.dataSource)) {\n            dataStream = this.dataSource;\n        }\n        else if (Array.isArray(this.dataSource)) {\n            dataStream = of(this.dataSource);\n        }\n        if (dataStream === undefined) {\n            throw getTableUnknownDataSourceError();\n        }\n        this._renderChangeSubscription = dataStream.pipe(takeUntil(this._onDestroy)).subscribe(data => {\n            this._data = data || [];\n            this.renderRows();\n        });\n    }\n    /**\n     * Clears any existing content in the header row outlet and creates a new embedded view\n     * in the outlet using the header row definition.\n     */\n    _forceRenderHeaderRows() {\n        // Clear the header row outlet if any content exists.\n        if (this._headerRowOutlet.viewContainer.length > 0) {\n            this._headerRowOutlet.viewContainer.clear();\n        }\n        this._headerRowDefs.forEach((def, i) => this._renderRow(this._headerRowOutlet, def, i));\n        this.updateStickyHeaderRowStyles();\n        this.updateStickyColumnStyles();\n    }\n    /**\n     * Clears any existing content in the footer row outlet and creates a new embedded view\n     * in the outlet using the footer row definition.\n     */\n    _forceRenderFooterRows() {\n        // Clear the footer row outlet if any content exists.\n        if (this._footerRowOutlet.viewContainer.length > 0) {\n            this._footerRowOutlet.viewContainer.clear();\n        }\n        this._footerRowDefs.forEach((def, i) => this._renderRow(this._footerRowOutlet, def, i));\n        this.updateStickyFooterRowStyles();\n        this.updateStickyColumnStyles();\n    }\n    /** Adds the sticky column styles for the rows according to the columns' stick states. */\n    _addStickyColumnStyles(rows, rowDef) {\n        const columnDefs = Array.from(rowDef.columns || []).map(columnName => {\n            const columnDef = this._columnDefsByName.get(columnName);\n            if (!columnDef) {\n                throw getTableUnknownColumnError(columnName);\n            }\n            return columnDef;\n        });\n        const stickyStartStates = columnDefs.map(columnDef => columnDef.sticky);\n        const stickyEndStates = columnDefs.map(columnDef => columnDef.stickyEnd);\n        this._stickyStyler.updateStickyColumns(rows, stickyStartStates, stickyEndStates);\n    }\n    /** Gets the list of rows that have been rendered in the row outlet. */\n    _getRenderedRows(rowOutlet) {\n        const renderedRows = [];\n        for (let i = 0; i < rowOutlet.viewContainer.length; i++) {\n            const viewRef = rowOutlet.viewContainer.get(i);\n            renderedRows.push(viewRef.rootNodes[0]);\n        }\n        return renderedRows;\n    }\n    /**\n     * Get the matching row definitions that should be used for this row data. If there is only\n     * one row definition, it is returned. Otherwise, find the row definitions that has a when\n     * predicate that returns true with the data. If none return true, return the default row\n     * definition.\n     */\n    _getRowDefs(data, dataIndex) {\n        if (this._rowDefs.length == 1) {\n            return [this._rowDefs[0]];\n        }\n        let rowDefs = [];\n        if (this.multiTemplateDataRows) {\n            rowDefs = this._rowDefs.filter(def => !def.when || def.when(dataIndex, data));\n        }\n        else {\n            let rowDef = this._rowDefs.find(def => def.when && def.when(dataIndex, data)) || this._defaultRowDef;\n            if (rowDef) {\n                rowDefs.push(rowDef);\n            }\n        }\n        if (!rowDefs.length) {\n            throw getTableMissingMatchingRowDefError(data);\n        }\n        return rowDefs;\n    }\n    /**\n     * Create the embedded view for the data row template and place it in the correct index location\n     * within the data row view container.\n     */\n    _insertRow(renderRow, renderIndex) {\n        const rowDef = renderRow.rowDef;\n        const context = { $implicit: renderRow.data };\n        this._renderRow(this._rowOutlet, rowDef, renderIndex, context);\n    }\n    /**\n     * Creates a new row template in the outlet and fills it with the set of cell templates.\n     * Optionally takes a context to provide to the row and cells, as well as an optional index\n     * of where to place the new row template in the outlet.\n     */\n    _renderRow(outlet, rowDef, index, context = {}) {\n        // TODO(andrewseguin): enforce that one outlet was instantiated from createEmbeddedView\n        outlet.viewContainer.createEmbeddedView(rowDef.template, context, index);\n        for (let cellTemplate of this._getCellTemplates(rowDef)) {\n            if (CdkCellOutlet.mostRecentCellOutlet) {\n                CdkCellOutlet.mostRecentCellOutlet._viewContainer.createEmbeddedView(cellTemplate, context);\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Updates the index-related context for each row to reflect any changes in the index of the rows,\n     * e.g. first/last/even/odd.\n     */\n    _updateRowIndexContext() {\n        const viewContainer = this._rowOutlet.viewContainer;\n        for (let renderIndex = 0, count = viewContainer.length; renderIndex < count; renderIndex++) {\n            const viewRef = viewContainer.get(renderIndex);\n            const context = viewRef.context;\n            context.count = count;\n            context.first = renderIndex === 0;\n            context.last = renderIndex === count - 1;\n            context.even = renderIndex % 2 === 0;\n            context.odd = !context.even;\n            if (this.multiTemplateDataRows) {\n                context.dataIndex = this._renderRows[renderIndex].dataIndex;\n                context.renderIndex = renderIndex;\n            }\n            else {\n                context.index = this._renderRows[renderIndex].dataIndex;\n            }\n        }\n    }\n    /** Gets the column definitions for the provided row def. */\n    _getCellTemplates(rowDef) {\n        if (!rowDef || !rowDef.columns) {\n            return [];\n        }\n        return Array.from(rowDef.columns, columnId => {\n            const column = this._columnDefsByName.get(columnId);\n            if (!column) {\n                throw getTableUnknownColumnError(columnId);\n            }\n            return rowDef.extractCellTemplate(column);\n        });\n    }\n    /** Adds native table sections (e.g. tbody) and moves the row outlets into them. */\n    _applyNativeTableSections() {\n        const documentFragment = this._document.createDocumentFragment();\n        const sections = [\n            { tag: 'thead', outlets: [this._headerRowOutlet] },\n            { tag: 'tbody', outlets: [this._rowOutlet, this._noDataRowOutlet] },\n            { tag: 'tfoot', outlets: [this._footerRowOutlet] },\n        ];\n        for (const section of sections) {\n            const element = this._document.createElement(section.tag);\n            element.setAttribute('role', 'rowgroup');\n            for (const outlet of section.outlets) {\n                element.appendChild(outlet.elementRef.nativeElement);\n            }\n            documentFragment.appendChild(element);\n        }\n        // Use a DocumentFragment so we don't hit the DOM on each iteration.\n        this._elementRef.nativeElement.appendChild(documentFragment);\n    }\n    /**\n     * Forces a re-render of the data rows. Should be called in cases where there has been an input\n     * change that affects the evaluation of which rows should be rendered, e.g. toggling\n     * `multiTemplateDataRows` or adding/removing row definitions.\n     */\n    _forceRenderDataRows() {\n        this._dataDiffer.diff([]);\n        this._rowOutlet.viewContainer.clear();\n        this.renderRows();\n        this.updateStickyColumnStyles();\n    }\n    /**\n     * Checks if there has been a change in sticky states since last check and applies the correct\n     * sticky styles. Since checking resets the \"dirty\" state, this should only be performed once\n     * during a change detection and after the inputs are settled (after content check).\n     */\n    _checkStickyStates() {\n        const stickyCheckReducer = (acc, d) => {\n            return acc || d.hasStickyChanged();\n        };\n        // Note that the check needs to occur for every definition since it notifies the definition\n        // that it can reset its dirty state. Using another operator like `some` may short-circuit\n        // remaining definitions and leave them in an unchecked state.\n        if (this._headerRowDefs.reduce(stickyCheckReducer, false)) {\n            this.updateStickyHeaderRowStyles();\n        }\n        if (this._footerRowDefs.reduce(stickyCheckReducer, false)) {\n            this.updateStickyFooterRowStyles();\n        }\n        if (Array.from(this._columnDefsByName.values()).reduce(stickyCheckReducer, false)) {\n            this.updateStickyColumnStyles();\n        }\n    }\n    /**\n     * Creates the sticky styler that will be used for sticky rows and columns. Listens\n     * for directionality changes and provides the latest direction to the styler. Re-applies column\n     * stickiness when directionality changes.\n     */\n    _setupStickyStyler() {\n        const direction = this._dir ? this._dir.value : 'ltr';\n        this._stickyStyler = new StickyStyler(this._isNativeHtmlTable, this.stickyCssClass, direction, this._platform.isBrowser);\n        (this._dir ? this._dir.change : of())\n            .pipe(takeUntil(this._onDestroy))\n            .subscribe(value => {\n            this._stickyStyler.direction = value;\n            this.updateStickyColumnStyles();\n        });\n    }\n    /** Filters definitions that belong to this table from a QueryList. */\n    _getOwnDefs(items) {\n        return items.filter(item => !item._table || item._table === this);\n    }\n    /** Creates or removes the no data row, depending on whether any data is being shown. */\n    _updateNoDataRow() {\n        if (this._noDataRow) {\n            const shouldShow = this._rowOutlet.viewContainer.length === 0;\n            if (shouldShow !== this._isShowingNoDataRow) {\n                const container = this._noDataRowOutlet.viewContainer;\n                shouldShow ? container.createEmbeddedView(this._noDataRow.templateRef) : container.clear();\n                this._isShowingNoDataRow = shouldShow;\n            }\n        }\n    }\n}\nCdkTable.ɵfac = function CdkTable_Factory(t) { return new (t || CdkTable)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵinjectAttribute('role'), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Platform)); };\nCdkTable.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CdkTable, selectors: [[\"cdk-table\"], [\"table\", \"cdk-table\", \"\"]], contentQueries: function CdkTable_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkNoDataRow, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkColumnDef, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkRowDef, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkHeaderRowDef, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkFooterRowDef, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._noDataRow = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentColumnDefs = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentRowDefs = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentHeaderRowDefs = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentFooterRowDefs = _t);\n    } }, viewQuery: function CdkTable_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(DataRowOutlet, true);\n        ɵngcc0.ɵɵstaticViewQuery(HeaderRowOutlet, true);\n        ɵngcc0.ɵɵstaticViewQuery(FooterRowOutlet, true);\n        ɵngcc0.ɵɵstaticViewQuery(NoDataRowOutlet, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._rowOutlet = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._headerRowOutlet = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._footerRowOutlet = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._noDataRowOutlet = _t.first);\n    } }, hostAttrs: [1, \"cdk-table\"], inputs: { trackBy: \"trackBy\", dataSource: \"dataSource\", multiTemplateDataRows: \"multiTemplateDataRows\" }, exportAs: [\"cdkTable\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CDK_TABLE, useExisting: CdkTable }])], ngContentSelectors: _c1, decls: 6, vars: 0, consts: [[\"headerRowOutlet\", \"\"], [\"rowOutlet\", \"\"], [\"noDataRowOutlet\", \"\"], [\"footerRowOutlet\", \"\"]], template: function CdkTable_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵprojection(1, 1);\n        ɵngcc0.ɵɵelementContainer(2, 0);\n        ɵngcc0.ɵɵelementContainer(3, 1);\n        ɵngcc0.ɵɵelementContainer(4, 2);\n        ɵngcc0.ɵɵelementContainer(5, 3);\n    } }, directives: [HeaderRowOutlet, DataRowOutlet, NoDataRowOutlet, FooterRowOutlet], encapsulation: 2 });\nCdkTable.ctorParameters = () => [\n    { type: IterableDiffers },\n    { type: ChangeDetectorRef },\n    { type: ElementRef },\n    { type: String, decorators: [{ type: Attribute, args: ['role',] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Platform }\n];\nCdkTable.propDecorators = {\n    trackBy: [{ type: Input }],\n    dataSource: [{ type: Input }],\n    multiTemplateDataRows: [{ type: Input }],\n    _rowOutlet: [{ type: ViewChild, args: [DataRowOutlet, { static: true },] }],\n    _headerRowOutlet: [{ type: ViewChild, args: [HeaderRowOutlet, { static: true },] }],\n    _footerRowOutlet: [{ type: ViewChild, args: [FooterRowOutlet, { static: true },] }],\n    _noDataRowOutlet: [{ type: ViewChild, args: [NoDataRowOutlet, { static: true },] }],\n    _contentColumnDefs: [{ type: ContentChildren, args: [CdkColumnDef, { descendants: true },] }],\n    _contentRowDefs: [{ type: ContentChildren, args: [CdkRowDef, { descendants: true },] }],\n    _contentHeaderRowDefs: [{ type: ContentChildren, args: [CdkHeaderRowDef, {\n                    descendants: true\n                },] }],\n    _contentFooterRowDefs: [{ type: ContentChildren, args: [CdkFooterRowDef, {\n                    descendants: true\n                },] }],\n    _noDataRow: [{ type: ContentChild, args: [CdkNoDataRow,] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTable, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-table, table[cdk-table]',\n                exportAs: 'cdkTable',\n                template: CDK_TABLE_TEMPLATE,\n                host: {\n                    'class': 'cdk-table'\n                },\n                encapsulation: ViewEncapsulation.None,\n                // The \"OnPush\" status for the `MatTable` component is effectively a noop, so we are removing it.\n                // The view for `MatTable` consists entirely of templates declared in other views. As they are\n                // declared elsewhere, they are checked when their declaration points are checked.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                providers: [{ provide: CDK_TABLE, useExisting: CdkTable }]\n            }]\n    }], function () { return [{ type: ɵngcc0.IterableDiffers }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['role']\n            }] }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc2.Platform }]; }, { trackBy: [{\n            type: Input\n        }], dataSource: [{\n            type: Input\n        }], multiTemplateDataRows: [{\n            type: Input\n        }], _rowOutlet: [{\n            type: ViewChild,\n            args: [DataRowOutlet, { static: true }]\n        }], _headerRowOutlet: [{\n            type: ViewChild,\n            args: [HeaderRowOutlet, { static: true }]\n        }], _footerRowOutlet: [{\n            type: ViewChild,\n            args: [FooterRowOutlet, { static: true }]\n        }], _noDataRowOutlet: [{\n            type: ViewChild,\n            args: [NoDataRowOutlet, { static: true }]\n        }], _contentColumnDefs: [{\n            type: ContentChildren,\n            args: [CdkColumnDef, { descendants: true }]\n        }], _contentRowDefs: [{\n            type: ContentChildren,\n            args: [CdkRowDef, { descendants: true }]\n        }], _contentHeaderRowDefs: [{\n            type: ContentChildren,\n            args: [CdkHeaderRowDef, {\n                    descendants: true\n                }]\n        }], _contentFooterRowDefs: [{\n            type: ContentChildren,\n            args: [CdkFooterRowDef, {\n                    descendants: true\n                }]\n        }], _noDataRow: [{\n            type: ContentChild,\n            args: [CdkNoDataRow]\n        }] }); })();\n/** Utility function that gets a merged list of the entries in an array and values of a Set. */\nfunction mergeArrayAndSet(array, set) {\n    return array.concat(Array.from(set));\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Column that simply shows text content for the header and row cells. Assumes that the table\n * is using the native table implementation (`<table>`).\n *\n * By default, the name of this column will be the header text and data property accessor.\n * The header text can be overridden with the `headerText` input. Cell values can be overridden with\n * the `dataAccessor` input. Change the text justification to the start or end using the `justify`\n * input.\n */\nclass CdkTextColumn {\n    constructor(_table, _options) {\n        this._table = _table;\n        this._options = _options;\n        /** Alignment of the cell values. */\n        this.justify = 'start';\n        this._options = _options || {};\n    }\n    /** Column name that should be used to reference this column. */\n    get name() {\n        return this._name;\n    }\n    set name(name) {\n        this._name = name;\n        // With Ivy, inputs can be initialized before static query results are\n        // available. In that case, we defer the synchronization until \"ngOnInit\" fires.\n        this._syncColumnDefName();\n    }\n    ngOnInit() {\n        this._syncColumnDefName();\n        if (this.headerText === undefined) {\n            this.headerText = this._createDefaultHeaderText();\n        }\n        if (!this.dataAccessor) {\n            this.dataAccessor =\n                this._options.defaultDataAccessor || ((data, name) => data[name]);\n        }\n        if (this._table) {\n            // Provide the cell and headerCell directly to the table with the static `ViewChild` query,\n            // since the columnDef will not pick up its content by the time the table finishes checking\n            // its content and initializing the rows.\n            this.columnDef.cell = this.cell;\n            this.columnDef.headerCell = this.headerCell;\n            this._table.addColumnDef(this.columnDef);\n        }\n        else {\n            throw getTableTextColumnMissingParentTableError();\n        }\n    }\n    ngOnDestroy() {\n        if (this._table) {\n            this._table.removeColumnDef(this.columnDef);\n        }\n    }\n    /**\n     * Creates a default header text. Use the options' header text transformation function if one\n     * has been provided. Otherwise simply capitalize the column name.\n     */\n    _createDefaultHeaderText() {\n        const name = this.name;\n        if (isDevMode() && !name) {\n            throw getTableTextColumnMissingNameError();\n        }\n        if (this._options && this._options.defaultHeaderTextTransform) {\n            return this._options.defaultHeaderTextTransform(name);\n        }\n        return name[0].toUpperCase() + name.slice(1);\n    }\n    /** Synchronizes the column definition name with the text column name. */\n    _syncColumnDefName() {\n        if (this.columnDef) {\n            this.columnDef.name = this.name;\n        }\n    }\n}\nCdkTextColumn.ɵfac = function CdkTextColumn_Factory(t) { return new (t || CdkTextColumn)(ɵngcc0.ɵɵdirectiveInject(CdkTable, 8), ɵngcc0.ɵɵdirectiveInject(TEXT_COLUMN_OPTIONS, 8)); };\nCdkTextColumn.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CdkTextColumn, selectors: [[\"cdk-text-column\"]], viewQuery: function CdkTextColumn_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(CdkColumnDef, true);\n        ɵngcc0.ɵɵstaticViewQuery(CdkCellDef, true);\n        ɵngcc0.ɵɵstaticViewQuery(CdkHeaderCellDef, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.columnDef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.cell = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.headerCell = _t.first);\n    } }, inputs: { justify: \"justify\", name: \"name\", headerText: \"headerText\", dataAccessor: \"dataAccessor\" }, decls: 3, vars: 0, consts: [[\"cdkColumnDef\", \"\"], [\"cdk-header-cell\", \"\", 3, \"text-align\", 4, \"cdkHeaderCellDef\"], [\"cdk-cell\", \"\", 3, \"text-align\", 4, \"cdkCellDef\"], [\"cdk-header-cell\", \"\"], [\"cdk-cell\", \"\"]], template: function CdkTextColumn_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainerStart(0, 0);\n        ɵngcc0.ɵɵtemplate(1, CdkTextColumn_th_1_Template, 2, 3, \"th\", 1);\n        ɵngcc0.ɵɵtemplate(2, CdkTextColumn_td_2_Template, 2, 3, \"td\", 2);\n        ɵngcc0.ɵɵelementContainerEnd();\n    } }, directives: [CdkColumnDef, CdkHeaderCellDef, CdkCellDef, CdkHeaderCell, CdkCell], encapsulation: 2 });\nCdkTextColumn.ctorParameters = () => [\n    { type: CdkTable, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [TEXT_COLUMN_OPTIONS,] }] }\n];\nCdkTextColumn.propDecorators = {\n    name: [{ type: Input }],\n    headerText: [{ type: Input }],\n    dataAccessor: [{ type: Input }],\n    justify: [{ type: Input }],\n    columnDef: [{ type: ViewChild, args: [CdkColumnDef, { static: true },] }],\n    cell: [{ type: ViewChild, args: [CdkCellDef, { static: true },] }],\n    headerCell: [{ type: ViewChild, args: [CdkHeaderCellDef, { static: true },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTextColumn, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-text-column',\n                template: `\n    <ng-container cdkColumnDef>\n      <th cdk-header-cell *cdkHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td cdk-cell *cdkCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `,\n                encapsulation: ViewEncapsulation.None,\n                // Change detection is intentionally not set to OnPush. This component's template will be provided\n                // to the table to be inserted into its view. This is problematic when change detection runs since\n                // the bindings in this template will be evaluated _after_ the table's view is evaluated, which\n                // mean's the template in the table's view will not have the updated value (and in fact will cause\n                // an ExpressionChangedAfterItHasBeenCheckedError).\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default\n            }]\n    }], function () { return [{ type: CdkTable, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [TEXT_COLUMN_OPTIONS]\n            }] }]; }, { justify: [{\n            type: Input\n        }], name: [{\n            type: Input\n        }], headerText: [{\n            type: Input\n        }], dataAccessor: [{\n            type: Input\n        }], columnDef: [{\n            type: ViewChild,\n            args: [CdkColumnDef, { static: true }]\n        }], cell: [{\n            type: ViewChild,\n            args: [CdkCellDef, { static: true }]\n        }], headerCell: [{\n            type: ViewChild,\n            args: [CdkHeaderCellDef, { static: true }]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst EXPORTED_DECLARATIONS = [\n    CdkTable,\n    CdkRowDef,\n    CdkCellDef,\n    CdkCellOutlet,\n    CdkHeaderCellDef,\n    CdkFooterCellDef,\n    CdkColumnDef,\n    CdkCell,\n    CdkRow,\n    CdkHeaderCell,\n    CdkFooterCell,\n    CdkHeaderRow,\n    CdkHeaderRowDef,\n    CdkFooterRow,\n    CdkFooterRowDef,\n    DataRowOutlet,\n    HeaderRowOutlet,\n    FooterRowOutlet,\n    CdkTextColumn,\n    CdkNoDataRow,\n    NoDataRowOutlet,\n];\nclass CdkTableModule {\n}\nCdkTableModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: CdkTableModule });\nCdkTableModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function CdkTableModule_Factory(t) { return new (t || CdkTableModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CdkTableModule, { declarations: [CdkTable, CdkRowDef, CdkCellDef, CdkCellOutlet, CdkHeaderCellDef, CdkFooterCellDef, CdkColumnDef, CdkCell, CdkRow, CdkHeaderCell, CdkFooterCell, CdkHeaderRow, CdkHeaderRowDef, CdkFooterRow, CdkFooterRowDef, DataRowOutlet, HeaderRowOutlet, FooterRowOutlet, CdkTextColumn, CdkNoDataRow, NoDataRowOutlet], exports: [CdkTable, CdkRowDef, CdkCellDef, CdkCellOutlet, CdkHeaderCellDef, CdkFooterCellDef, CdkColumnDef, CdkCell, CdkRow, CdkHeaderCell, CdkFooterCell, CdkHeaderRow, CdkHeaderRowDef, CdkFooterRow, CdkFooterRowDef, DataRowOutlet, HeaderRowOutlet, FooterRowOutlet, CdkTextColumn, CdkNoDataRow, NoDataRowOutlet] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTableModule, [{\n        type: NgModule,\n        args: [{\n                exports: EXPORTED_DECLARATIONS,\n                declarations: EXPORTED_DECLARATIONS\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BaseCdkCell, BaseRowDef, CDK_ROW_TEMPLATE, CDK_TABLE, CDK_TABLE_TEMPLATE, CdkCell, CdkCellDef, CdkCellOutlet, CdkColumnDef, CdkFooterCell, CdkFooterCellDef, CdkFooterRow, CdkFooterRowDef, CdkHeaderCell, CdkHeaderCellDef, CdkHeaderRow, CdkHeaderRowDef, CdkNoDataRow, CdkRow, CdkRowDef, CdkTable, CdkTableModule, CdkTextColumn, DataRowOutlet, FooterRowOutlet, HeaderRowOutlet, NoDataRowOutlet, STICKY_DIRECTIONS, StickyStyler, TEXT_COLUMN_OPTIONS, mixinHasStickyInput };\n\n//# sourceMappingURL=table.js.map","import { Component, ViewEncapsulation, ChangeDetectionStrategy, Directive, Input, ElementRef, NgModule } from '@angular/core';\nimport { CdkTable, CDK_TABLE_TEMPLATE, CDK_TABLE, CdkCellDef, CdkHeaderCellDef, CdkFooterCellDef, CdkColumnDef, CdkHeaderCell, CdkFooterCell, CdkCell, CdkHeaderRowDef, CdkFooterRowDef, CdkRowDef, CdkHeaderRow, CDK_ROW_TEMPLATE, CdkFooterRow, CdkRow, CdkNoDataRow, CdkTextColumn, CdkTableModule, DataSource } from '@angular/cdk/table';\nimport { MatCommonModule } from '@angular/material/core';\nimport { _isNumberValue } from '@angular/cdk/coercion';\nimport { BehaviorSubject, Subject, Subscription, merge, of, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Wrapper for the CdkTable with Material design styles.\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/table';\n\nconst _c0 = [[[\"caption\"]], [[\"colgroup\"], [\"col\"]]];\nconst _c1 = [\"caption\", \"colgroup, col\"];\nfunction MatTextColumn_th_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"th\", 3);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"text-align\", ctx_r0.justify);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r0.headerText, \" \");\n} }\nfunction MatTextColumn_td_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\", 4);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const data_r2 = ctx.$implicit;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"text-align\", ctx_r1.justify);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r1.dataAccessor(data_r2, ctx_r1.name), \" \");\n} }\nclass MatTable extends CdkTable {\n    constructor() {\n        super(...arguments);\n        /** Overrides the sticky CSS class set by the `CdkTable`. */\n        this.stickyCssClass = 'mat-table-sticky';\n    }\n}\nMatTable.ɵfac = function MatTable_Factory(t) { return ɵMatTable_BaseFactory(t || MatTable); };\nMatTable.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTable, selectors: [[\"mat-table\"], [\"table\", \"mat-table\", \"\"]], hostAttrs: [1, \"mat-table\"], exportAs: [\"matTable\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: CdkTable, useExisting: MatTable },\n            { provide: CDK_TABLE, useExisting: MatTable }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 6, vars: 0, consts: [[\"headerRowOutlet\", \"\"], [\"rowOutlet\", \"\"], [\"noDataRowOutlet\", \"\"], [\"footerRowOutlet\", \"\"]], template: function MatTable_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵprojection(1, 1);\n        ɵngcc0.ɵɵelementContainer(2, 0);\n        ɵngcc0.ɵɵelementContainer(3, 1);\n        ɵngcc0.ɵɵelementContainer(4, 2);\n        ɵngcc0.ɵɵelementContainer(5, 3);\n    } }, directives: [ɵngcc1.HeaderRowOutlet, ɵngcc1.DataRowOutlet, ɵngcc1.NoDataRowOutlet, ɵngcc1.FooterRowOutlet], styles: [\"mat-table{display:block}mat-header-row{min-height:56px}mat-row,mat-footer-row{min-height:48px}mat-row,mat-header-row,mat-footer-row{display:flex;border-width:0;border-bottom-width:1px;border-style:solid;align-items:center;box-sizing:border-box}mat-row::after,mat-header-row::after,mat-footer-row::after{display:inline-block;min-height:inherit;content:\\\"\\\"}mat-cell:first-of-type,mat-header-cell:first-of-type,mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] mat-cell:first-of-type,[dir=rtl] mat-header-cell:first-of-type,[dir=rtl] mat-footer-cell:first-of-type{padding-left:0;padding-right:24px}mat-cell:last-of-type,mat-header-cell:last-of-type,mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] mat-cell:last-of-type,[dir=rtl] mat-header-cell:last-of-type,[dir=rtl] mat-footer-cell:last-of-type{padding-right:0;padding-left:24px}mat-cell,mat-header-cell,mat-footer-cell{flex:1;display:flex;align-items:center;overflow:hidden;word-wrap:break-word;min-height:inherit}table.mat-table{border-spacing:0}tr.mat-header-row{height:56px}tr.mat-row,tr.mat-footer-row{height:48px}th.mat-header-cell{text-align:left}[dir=rtl] th.mat-header-cell{text-align:right}th.mat-header-cell,td.mat-cell,td.mat-footer-cell{padding:0;border-bottom-width:1px;border-bottom-style:solid}th.mat-header-cell:first-of-type,td.mat-cell:first-of-type,td.mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] th.mat-header-cell:first-of-type,[dir=rtl] td.mat-cell:first-of-type,[dir=rtl] td.mat-footer-cell:first-of-type{padding-left:0;padding-right:24px}th.mat-header-cell:last-of-type,td.mat-cell:last-of-type,td.mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] th.mat-header-cell:last-of-type,[dir=rtl] td.mat-cell:last-of-type,[dir=rtl] td.mat-footer-cell:last-of-type{padding-right:0;padding-left:24px}\\n\"], encapsulation: 2 });\nconst ɵMatTable_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatTable);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTable, [{\n        type: Component,\n        args: [{\n                selector: 'mat-table, table[mat-table]',\n                exportAs: 'matTable',\n                template: CDK_TABLE_TEMPLATE,\n                host: {\n                    'class': 'mat-table'\n                },\n                providers: [\n                    { provide: CdkTable, useExisting: MatTable },\n                    { provide: CDK_TABLE, useExisting: MatTable }\n                ],\n                encapsulation: ViewEncapsulation.None,\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                styles: [\"mat-table{display:block}mat-header-row{min-height:56px}mat-row,mat-footer-row{min-height:48px}mat-row,mat-header-row,mat-footer-row{display:flex;border-width:0;border-bottom-width:1px;border-style:solid;align-items:center;box-sizing:border-box}mat-row::after,mat-header-row::after,mat-footer-row::after{display:inline-block;min-height:inherit;content:\\\"\\\"}mat-cell:first-of-type,mat-header-cell:first-of-type,mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] mat-cell:first-of-type,[dir=rtl] mat-header-cell:first-of-type,[dir=rtl] mat-footer-cell:first-of-type{padding-left:0;padding-right:24px}mat-cell:last-of-type,mat-header-cell:last-of-type,mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] mat-cell:last-of-type,[dir=rtl] mat-header-cell:last-of-type,[dir=rtl] mat-footer-cell:last-of-type{padding-right:0;padding-left:24px}mat-cell,mat-header-cell,mat-footer-cell{flex:1;display:flex;align-items:center;overflow:hidden;word-wrap:break-word;min-height:inherit}table.mat-table{border-spacing:0}tr.mat-header-row{height:56px}tr.mat-row,tr.mat-footer-row{height:48px}th.mat-header-cell{text-align:left}[dir=rtl] th.mat-header-cell{text-align:right}th.mat-header-cell,td.mat-cell,td.mat-footer-cell{padding:0;border-bottom-width:1px;border-bottom-style:solid}th.mat-header-cell:first-of-type,td.mat-cell:first-of-type,td.mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] th.mat-header-cell:first-of-type,[dir=rtl] td.mat-cell:first-of-type,[dir=rtl] td.mat-footer-cell:first-of-type{padding-left:0;padding-right:24px}th.mat-header-cell:last-of-type,td.mat-cell:last-of-type,td.mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] th.mat-header-cell:last-of-type,[dir=rtl] td.mat-cell:last-of-type,[dir=rtl] td.mat-footer-cell:last-of-type{padding-right:0;padding-left:24px}\\n\"]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Cell definition for the mat-table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\nclass MatCellDef extends CdkCellDef {\n}\nMatCellDef.ɵfac = function MatCellDef_Factory(t) { return ɵMatCellDef_BaseFactory(t || MatCellDef); };\nMatCellDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCellDef, selectors: [[\"\", \"matCellDef\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkCellDef, useExisting: MatCellDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatCellDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatCellDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCellDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matCellDef]',\n                providers: [{ provide: CdkCellDef, useExisting: MatCellDef }]\n            }]\n    }], null, null); })();\n/**\n * Header cell definition for the mat-table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\nclass MatHeaderCellDef extends CdkHeaderCellDef {\n}\nMatHeaderCellDef.ɵfac = function MatHeaderCellDef_Factory(t) { return ɵMatHeaderCellDef_BaseFactory(t || MatHeaderCellDef); };\nMatHeaderCellDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatHeaderCellDef, selectors: [[\"\", \"matHeaderCellDef\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkHeaderCellDef, useExisting: MatHeaderCellDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatHeaderCellDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatHeaderCellDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatHeaderCellDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matHeaderCellDef]',\n                providers: [{ provide: CdkHeaderCellDef, useExisting: MatHeaderCellDef }]\n            }]\n    }], null, null); })();\n/**\n * Footer cell definition for the mat-table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n */\nclass MatFooterCellDef extends CdkFooterCellDef {\n}\nMatFooterCellDef.ɵfac = function MatFooterCellDef_Factory(t) { return ɵMatFooterCellDef_BaseFactory(t || MatFooterCellDef); };\nMatFooterCellDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatFooterCellDef, selectors: [[\"\", \"matFooterCellDef\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkFooterCellDef, useExisting: MatFooterCellDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatFooterCellDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatFooterCellDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFooterCellDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matFooterCellDef]',\n                providers: [{ provide: CdkFooterCellDef, useExisting: MatFooterCellDef }]\n            }]\n    }], null, null); })();\n/**\n * Column definition for the mat-table.\n * Defines a set of cells available for a table column.\n */\nclass MatColumnDef extends CdkColumnDef {\n}\nMatColumnDef.ɵfac = function MatColumnDef_Factory(t) { return ɵMatColumnDef_BaseFactory(t || MatColumnDef); };\nMatColumnDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatColumnDef, selectors: [[\"\", \"matColumnDef\", \"\"]], inputs: { sticky: \"sticky\", name: [\"matColumnDef\", \"name\"] }, features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: CdkColumnDef, useExisting: MatColumnDef },\n            { provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: MatColumnDef }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatColumnDef.propDecorators = {\n    name: [{ type: Input, args: ['matColumnDef',] }]\n};\nconst ɵMatColumnDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatColumnDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatColumnDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matColumnDef]',\n                inputs: ['sticky'],\n                providers: [\n                    { provide: CdkColumnDef, useExisting: MatColumnDef },\n                    { provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: MatColumnDef }\n                ]\n            }]\n    }], null, { name: [{\n            type: Input,\n            args: ['matColumnDef']\n        }] }); })();\n/** Header cell template container that adds the right classes and role. */\nclass MatHeaderCell extends CdkHeaderCell {\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n        elementRef.nativeElement.classList.add(`mat-column-${columnDef.cssClassFriendlyName}`);\n    }\n}\nMatHeaderCell.ɵfac = function MatHeaderCell_Factory(t) { return new (t || MatHeaderCell)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatHeaderCell.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatHeaderCell, selectors: [[\"mat-header-cell\"], [\"th\", \"mat-header-cell\", \"\"]], hostAttrs: [\"role\", \"columnheader\", 1, \"mat-header-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatHeaderCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatHeaderCell, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-header-cell, th[mat-header-cell]',\n                host: {\n                    'class': 'mat-header-cell',\n                    'role': 'columnheader'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc1.CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n/** Footer cell template container that adds the right classes and role. */\nclass MatFooterCell extends CdkFooterCell {\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n        elementRef.nativeElement.classList.add(`mat-column-${columnDef.cssClassFriendlyName}`);\n    }\n}\nMatFooterCell.ɵfac = function MatFooterCell_Factory(t) { return new (t || MatFooterCell)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatFooterCell.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatFooterCell, selectors: [[\"mat-footer-cell\"], [\"td\", \"mat-footer-cell\", \"\"]], hostAttrs: [\"role\", \"gridcell\", 1, \"mat-footer-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatFooterCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFooterCell, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-footer-cell, td[mat-footer-cell]',\n                host: {\n                    'class': 'mat-footer-cell',\n                    'role': 'gridcell'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc1.CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n/** Cell template container that adds the right classes and role. */\nclass MatCell extends CdkCell {\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n        elementRef.nativeElement.classList.add(`mat-column-${columnDef.cssClassFriendlyName}`);\n    }\n}\nMatCell.ɵfac = function MatCell_Factory(t) { return new (t || MatCell)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatCell.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCell, selectors: [[\"mat-cell\"], [\"td\", \"mat-cell\", \"\"]], hostAttrs: [\"role\", \"gridcell\", 1, \"mat-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCell, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-cell, td[mat-cell]',\n                host: {\n                    'class': 'mat-cell',\n                    'role': 'gridcell'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc1.CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Header row definition for the mat-table.\n * Captures the header row's template and other header properties such as the columns to display.\n */\nclass MatHeaderRowDef extends CdkHeaderRowDef {\n}\nMatHeaderRowDef.ɵfac = function MatHeaderRowDef_Factory(t) { return ɵMatHeaderRowDef_BaseFactory(t || MatHeaderRowDef); };\nMatHeaderRowDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatHeaderRowDef, selectors: [[\"\", \"matHeaderRowDef\", \"\"]], inputs: { columns: [\"matHeaderRowDef\", \"columns\"], sticky: [\"matHeaderRowDefSticky\", \"sticky\"] }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkHeaderRowDef, useExisting: MatHeaderRowDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatHeaderRowDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatHeaderRowDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatHeaderRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matHeaderRowDef]',\n                providers: [{ provide: CdkHeaderRowDef, useExisting: MatHeaderRowDef }],\n                inputs: ['columns: matHeaderRowDef', 'sticky: matHeaderRowDefSticky']\n            }]\n    }], null, null); })();\n/**\n * Footer row definition for the mat-table.\n * Captures the footer row's template and other footer properties such as the columns to display.\n */\nclass MatFooterRowDef extends CdkFooterRowDef {\n}\nMatFooterRowDef.ɵfac = function MatFooterRowDef_Factory(t) { return ɵMatFooterRowDef_BaseFactory(t || MatFooterRowDef); };\nMatFooterRowDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatFooterRowDef, selectors: [[\"\", \"matFooterRowDef\", \"\"]], inputs: { columns: [\"matFooterRowDef\", \"columns\"], sticky: [\"matFooterRowDefSticky\", \"sticky\"] }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkFooterRowDef, useExisting: MatFooterRowDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatFooterRowDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatFooterRowDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFooterRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matFooterRowDef]',\n                providers: [{ provide: CdkFooterRowDef, useExisting: MatFooterRowDef }],\n                inputs: ['columns: matFooterRowDef', 'sticky: matFooterRowDefSticky']\n            }]\n    }], null, null); })();\n/**\n * Data row definition for the mat-table.\n * Captures the data row's template and other properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n */\nclass MatRowDef extends CdkRowDef {\n}\nMatRowDef.ɵfac = function MatRowDef_Factory(t) { return ɵMatRowDef_BaseFactory(t || MatRowDef); };\nMatRowDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatRowDef, selectors: [[\"\", \"matRowDef\", \"\"]], inputs: { columns: [\"matRowDefColumns\", \"columns\"], when: [\"matRowDefWhen\", \"when\"] }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkRowDef, useExisting: MatRowDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatRowDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatRowDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matRowDef]',\n                providers: [{ provide: CdkRowDef, useExisting: MatRowDef }],\n                inputs: ['columns: matRowDefColumns', 'when: matRowDefWhen']\n            }]\n    }], null, null); })();\n/** Header template container that contains the cell outlet. Adds the right class and role. */\nclass MatHeaderRow extends CdkHeaderRow {\n}\nMatHeaderRow.ɵfac = function MatHeaderRow_Factory(t) { return ɵMatHeaderRow_BaseFactory(t || MatHeaderRow); };\nMatHeaderRow.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatHeaderRow, selectors: [[\"mat-header-row\"], [\"tr\", \"mat-header-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"mat-header-row\"], exportAs: [\"matHeaderRow\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkHeaderRow, useExisting: MatHeaderRow }]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function MatHeaderRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [ɵngcc1.CdkCellOutlet], encapsulation: 2 });\nconst ɵMatHeaderRow_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatHeaderRow);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatHeaderRow, [{\n        type: Component,\n        args: [{\n                selector: 'mat-header-row, tr[mat-header-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'mat-header-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matHeaderRow',\n                providers: [{ provide: CdkHeaderRow, useExisting: MatHeaderRow }]\n            }]\n    }], null, null); })();\n/** Footer template container that contains the cell outlet. Adds the right class and role. */\nclass MatFooterRow extends CdkFooterRow {\n}\nMatFooterRow.ɵfac = function MatFooterRow_Factory(t) { return ɵMatFooterRow_BaseFactory(t || MatFooterRow); };\nMatFooterRow.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatFooterRow, selectors: [[\"mat-footer-row\"], [\"tr\", \"mat-footer-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"mat-footer-row\"], exportAs: [\"matFooterRow\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkFooterRow, useExisting: MatFooterRow }]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function MatFooterRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [ɵngcc1.CdkCellOutlet], encapsulation: 2 });\nconst ɵMatFooterRow_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatFooterRow);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFooterRow, [{\n        type: Component,\n        args: [{\n                selector: 'mat-footer-row, tr[mat-footer-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'mat-footer-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matFooterRow',\n                providers: [{ provide: CdkFooterRow, useExisting: MatFooterRow }]\n            }]\n    }], null, null); })();\n/** Data row template container that contains the cell outlet. Adds the right class and role. */\nclass MatRow extends CdkRow {\n}\nMatRow.ɵfac = function MatRow_Factory(t) { return ɵMatRow_BaseFactory(t || MatRow); };\nMatRow.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatRow, selectors: [[\"mat-row\"], [\"tr\", \"mat-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"mat-row\"], exportAs: [\"matRow\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkRow, useExisting: MatRow }]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function MatRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [ɵngcc1.CdkCellOutlet], encapsulation: 2 });\nconst ɵMatRow_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatRow);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatRow, [{\n        type: Component,\n        args: [{\n                selector: 'mat-row, tr[mat-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'mat-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matRow',\n                providers: [{ provide: CdkRow, useExisting: MatRow }]\n            }]\n    }], null, null); })();\n/** Row that can be used to display a message when no data is shown in the table. */\nclass MatNoDataRow extends CdkNoDataRow {\n}\nMatNoDataRow.ɵfac = function MatNoDataRow_Factory(t) { return ɵMatNoDataRow_BaseFactory(t || MatNoDataRow); };\nMatNoDataRow.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatNoDataRow, selectors: [[\"ng-template\", \"matNoDataRow\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkNoDataRow, useExisting: MatNoDataRow }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatNoDataRow_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatNoDataRow);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatNoDataRow, [{\n        type: Directive,\n        args: [{\n                selector: 'ng-template[matNoDataRow]',\n                providers: [{ provide: CdkNoDataRow, useExisting: MatNoDataRow }]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Column that simply shows text content for the header and row cells. Assumes that the table\n * is using the native table implementation (`<table>`).\n *\n * By default, the name of this column will be the header text and data property accessor.\n * The header text can be overridden with the `headerText` input. Cell values can be overridden with\n * the `dataAccessor` input. Change the text justification to the start or end using the `justify`\n * input.\n */\nclass MatTextColumn extends CdkTextColumn {\n}\nMatTextColumn.ɵfac = function MatTextColumn_Factory(t) { return ɵMatTextColumn_BaseFactory(t || MatTextColumn); };\nMatTextColumn.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTextColumn, selectors: [[\"mat-text-column\"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 0, consts: [[\"matColumnDef\", \"\"], [\"mat-header-cell\", \"\", 3, \"text-align\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", 3, \"text-align\", 4, \"matCellDef\"], [\"mat-header-cell\", \"\"], [\"mat-cell\", \"\"]], template: function MatTextColumn_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainerStart(0, 0);\n        ɵngcc0.ɵɵtemplate(1, MatTextColumn_th_1_Template, 2, 3, \"th\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatTextColumn_td_2_Template, 2, 3, \"td\", 2);\n        ɵngcc0.ɵɵelementContainerEnd();\n    } }, directives: [MatColumnDef, MatHeaderCellDef, MatCellDef, MatHeaderCell, MatCell], encapsulation: 2 });\nconst ɵMatTextColumn_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatTextColumn);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTextColumn, [{\n        type: Component,\n        args: [{\n                selector: 'mat-text-column',\n                template: `\n    <ng-container matColumnDef>\n      <th mat-header-cell *matHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td mat-cell *matCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `,\n                encapsulation: ViewEncapsulation.None,\n                // Change detection is intentionally not set to OnPush. This component's template will be provided\n                // to the table to be inserted into its view. This is problematic when change detection runs since\n                // the bindings in this template will be evaluated _after_ the table's view is evaluated, which\n                // mean's the template in the table's view will not have the updated value (and in fact will cause\n                // an ExpressionChangedAfterItHasBeenCheckedError).\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst EXPORTED_DECLARATIONS = [\n    // Table\n    MatTable,\n    // Template defs\n    MatHeaderCellDef,\n    MatHeaderRowDef,\n    MatColumnDef,\n    MatCellDef,\n    MatRowDef,\n    MatFooterCellDef,\n    MatFooterRowDef,\n    // Cell directives\n    MatHeaderCell,\n    MatCell,\n    MatFooterCell,\n    // Row directives\n    MatHeaderRow,\n    MatRow,\n    MatFooterRow,\n    MatNoDataRow,\n    MatTextColumn,\n];\nclass MatTableModule {\n}\nMatTableModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatTableModule });\nMatTableModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatTableModule_Factory(t) { return new (t || MatTableModule)(); }, imports: [[\n            CdkTableModule,\n            MatCommonModule,\n        ], MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatTableModule, { declarations: function () { return [MatTable, MatHeaderCellDef, MatHeaderRowDef, MatColumnDef, MatCellDef, MatRowDef, MatFooterCellDef, MatFooterRowDef, MatHeaderCell, MatCell, MatFooterCell, MatHeaderRow, MatRow, MatFooterRow, MatNoDataRow, MatTextColumn]; }, imports: function () { return [CdkTableModule,\n        MatCommonModule]; }, exports: function () { return [MatCommonModule, MatTable, MatHeaderCellDef, MatHeaderRowDef, MatColumnDef, MatCellDef, MatRowDef, MatFooterCellDef, MatFooterRowDef, MatHeaderCell, MatCell, MatFooterCell, MatHeaderRow, MatRow, MatFooterRow, MatNoDataRow, MatTextColumn]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTableModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CdkTableModule,\n                    MatCommonModule,\n                ],\n                exports: [MatCommonModule, EXPORTED_DECLARATIONS],\n                declarations: EXPORTED_DECLARATIONS\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Corresponds to `Number.MAX_SAFE_INTEGER`. Moved out into a variable here due to\n * flaky browser support and the value not being defined in Closure's typings.\n */\nconst MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * Data source that accepts a client-side data array and includes native support of filtering,\n * sorting (using MatSort), and pagination (using MatPaginator).\n *\n * Allows for sort customization by overriding sortingDataAccessor, which defines how data\n * properties are accessed. Also allows for filter customization by overriding filterTermAccessor,\n * which defines how row data is converted to a string for filter matching.\n *\n * **Note:** This class is meant to be a simple data source to help you get started. As such\n * it isn't equipped to handle some more advanced cases like robust i18n support or server-side\n * interactions. If your app needs to support more advanced use cases, consider implementing your\n * own `DataSource`.\n */\nclass MatTableDataSource extends DataSource {\n    constructor(initialData = []) {\n        super();\n        /** Stream emitting render data to the table (depends on ordered data changes). */\n        this._renderData = new BehaviorSubject([]);\n        /** Stream that emits when a new filter string is set on the data source. */\n        this._filter = new BehaviorSubject('');\n        /** Used to react to internal changes of the paginator that are made by the data source itself. */\n        this._internalPageChanges = new Subject();\n        /**\n         * Subscription to the changes that should trigger an update to the table's rendered rows, such\n         * as filtering, sorting, pagination, or base data changes.\n         */\n        this._renderChangesSubscription = Subscription.EMPTY;\n        /**\n         * Data accessor function that is used for accessing data properties for sorting through\n         * the default sortData function.\n         * This default function assumes that the sort header IDs (which defaults to the column name)\n         * matches the data's properties (e.g. column Xyz represents data['Xyz']).\n         * May be set to a custom function for different behavior.\n         * @param data Data object that is being accessed.\n         * @param sortHeaderId The name of the column that represents the data.\n         */\n        this.sortingDataAccessor = (data, sortHeaderId) => {\n            const value = data[sortHeaderId];\n            if (_isNumberValue(value)) {\n                const numberValue = Number(value);\n                // Numbers beyond `MAX_SAFE_INTEGER` can't be compared reliably so we\n                // leave them as strings. For more info: https://goo.gl/y5vbSg\n                return numberValue < MAX_SAFE_INTEGER ? numberValue : value;\n            }\n            return value;\n        };\n        /**\n         * Gets a sorted copy of the data array based on the state of the MatSort. Called\n         * after changes are made to the filtered data or when sort changes are emitted from MatSort.\n         * By default, the function retrieves the active sort and its direction and compares data\n         * by retrieving data using the sortingDataAccessor. May be overridden for a custom implementation\n         * of data ordering.\n         * @param data The array of data that should be sorted.\n         * @param sort The connected MatSort that holds the current sort state.\n         */\n        this.sortData = (data, sort) => {\n            const active = sort.active;\n            const direction = sort.direction;\n            if (!active || direction == '') {\n                return data;\n            }\n            return data.sort((a, b) => {\n                let valueA = this.sortingDataAccessor(a, active);\n                let valueB = this.sortingDataAccessor(b, active);\n                // If both valueA and valueB exist (truthy), then compare the two. Otherwise, check if\n                // one value exists while the other doesn't. In this case, existing value should come last.\n                // This avoids inconsistent results when comparing values to undefined/null.\n                // If neither value exists, return 0 (equal).\n                let comparatorResult = 0;\n                if (valueA != null && valueB != null) {\n                    // Check if one value is greater than the other; if equal, comparatorResult should remain 0.\n                    if (valueA > valueB) {\n                        comparatorResult = 1;\n                    }\n                    else if (valueA < valueB) {\n                        comparatorResult = -1;\n                    }\n                }\n                else if (valueA != null) {\n                    comparatorResult = 1;\n                }\n                else if (valueB != null) {\n                    comparatorResult = -1;\n                }\n                return comparatorResult * (direction == 'asc' ? 1 : -1);\n            });\n        };\n        /**\n         * Checks if a data object matches the data source's filter string. By default, each data object\n         * is converted to a string of its properties and returns true if the filter has\n         * at least one occurrence in that string. By default, the filter string has its whitespace\n         * trimmed and the match is case-insensitive. May be overridden for a custom implementation of\n         * filter matching.\n         * @param data Data object used to check against the filter.\n         * @param filter Filter string that has been set on the data source.\n         * @returns Whether the filter matches against the data\n         */\n        this.filterPredicate = (data, filter) => {\n            // Transform the data into a lowercase string of all property values.\n            const dataStr = Object.keys(data).reduce((currentTerm, key) => {\n                // Use an obscure Unicode character to delimit the words in the concatenated string.\n                // This avoids matches where the values of two columns combined will match the user's query\n                // (e.g. `Flute` and `Stop` will match `Test`). The character is intended to be something\n                // that has a very low chance of being typed in by somebody in a text field. This one in\n                // particular is \"White up-pointing triangle with dot\" from\n                // https://en.wikipedia.org/wiki/List_of_Unicode_characters\n                return currentTerm + data[key] + '◬';\n            }, '').toLowerCase();\n            // Transform the filter by converting it to lowercase and removing whitespace.\n            const transformedFilter = filter.trim().toLowerCase();\n            return dataStr.indexOf(transformedFilter) != -1;\n        };\n        this._data = new BehaviorSubject(initialData);\n        this._updateChangeSubscription();\n    }\n    /** Array of data that should be rendered by the table, where each object represents one row. */\n    get data() { return this._data.value; }\n    set data(data) { this._data.next(data); }\n    /**\n     * Filter term that should be used to filter out objects from the data array. To override how\n     * data objects match to this filter string, provide a custom function for filterPredicate.\n     */\n    get filter() { return this._filter.value; }\n    set filter(filter) { this._filter.next(filter); }\n    /**\n     * Instance of the MatSort directive used by the table to control its sorting. Sort changes\n     * emitted by the MatSort will trigger an update to the table's rendered data.\n     */\n    get sort() { return this._sort; }\n    set sort(sort) {\n        this._sort = sort;\n        this._updateChangeSubscription();\n    }\n    /**\n     * Instance of the MatPaginator component used by the table to control what page of the data is\n     * displayed. Page changes emitted by the MatPaginator will trigger an update to the\n     * table's rendered data.\n     *\n     * Note that the data source uses the paginator's properties to calculate which page of data\n     * should be displayed. If the paginator receives its properties as template inputs,\n     * e.g. `[pageLength]=100` or `[pageIndex]=1`, then be sure that the paginator's view has been\n     * initialized before assigning it to this data source.\n     */\n    get paginator() { return this._paginator; }\n    set paginator(paginator) {\n        this._paginator = paginator;\n        this._updateChangeSubscription();\n    }\n    /**\n     * Subscribe to changes that should trigger an update to the table's rendered rows. When the\n     * changes occur, process the current state of the filter, sort, and pagination along with\n     * the provided base data and send it to the table for rendering.\n     */\n    _updateChangeSubscription() {\n        // Sorting and/or pagination should be watched if MatSort and/or MatPaginator are provided.\n        // The events should emit whenever the component emits a change or initializes, or if no\n        // component is provided, a stream with just a null event should be provided.\n        // The `sortChange` and `pageChange` acts as a signal to the combineLatests below so that the\n        // pipeline can progress to the next step. Note that the value from these streams are not used,\n        // they purely act as a signal to progress in the pipeline.\n        const sortChange = this._sort ?\n            merge(this._sort.sortChange, this._sort.initialized) :\n            of(null);\n        const pageChange = this._paginator ?\n            merge(this._paginator.page, this._internalPageChanges, this._paginator.initialized) :\n            of(null);\n        const dataStream = this._data;\n        // Watch for base data or filter changes to provide a filtered set of data.\n        const filteredData = combineLatest([dataStream, this._filter])\n            .pipe(map(([data]) => this._filterData(data)));\n        // Watch for filtered data or sort changes to provide an ordered set of data.\n        const orderedData = combineLatest([filteredData, sortChange])\n            .pipe(map(([data]) => this._orderData(data)));\n        // Watch for ordered data or page changes to provide a paged set of data.\n        const paginatedData = combineLatest([orderedData, pageChange])\n            .pipe(map(([data]) => this._pageData(data)));\n        // Watched for paged data changes and send the result to the table to render.\n        this._renderChangesSubscription.unsubscribe();\n        this._renderChangesSubscription = paginatedData.subscribe(data => this._renderData.next(data));\n    }\n    /**\n     * Returns a filtered data array where each filter object contains the filter string within\n     * the result of the filterTermAccessor function. If no filter is set, returns the data array\n     * as provided.\n     */\n    _filterData(data) {\n        // If there is a filter string, filter out data that does not contain it.\n        // Each data object is converted to a string using the function defined by filterTermAccessor.\n        // May be overridden for customization.\n        this.filteredData =\n            !this.filter ? data : data.filter(obj => this.filterPredicate(obj, this.filter));\n        if (this.paginator) {\n            this._updatePaginator(this.filteredData.length);\n        }\n        return this.filteredData;\n    }\n    /**\n     * Returns a sorted copy of the data if MatSort has a sort applied, otherwise just returns the\n     * data array as provided. Uses the default data accessor for data lookup, unless a\n     * sortDataAccessor function is defined.\n     */\n    _orderData(data) {\n        // If there is no active sort or direction, return the data without trying to sort.\n        if (!this.sort) {\n            return data;\n        }\n        return this.sortData(data.slice(), this.sort);\n    }\n    /**\n     * Returns a paged slice of the provided data array according to the provided MatPaginator's page\n     * index and length. If there is no paginator provided, returns the data array as provided.\n     */\n    _pageData(data) {\n        if (!this.paginator) {\n            return data;\n        }\n        const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n        return data.slice(startIndex, startIndex + this.paginator.pageSize);\n    }\n    /**\n     * Updates the paginator to reflect the length of the filtered data, and makes sure that the page\n     * index does not exceed the paginator's last page. Values are changed in a resolved promise to\n     * guard against making property changes within a round of change detection.\n     */\n    _updatePaginator(filteredDataLength) {\n        Promise.resolve().then(() => {\n            const paginator = this.paginator;\n            if (!paginator) {\n                return;\n            }\n            paginator.length = filteredDataLength;\n            // If the page index is set beyond the page, reduce it to the last page.\n            if (paginator.pageIndex > 0) {\n                const lastPageIndex = Math.ceil(paginator.length / paginator.pageSize) - 1 || 0;\n                const newPageIndex = Math.min(paginator.pageIndex, lastPageIndex);\n                if (newPageIndex !== paginator.pageIndex) {\n                    paginator.pageIndex = newPageIndex;\n                    // Since the paginator only emits after user-generated changes,\n                    // we need our own stream so we know to should re-render the data.\n                    this._internalPageChanges.next();\n                }\n            }\n        });\n    }\n    /**\n     * Used by the MatTable. Called when it connects to the data source.\n     * @docs-private\n     */\n    connect() { return this._renderData; }\n    /**\n     * Used by the MatTable. Called when it is destroyed. No-op.\n     * @docs-private\n     */\n    disconnect() { }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatCell, MatCellDef, MatColumnDef, MatFooterCell, MatFooterCellDef, MatFooterRow, MatFooterRowDef, MatHeaderCell, MatHeaderCellDef, MatHeaderRow, MatHeaderRowDef, MatNoDataRow, MatRow, MatRowDef, MatTable, MatTableDataSource, MatTableModule, MatTextColumn };\n\n//# sourceMappingURL=table.js.map","import {ChangeDetectionStrategy, Component, Inject, OnInit} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\nimport {Translations} from '../../translations/translations.service';\r\nimport {Settings} from '../../config/settings.service';\r\n\r\nexport interface ConfirmModalData {\r\n    title: string;\r\n    body: string;\r\n    bodyBold?: string;\r\n    ok?: string;\r\n    cancel?: string;\r\n    replacements?: object;\r\n}\r\n\r\n@Component({\r\n    selector: 'confirm-modal',\r\n    templateUrl: './confirm-modal.component.html',\r\n    styleUrls: ['./confirm-modal.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ConfirmModalComponent implements OnInit {\r\n    constructor(\r\n        private dialogRef: MatDialogRef<ConfirmModalComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: ConfirmModalData,\r\n        private i18n: Translations,\r\n        public settings: Settings,\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        if ( ! this.data.ok) {\r\n            this.data.ok = 'Confirm';\r\n        }\r\n        if ( ! this.data.cancel) {\r\n            this.data.cancel = 'Cancel';\r\n        }\r\n        for (const key in this.data) {\r\n            if (typeof this.data[key] === 'string') {\r\n                this.data[key] = this.i18n.t(this.data[key], this.data.replacements);\r\n            }\r\n        }\r\n    }\r\n\r\n    public confirm() {\r\n        this.dialogRef.close(true);\r\n    }\r\n\r\n    public close() {\r\n        this.dialogRef.close(false);\r\n    }\r\n}\r\n","<div class=\"modal-header\">\r\n    <h2 class=\"modal-title\" mat-dialog-title>{{data.title}}</h2>\r\n    <button type=\"button\" (click)=\"close()\" class=\"close-button no-style\" tabindex=\"-1\">\r\n        <mat-icon svgIcon=\"close\"></mat-icon>\r\n    </button>\r\n</div>\r\n\r\n<div class=\"mat-dialog-contents\" mat-dialog-content>\r\n    <p>{{data.body}}</p>\r\n    <p class=\"bold\" *ngIf=\"data.bodyBold\">{{data.bodyBold}}</p>\r\n</div>\r\n\r\n<div class=\"buttons right mat-dialog-actions\" mat-dialog-actions>\r\n    <button (click)=\"close()\" type=\"button\" mat-button class=\"button cancel cancel-button\">{{data.cancel}}</button>\r\n    <button type=\"submit\" mat-raised-button color=\"accent\" class=\"button primary submit-button\" cdkFocusInitial (click)=\"confirm()\">{{data.ok}}</button>\r\n</div>\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { prettyBytes } from '../core/utils/pretty-bytes';\r\n\r\n@Pipe({\r\n    name: 'formattedFileSize',\r\n    pure: true,\r\n})\r\nexport class FormattedFileSizePipe implements PipeTransform {\r\n    transform(bytes: number = 0, precision?: number|string): string {\r\n        if (isNaN(parseFloat(String(bytes))) || ! isFinite(bytes)) return '-';\r\n        return prettyBytes(bytes, precision);\r\n    }\r\n}\r\n","import {ChangeDetectionStrategy, Component, Input} from '@angular/core';\r\nimport {Plan} from '@common/core/types/models/Plan';\r\nimport {Translations} from '@common/core/translations/translations.service';\r\nimport {ucFirst} from '@common/core/utils/uc-first';\r\n\r\n@Component({\r\n    selector: 'full-plan-name',\r\n    template: '{{getFullPlanName()}}',\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class FullPlanNameComponent {\r\n    @Input() plan: Plan;\r\n\r\n    constructor(private i18n: Translations) {}\r\n\r\n    public getFullPlanName(): string {\r\n        if ( ! this.plan) return;\r\n        let name = this.plan.parent ? this.plan.parent.name : this.plan.name;\r\n        name = ucFirst(this.i18n.t(name));\r\n        name += ' ' + this.i18n.t('Plan');\r\n        if (this.plan.parent) name += ': ' + this.plan.name;\r\n        return name;\r\n    }\r\n}\r\n","import {Inject, Injectable, Optional} from '@angular/core';\nimport {finalize, map, share, tap} from 'rxjs/operators';\nimport {Observable, of} from 'rxjs';\nimport {HttpClient} from '@angular/common/http';\nimport {DOCUMENT} from '@angular/common';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SvgCacheService {\n    private cache = new Map<string, SVGElement>();\n    private inProgressUrlFetches = new Map<string, Observable<string>>();\n\n    constructor(\n        private http: HttpClient,\n        @Optional() @Inject(DOCUMENT) private document: Document\n    ) {}\n\n    public get(name: string): Observable<SVGElement> {\n        const fileName = name.endsWith('.svg') ? name : `${name}.svg`;\n\n        if (this.cache.get(fileName)) {\n            return of(cloneSvg(this.cache.get(fileName)));\n        }\n\n        return this.fetchIcon(fileName).pipe(\n            map(svgText => this.svgElementFromString(svgText, fileName)),\n            tap(svg => this.cache.set(fileName, svg)),\n            map(svg => cloneSvg(svg))\n        );\n    }\n\n    private fetchIcon(fileName: string) {\n        const inProgressFetch = this.inProgressUrlFetches.get(fileName);\n        if (inProgressFetch) {\n            return inProgressFetch;\n        }\n\n        const req = this.http.get(`client/assets/images/illustrations/${fileName}`, {responseType: 'text'}).pipe(\n            finalize(() => this.inProgressUrlFetches.delete(fileName)),\n            share(),\n        );\n        this.inProgressUrlFetches.set(fileName, req);\n        return req;\n    }\n\n    private svgElementFromString(str: string, fileName: string = ''): SVGElement {\n        const div = this.document.createElement('DIV');\n        div.innerHTML = str;\n        const svg = div.querySelector('svg') as SVGElement;\n\n        if (!svg) {\n            throw Error(`<svg> tag not found for ${fileName}`);\n        }\n\n        return svg;\n    }\n}\n\nfunction cloneSvg(svg: SVGElement): SVGElement {\n    return svg.cloneNode(true) as SVGElement;\n}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef,\n    Input,\n    OnChanges,\n    OnDestroy,\n    SimpleChanges,\n    ViewEncapsulation\n} from '@angular/core';\nimport {SvgCacheService} from './svg-cache.service';\nimport {take} from 'rxjs/operators';\nimport {Subscription} from 'rxjs';\n\n@Component({\n    selector: 'svg-image',\n    templateUrl: './svg-image.component.html',\n    styleUrls: ['./svg-image.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        'role': 'img',\n    }\n})\nexport class SvgImageComponent implements OnChanges, OnDestroy {\n    @Input() name: string;\n    private currentSvgFetch: Subscription;\n\n    constructor(\n        private cache: SvgCacheService,\n        private el: ElementRef<HTMLElement>,\n    ) {}\n\n    ngOnChanges(changes: SimpleChanges) {\n        const svgIconChanges = changes.name;\n\n        if (svgIconChanges) {\n            this.currentSvgFetch?.unsubscribe();\n            if (this.name) {\n                this.currentSvgFetch = this.cache.get(this.name)\n                    .pipe(take(1))\n                    .subscribe(svg => this.setSvgElement(svg));\n            }\n        } else if (svgIconChanges.previousValue) {\n            this.clearSvgElement();\n        }\n    }\n\n    public ngOnDestroy(): void {\n        this.currentSvgFetch?.unsubscribe();\n    }\n\n    private setSvgElement(svg: SVGElement) {\n        this.clearSvgElement();\n\n        // Workaround for IE11 and Edge ignoring `style` tags inside dynamically-created SVGs.\n        // See: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/10898469/\n        // Do this before inserting the element into the DOM, in order to avoid a style recalculation.\n        const styleTags = svg.querySelectorAll('style') as NodeListOf<HTMLStyleElement>;\n\n        for (let i = 0; i < styleTags.length; i++) {\n            styleTags[i].textContent += ' ';\n        }\n\n        this.el.nativeElement.appendChild(svg);\n    }\n\n    private clearSvgElement() {\n        const layoutElement = this.el.nativeElement;\n        let childCount = layoutElement.childNodes.length;\n\n        // Remove existing non-element child nodes and SVGs, and add the new SVG element. Note that\n        // we can't use innerHTML, because IE will throw if the element has a data binding.\n        while (childCount--) {\n            const child = layoutElement.childNodes[childCount];\n\n            // 1 corresponds to Node.ELEMENT_NODE. We remove all non-element nodes in order to get rid\n            // of any loose text nodes, as well as any SVG elements in order to remove any old icons.\n            if (child.nodeType !== 1 || child.nodeName.toLowerCase() === 'svg') {\n                layoutElement.removeChild(child);\n            }\n        }\n    }\n\n}\n","import {ChangeDetectionStrategy, Component, HostBinding, Input} from '@angular/core';\r\nimport {Settings} from '../../config/settings.service';\r\n\r\n@Component({\r\n    selector: 'no-results-message',\r\n    templateUrl: './no-results-message.component.html',\r\n    styleUrls: ['./no-results-message.component.scss'],\r\n    host: {class: 'no-results-message'},\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class NoResultsMessageComponent {\r\n    @Input() svgImage = 'no-results.svg';\r\n    @Input() @HostBinding('class.horizontal') horizontal = false;\r\n    constructor(public settings: Settings) {}\r\n}\r\n","<svg-image class=\"icon\" [name]=\"svgImage\"></svg-image>\r\n<div class=\"text\">\r\n    <div class=\"main\">\r\n        <ng-content select=\"[primary-text]\"></ng-content>\r\n    </div>\r\n    <div class=\"secondary\">\r\n        <ng-content select=\"[secondary-text]\"></ng-content>\r\n    </div>\r\n</div>\r\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {NoResultsMessageComponent} from '@common/core/ui/no-results-message/no-results-message.component';\nimport {SvgImageModule} from '../svg-image/svg-image.module';\n\n@NgModule({\n    declarations: [\n        NoResultsMessageComponent,\n    ],\n    imports: [\n        CommonModule,\n        SvgImageModule,\n    ],\n    exports: [\n        NoResultsMessageComponent,\n    ]\n})\nexport class NoResultsMessageModule {\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {SvgImageComponent} from './svg-image.component';\n\n\n@NgModule({\n    declarations: [\n        SvgImageComponent\n    ],\n    imports: [\n        CommonModule\n    ],\n    exports: [\n        SvgImageComponent,\n    ]\n})\nexport class SvgImageModule {\n}\n","import {Injectable} from '@angular/core';\r\nimport {CanActivate, Router, ActivatedRouteSnapshot, RouterStateSnapshot, CanActivateChild} from '@angular/router';\r\nimport {Settings} from '@common/core/config/settings.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class BillingEnabledGuard implements CanActivate, CanActivateChild {\r\n    constructor(private settings: Settings, private router: Router) {}\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n        return this.handle();\r\n    }\r\n\r\n    canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n        return this.handle();\r\n    }\r\n\r\n    private handle() {\r\n        if (this.settings.get('billing.integrated') && this.settings.get('billing.enable')) {\r\n            return true;\r\n        }\r\n\r\n        this.router.navigate(['/']);\r\n        return false;\r\n    }\r\n}\r\n","import { FocusKeyManager } from '@angular/cdk/a11y';\nimport { Directionality, BidiModule } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { hasModifierKey, SPACE, ENTER, HOME, END } from '@angular/cdk/keycodes';\nimport { DOCUMENT } from '@angular/common';\nimport { Directive, ElementRef, TemplateRef, InjectionToken, Component, ViewEncapsulation, ChangeDetectionStrategy, Inject, forwardRef, Optional, ContentChild, ViewChild, Input, EventEmitter, ChangeDetectorRef, ContentChildren, Output, HostListener, NgModule } from '@angular/core';\nimport { Subject, of } from 'rxjs';\nimport { startWith, takeUntil } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\n\nfunction CdkStep_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0);\n} }\nconst _c0 = [\"*\"];\nclass CdkStepHeader {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n    /** Focuses the step header. */\n    focus() {\n        this._elementRef.nativeElement.focus();\n    }\n}\nCdkStepHeader.ɵfac = function CdkStepHeader_Factory(t) { return new (t || CdkStepHeader)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nCdkStepHeader.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkStepHeader, selectors: [[\"\", \"cdkStepHeader\", \"\"]], hostAttrs: [\"role\", \"tab\"] });\nCdkStepHeader.ctorParameters = () => [\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkStepHeader, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkStepHeader]',\n                host: {\n                    'role': 'tab'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass CdkStepLabel {\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkStepLabel.ɵfac = function CdkStepLabel_Factory(t) { return new (t || CdkStepLabel)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkStepLabel.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkStepLabel, selectors: [[\"\", \"cdkStepLabel\", \"\"]] });\nCdkStepLabel.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkStepLabel, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkStepLabel]'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Used to generate unique ID for each stepper component. */\nlet nextId = 0;\n/** Change event emitted on selection changes. */\nclass StepperSelectionEvent {\n}\n/** Enum to represent the different states of the steps. */\nconst STEP_STATE = {\n    NUMBER: 'number',\n    EDIT: 'edit',\n    DONE: 'done',\n    ERROR: 'error'\n};\n/** InjectionToken that can be used to specify the global stepper options. */\nconst STEPPER_GLOBAL_OPTIONS = new InjectionToken('STEPPER_GLOBAL_OPTIONS');\n/**\n * InjectionToken that can be used to specify the global stepper options.\n * @deprecated Use `STEPPER_GLOBAL_OPTIONS` instead.\n * @breaking-change 8.0.0.\n */\nconst MAT_STEPPER_GLOBAL_OPTIONS = STEPPER_GLOBAL_OPTIONS;\nclass CdkStep {\n    /** @breaking-change 8.0.0 remove the `?` after `stepperOptions` */\n    constructor(_stepper, stepperOptions) {\n        this._stepper = _stepper;\n        /** Whether user has seen the expanded step content or not. */\n        this.interacted = false;\n        this._editable = true;\n        this._optional = false;\n        this._completedOverride = null;\n        this._customError = null;\n        this._stepperOptions = stepperOptions ? stepperOptions : {};\n        this._displayDefaultIndicatorType = this._stepperOptions.displayDefaultIndicatorType !== false;\n        this._showError = !!this._stepperOptions.showError;\n    }\n    /** Whether the user can return to this step once it has been marked as completed. */\n    get editable() {\n        return this._editable;\n    }\n    set editable(value) {\n        this._editable = coerceBooleanProperty(value);\n    }\n    /** Whether the completion of step is optional. */\n    get optional() {\n        return this._optional;\n    }\n    set optional(value) {\n        this._optional = coerceBooleanProperty(value);\n    }\n    /** Whether step is marked as completed. */\n    get completed() {\n        return this._completedOverride == null ? this._getDefaultCompleted() : this._completedOverride;\n    }\n    set completed(value) {\n        this._completedOverride = coerceBooleanProperty(value);\n    }\n    _getDefaultCompleted() {\n        return this.stepControl ? this.stepControl.valid && this.interacted : this.interacted;\n    }\n    /** Whether step has an error. */\n    get hasError() {\n        return this._customError == null ? this._getDefaultError() : this._customError;\n    }\n    set hasError(value) {\n        this._customError = coerceBooleanProperty(value);\n    }\n    _getDefaultError() {\n        return this.stepControl && this.stepControl.invalid && this.interacted;\n    }\n    /** Selects this step component. */\n    select() {\n        this._stepper.selected = this;\n    }\n    /** Resets the step to its initial state. Note that this includes resetting form data. */\n    reset() {\n        this.interacted = false;\n        if (this._completedOverride != null) {\n            this._completedOverride = false;\n        }\n        if (this._customError != null) {\n            this._customError = false;\n        }\n        if (this.stepControl) {\n            this.stepControl.reset();\n        }\n    }\n    ngOnChanges() {\n        // Since basically all inputs of the MatStep get proxied through the view down to the\n        // underlying MatStepHeader, we have to make sure that change detection runs correctly.\n        this._stepper._stateChanged();\n    }\n}\nCdkStep.ɵfac = function CdkStep_Factory(t) { return new (t || CdkStep)(ɵngcc0.ɵɵdirectiveInject(forwardRef(() => CdkStepper)), ɵngcc0.ɵɵdirectiveInject(STEPPER_GLOBAL_OPTIONS, 8)); };\nCdkStep.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CdkStep, selectors: [[\"cdk-step\"]], contentQueries: function CdkStep_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkStepLabel, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.stepLabel = _t.first);\n    } }, viewQuery: function CdkStep_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(TemplateRef, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.content = _t.first);\n    } }, inputs: { editable: \"editable\", optional: \"optional\", completed: \"completed\", hasError: \"hasError\", stepControl: \"stepControl\", label: \"label\", errorMessage: \"errorMessage\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], state: \"state\" }, exportAs: [\"cdkStep\"], features: [ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function CdkStep_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, CdkStep_ng_template_0_Template, 1, 0, \"ng-template\");\n    } }, encapsulation: 2, changeDetection: 0 });\nCdkStep.ctorParameters = () => [\n    { type: CdkStepper, decorators: [{ type: Inject, args: [forwardRef(() => CdkStepper),] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [STEPPER_GLOBAL_OPTIONS,] }] }\n];\nCdkStep.propDecorators = {\n    stepLabel: [{ type: ContentChild, args: [CdkStepLabel,] }],\n    content: [{ type: ViewChild, args: [TemplateRef, { static: true },] }],\n    stepControl: [{ type: Input }],\n    label: [{ type: Input }],\n    errorMessage: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    state: [{ type: Input }],\n    editable: [{ type: Input }],\n    optional: [{ type: Input }],\n    completed: [{ type: Input }],\n    hasError: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkStep, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-step',\n                exportAs: 'cdkStep',\n                template: '<ng-template><ng-content></ng-content></ng-template>',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: CdkStepper, decorators: [{\n                type: Inject,\n                args: [forwardRef(() => CdkStepper)]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [STEPPER_GLOBAL_OPTIONS]\n            }] }]; }, { editable: [{\n            type: Input\n        }], optional: [{\n            type: Input\n        }], completed: [{\n            type: Input\n        }], hasError: [{\n            type: Input\n        }], stepLabel: [{\n            type: ContentChild,\n            args: [CdkStepLabel]\n        }], content: [{\n            type: ViewChild,\n            args: [TemplateRef, { static: true }]\n        }], stepControl: [{\n            type: Input\n        }], label: [{\n            type: Input\n        }], errorMessage: [{\n            type: Input\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], state: [{\n            type: Input\n        }] }); })();\nclass CdkStepper {\n    constructor(_dir, _changeDetectorRef, \n    // @breaking-change 8.0.0 `_elementRef` and `_document` parameters to become required.\n    _elementRef, _document) {\n        this._dir = _dir;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        /** Emits when the component is destroyed. */\n        this._destroyed = new Subject();\n        this._linear = false;\n        this._selectedIndex = 0;\n        /** Event emitted when the selected step has changed. */\n        this.selectionChange = new EventEmitter();\n        this._orientation = 'horizontal';\n        this._groupId = nextId++;\n        this._document = _document;\n    }\n    /** The list of step components that the stepper is holding. */\n    get steps() {\n        return this._steps;\n    }\n    /** Whether the validity of previous steps should be checked or not. */\n    get linear() {\n        return this._linear;\n    }\n    set linear(value) {\n        this._linear = coerceBooleanProperty(value);\n    }\n    /** The index of the selected step. */\n    get selectedIndex() {\n        return this._selectedIndex;\n    }\n    set selectedIndex(index) {\n        const newIndex = coerceNumberProperty(index);\n        if (this.steps) {\n            // Ensure that the index can't be out of bounds.\n            if (newIndex < 0 || newIndex > this.steps.length - 1) {\n                throw Error('cdkStepper: Cannot assign out-of-bounds value to `selectedIndex`.');\n            }\n            if (this._selectedIndex != newIndex && !this._anyControlsInvalidOrPending(newIndex) &&\n                (newIndex >= this._selectedIndex || this.steps.toArray()[newIndex].editable)) {\n                this._updateSelectedItemIndex(index);\n            }\n        }\n        else {\n            this._selectedIndex = newIndex;\n        }\n    }\n    /** The step that is selected. */\n    get selected() {\n        // @breaking-change 8.0.0 Change return type to `CdkStep | undefined`.\n        return this.steps ? this.steps.toArray()[this.selectedIndex] : undefined;\n    }\n    set selected(step) {\n        this.selectedIndex = this.steps ? this.steps.toArray().indexOf(step) : -1;\n    }\n    ngAfterViewInit() {\n        // Note that while the step headers are content children by default, any components that\n        // extend this one might have them as view children. We initialize the keyboard handling in\n        // AfterViewInit so we're guaranteed for both view and content children to be defined.\n        this._keyManager = new FocusKeyManager(this._stepHeader)\n            .withWrap()\n            .withVerticalOrientation(this._orientation === 'vertical');\n        (this._dir ? this._dir.change : of())\n            .pipe(startWith(this._layoutDirection()), takeUntil(this._destroyed))\n            .subscribe(direction => this._keyManager.withHorizontalOrientation(direction));\n        this._keyManager.updateActiveItem(this._selectedIndex);\n        this.steps.changes.pipe(takeUntil(this._destroyed)).subscribe(() => {\n            if (!this.selected) {\n                this._selectedIndex = Math.max(this._selectedIndex - 1, 0);\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Selects and focuses the next step in list. */\n    next() {\n        this.selectedIndex = Math.min(this._selectedIndex + 1, this.steps.length - 1);\n    }\n    /** Selects and focuses the previous step in list. */\n    previous() {\n        this.selectedIndex = Math.max(this._selectedIndex - 1, 0);\n    }\n    /** Resets the stepper to its initial state. Note that this includes clearing form data. */\n    reset() {\n        this._updateSelectedItemIndex(0);\n        this.steps.forEach(step => step.reset());\n        this._stateChanged();\n    }\n    /** Returns a unique id for each step label element. */\n    _getStepLabelId(i) {\n        return `cdk-step-label-${this._groupId}-${i}`;\n    }\n    /** Returns unique id for each step content element. */\n    _getStepContentId(i) {\n        return `cdk-step-content-${this._groupId}-${i}`;\n    }\n    /** Marks the component to be change detected. */\n    _stateChanged() {\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Returns position state of the step with the given index. */\n    _getAnimationDirection(index) {\n        const position = index - this._selectedIndex;\n        if (position < 0) {\n            return this._layoutDirection() === 'rtl' ? 'next' : 'previous';\n        }\n        else if (position > 0) {\n            return this._layoutDirection() === 'rtl' ? 'previous' : 'next';\n        }\n        return 'current';\n    }\n    /** Returns the type of icon to be displayed. */\n    _getIndicatorType(index, state = STEP_STATE.NUMBER) {\n        const step = this.steps.toArray()[index];\n        const isCurrentStep = this._isCurrentStep(index);\n        return step._displayDefaultIndicatorType ? this._getDefaultIndicatorLogic(step, isCurrentStep) :\n            this._getGuidelineLogic(step, isCurrentStep, state);\n    }\n    _getDefaultIndicatorLogic(step, isCurrentStep) {\n        if (step._showError && step.hasError && !isCurrentStep) {\n            return STEP_STATE.ERROR;\n        }\n        else if (!step.completed || isCurrentStep) {\n            return STEP_STATE.NUMBER;\n        }\n        else {\n            return step.editable ? STEP_STATE.EDIT : STEP_STATE.DONE;\n        }\n    }\n    _getGuidelineLogic(step, isCurrentStep, state = STEP_STATE.NUMBER) {\n        if (step._showError && step.hasError && !isCurrentStep) {\n            return STEP_STATE.ERROR;\n        }\n        else if (step.completed && !isCurrentStep) {\n            return STEP_STATE.DONE;\n        }\n        else if (step.completed && isCurrentStep) {\n            return state;\n        }\n        else if (step.editable && isCurrentStep) {\n            return STEP_STATE.EDIT;\n        }\n        else {\n            return state;\n        }\n    }\n    _isCurrentStep(index) {\n        return this._selectedIndex === index;\n    }\n    /** Returns the index of the currently-focused step header. */\n    _getFocusIndex() {\n        return this._keyManager ? this._keyManager.activeItemIndex : this._selectedIndex;\n    }\n    _updateSelectedItemIndex(newIndex) {\n        const stepsArray = this.steps.toArray();\n        this.selectionChange.emit({\n            selectedIndex: newIndex,\n            previouslySelectedIndex: this._selectedIndex,\n            selectedStep: stepsArray[newIndex],\n            previouslySelectedStep: stepsArray[this._selectedIndex],\n        });\n        // If focus is inside the stepper, move it to the next header, otherwise it may become\n        // lost when the active step content is hidden. We can't be more granular with the check\n        // (e.g. checking whether focus is inside the active step), because we don't have a\n        // reference to the elements that are rendering out the content.\n        this._containsFocus() ? this._keyManager.setActiveItem(newIndex) :\n            this._keyManager.updateActiveItem(newIndex);\n        this._selectedIndex = newIndex;\n        this._stateChanged();\n    }\n    _onKeydown(event) {\n        const hasModifier = hasModifierKey(event);\n        const keyCode = event.keyCode;\n        const manager = this._keyManager;\n        if (manager.activeItemIndex != null && !hasModifier &&\n            (keyCode === SPACE || keyCode === ENTER)) {\n            this.selectedIndex = manager.activeItemIndex;\n            event.preventDefault();\n        }\n        else if (keyCode === HOME) {\n            manager.setFirstItemActive();\n            event.preventDefault();\n        }\n        else if (keyCode === END) {\n            manager.setLastItemActive();\n            event.preventDefault();\n        }\n        else {\n            manager.onKeydown(event);\n        }\n    }\n    _anyControlsInvalidOrPending(index) {\n        const steps = this.steps.toArray();\n        steps[this._selectedIndex].interacted = true;\n        if (this._linear && index >= 0) {\n            return steps.slice(0, index).some(step => {\n                const control = step.stepControl;\n                const isIncomplete = control ? (control.invalid || control.pending || !step.interacted) : !step.completed;\n                return isIncomplete && !step.optional && !step._completedOverride;\n            });\n        }\n        return false;\n    }\n    _layoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Checks whether the stepper contains the focused element. */\n    _containsFocus() {\n        if (!this._document || !this._elementRef) {\n            return false;\n        }\n        const stepperElement = this._elementRef.nativeElement;\n        const focusedElement = this._document.activeElement;\n        return stepperElement === focusedElement || stepperElement.contains(focusedElement);\n    }\n}\nCdkStepper.ɵfac = function CdkStepper_Factory(t) { return new (t || CdkStepper)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };\nCdkStepper.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkStepper, selectors: [[\"\", \"cdkStepper\", \"\"]], contentQueries: function CdkStepper_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkStep, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkStepHeader, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._steps = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._stepHeader = _t);\n    } }, inputs: { linear: \"linear\", selectedIndex: \"selectedIndex\", selected: \"selected\" }, outputs: { selectionChange: \"selectionChange\" }, exportAs: [\"cdkStepper\"] });\nCdkStepper.ctorParameters = () => [\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ChangeDetectorRef },\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\nCdkStepper.propDecorators = {\n    _steps: [{ type: ContentChildren, args: [CdkStep, { descendants: true },] }],\n    _stepHeader: [{ type: ContentChildren, args: [CdkStepHeader, { descendants: true },] }],\n    linear: [{ type: Input }],\n    selectedIndex: [{ type: Input }],\n    selected: [{ type: Input }],\n    selectionChange: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkStepper, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkStepper]',\n                exportAs: 'cdkStepper'\n            }]\n    }], function () { return [{ type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { selectionChange: [{\n            type: Output\n        }], linear: [{\n            type: Input\n        }], selectedIndex: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], _steps: [{\n            type: ContentChildren,\n            args: [CdkStep, { descendants: true }]\n        }], _stepHeader: [{\n            type: ContentChildren,\n            args: [CdkStepHeader, { descendants: true }]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Button that moves to the next step in a stepper workflow. */\nclass CdkStepperNext {\n    constructor(_stepper) {\n        this._stepper = _stepper;\n        /** Type of the next button. Defaults to \"submit\" if not specified. */\n        this.type = 'submit';\n    }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _handleClick() {\n        this._stepper.next();\n    }\n}\nCdkStepperNext.ɵfac = function CdkStepperNext_Factory(t) { return new (t || CdkStepperNext)(ɵngcc0.ɵɵdirectiveInject(CdkStepper)); };\nCdkStepperNext.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkStepperNext, selectors: [[\"button\", \"cdkStepperNext\", \"\"]], hostVars: 1, hostBindings: function CdkStepperNext_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function CdkStepperNext_click_HostBindingHandler() { return ctx._handleClick(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"type\", ctx.type);\n    } }, inputs: { type: \"type\" } });\nCdkStepperNext.ctorParameters = () => [\n    { type: CdkStepper }\n];\nCdkStepperNext.propDecorators = {\n    type: [{ type: Input }],\n    _handleClick: [{ type: HostListener, args: ['click',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkStepperNext, [{\n        type: Directive,\n        args: [{\n                selector: 'button[cdkStepperNext]',\n                host: {\n                    '[type]': 'type'\n                }\n            }]\n    }], function () { return [{ type: CdkStepper }]; }, { type: [{\n            type: Input\n        }], _handleClick: [{\n            type: HostListener,\n            args: ['click']\n        }] }); })();\n/** Button that moves to the previous step in a stepper workflow. */\nclass CdkStepperPrevious {\n    constructor(_stepper) {\n        this._stepper = _stepper;\n        /** Type of the previous button. Defaults to \"button\" if not specified. */\n        this.type = 'button';\n    }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _handleClick() {\n        this._stepper.previous();\n    }\n}\nCdkStepperPrevious.ɵfac = function CdkStepperPrevious_Factory(t) { return new (t || CdkStepperPrevious)(ɵngcc0.ɵɵdirectiveInject(CdkStepper)); };\nCdkStepperPrevious.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkStepperPrevious, selectors: [[\"button\", \"cdkStepperPrevious\", \"\"]], hostVars: 1, hostBindings: function CdkStepperPrevious_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function CdkStepperPrevious_click_HostBindingHandler() { return ctx._handleClick(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"type\", ctx.type);\n    } }, inputs: { type: \"type\" } });\nCdkStepperPrevious.ctorParameters = () => [\n    { type: CdkStepper }\n];\nCdkStepperPrevious.propDecorators = {\n    type: [{ type: Input }],\n    _handleClick: [{ type: HostListener, args: ['click',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkStepperPrevious, [{\n        type: Directive,\n        args: [{\n                selector: 'button[cdkStepperPrevious]',\n                host: {\n                    '[type]': 'type'\n                }\n            }]\n    }], function () { return [{ type: CdkStepper }]; }, { type: [{\n            type: Input\n        }], _handleClick: [{\n            type: HostListener,\n            args: ['click']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass CdkStepperModule {\n}\nCdkStepperModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: CdkStepperModule });\nCdkStepperModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function CdkStepperModule_Factory(t) { return new (t || CdkStepperModule)(); }, imports: [[BidiModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CdkStepperModule, { declarations: function () { return [CdkStep, CdkStepper, CdkStepHeader, CdkStepLabel, CdkStepperNext, CdkStepperPrevious]; }, imports: function () { return [BidiModule]; }, exports: function () { return [CdkStep, CdkStepper, CdkStepHeader, CdkStepLabel, CdkStepperNext, CdkStepperPrevious]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkStepperModule, [{\n        type: NgModule,\n        args: [{\n                imports: [BidiModule],\n                exports: [\n                    CdkStep,\n                    CdkStepper,\n                    CdkStepHeader,\n                    CdkStepLabel,\n                    CdkStepperNext,\n                    CdkStepperPrevious,\n                ],\n                declarations: [\n                    CdkStep,\n                    CdkStepper,\n                    CdkStepHeader,\n                    CdkStepLabel,\n                    CdkStepperNext,\n                    CdkStepperPrevious,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkStep, CdkStepHeader, CdkStepLabel, CdkStepper, CdkStepperModule, CdkStepperNext, CdkStepperPrevious, MAT_STEPPER_GLOBAL_OPTIONS, STEPPER_GLOBAL_OPTIONS, STEP_STATE, StepperSelectionEvent };\n\n//# sourceMappingURL=stepper.js.map","import { PortalModule } from '@angular/cdk/portal';\nimport { CdkStepLabel, CdkStepHeader, CdkStep, STEPPER_GLOBAL_OPTIONS, CdkStepper, CdkStepperNext, CdkStepperPrevious, CdkStepperModule } from '@angular/cdk/stepper';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { Directive, ɵɵdefineInjectable, Injectable, Optional, SkipSelf, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, Input, TemplateRef, Inject, forwardRef, ContentChild, EventEmitter, ViewChildren, ContentChildren, Output, NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { ErrorStateMatcher, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { Subject } from 'rxjs';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { takeUntil, distinctUntilChanged } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/common';\nimport * as ɵngcc4 from '@angular/material/icon';\nimport * as ɵngcc5 from '@angular/cdk/bidi';\n\nfunction MatStepHeader_ng_container_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0, 9);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.iconOverrides[ctx_r0.state])(\"ngTemplateOutletContext\", ctx_r0._getIconContext());\n} }\nfunction MatStepHeader_ng_container_4_span_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r6 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r6._getDefaultTextForState(ctx_r6.state));\n} }\nfunction MatStepHeader_ng_container_4_mat_icon_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-icon\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r7 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r7._getDefaultTextForState(ctx_r7.state));\n} }\nfunction MatStepHeader_ng_container_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0, 10);\n    ɵngcc0.ɵɵtemplate(1, MatStepHeader_ng_container_4_span_1_Template, 2, 1, \"span\", 11);\n    ɵngcc0.ɵɵtemplate(2, MatStepHeader_ng_container_4_mat_icon_2_Template, 2, 1, \"mat-icon\", 12);\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx_r1.state);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"number\");\n} }\nfunction MatStepHeader_ng_container_6_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0, 13);\n} if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r2._templateLabel().template);\n} }\nfunction MatStepHeader_div_7_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 14);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r3.label);\n} }\nfunction MatStepHeader_div_8_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 15);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r4._intl.optionalLabel);\n} }\nfunction MatStepHeader_div_9_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 16);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r5 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r5.errorMessage);\n} }\nfunction MatStep_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0);\n} }\nconst _c0 = [\"*\"];\nfunction MatHorizontalStepper_ng_container_1_div_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 6);\n} }\nfunction MatHorizontalStepper_ng_container_1_Template(rf, ctx) { if (rf & 1) {\n    const _r8 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"mat-step-header\", 4);\n    ɵngcc0.ɵɵlistener(\"click\", function MatHorizontalStepper_ng_container_1_Template_mat_step_header_click_1_listener() { const step_r2 = ctx.$implicit; return step_r2.select(); })(\"keydown\", function MatHorizontalStepper_ng_container_1_Template_mat_step_header_keydown_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r8); const ctx_r7 = ɵngcc0.ɵɵnextContext(); return ctx_r7._onKeydown($event); });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(2, MatHorizontalStepper_ng_container_1_div_2_Template, 1, 0, \"div\", 5);\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const step_r2 = ctx.$implicit;\n    const i_r3 = ctx.index;\n    const isLast_r4 = ctx.last;\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"tabIndex\", ctx_r0._getFocusIndex() === i_r3 ? 0 : 0 - 1)(\"id\", ctx_r0._getStepLabelId(i_r3))(\"index\", i_r3)(\"state\", ctx_r0._getIndicatorType(i_r3, step_r2.state))(\"label\", step_r2.stepLabel || step_r2.label)(\"selected\", ctx_r0.selectedIndex === i_r3)(\"active\", step_r2.completed || ctx_r0.selectedIndex === i_r3 || !ctx_r0.linear)(\"optional\", step_r2.optional)(\"errorMessage\", step_r2.errorMessage)(\"iconOverrides\", ctx_r0._iconOverrides)(\"disableRipple\", ctx_r0.disableRipple);\n    ɵngcc0.ɵɵattribute(\"aria-posinset\", i_r3 + 1)(\"aria-setsize\", ctx_r0.steps.length)(\"aria-controls\", ctx_r0._getStepContentId(i_r3))(\"aria-selected\", ctx_r0.selectedIndex == i_r3)(\"aria-label\", step_r2.ariaLabel || null)(\"aria-labelledby\", !step_r2.ariaLabel && step_r2.ariaLabelledby ? step_r2.ariaLabelledby : null);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !isLast_r4);\n} }\nfunction MatHorizontalStepper_div_3_Template(rf, ctx) { if (rf & 1) {\n    const _r12 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 7);\n    ɵngcc0.ɵɵlistener(\"@stepTransition.done\", function MatHorizontalStepper_div_3_Template_div_animation_stepTransition_done_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r12); const ctx_r11 = ɵngcc0.ɵɵnextContext(); return ctx_r11._animationDone.next($event); });\n    ɵngcc0.ɵɵelementContainer(1, 8);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const step_r9 = ctx.$implicit;\n    const i_r10 = ctx.index;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@stepTransition\", ctx_r1._getAnimationDirection(i_r10))(\"id\", ctx_r1._getStepContentId(i_r10));\n    ɵngcc0.ɵɵattribute(\"tabindex\", ctx_r1.selectedIndex === i_r10 ? 0 : null)(\"aria-labelledby\", ctx_r1._getStepLabelId(i_r10))(\"aria-expanded\", ctx_r1.selectedIndex === i_r10);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", step_r9.content);\n} }\nfunction MatVerticalStepper_div_0_Template(rf, ctx) { if (rf & 1) {\n    const _r6 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 1);\n    ɵngcc0.ɵɵelementStart(1, \"mat-step-header\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function MatVerticalStepper_div_0_Template_mat_step_header_click_1_listener() { const step_r1 = ctx.$implicit; return step_r1.select(); })(\"keydown\", function MatVerticalStepper_div_0_Template_mat_step_header_keydown_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r6); const ctx_r5 = ɵngcc0.ɵɵnextContext(); return ctx_r5._onKeydown($event); });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(2, \"div\", 3);\n    ɵngcc0.ɵɵelementStart(3, \"div\", 4);\n    ɵngcc0.ɵɵlistener(\"@stepTransition.done\", function MatVerticalStepper_div_0_Template_div_animation_stepTransition_done_3_listener($event) { ɵngcc0.ɵɵrestoreView(_r6); const ctx_r7 = ɵngcc0.ɵɵnextContext(); return ctx_r7._animationDone.next($event); });\n    ɵngcc0.ɵɵelementStart(4, \"div\", 5);\n    ɵngcc0.ɵɵelementContainer(5, 6);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const step_r1 = ctx.$implicit;\n    const i_r2 = ctx.index;\n    const isLast_r3 = ctx.last;\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"tabIndex\", ctx_r0._getFocusIndex() == i_r2 ? 0 : 0 - 1)(\"id\", ctx_r0._getStepLabelId(i_r2))(\"index\", i_r2)(\"state\", ctx_r0._getIndicatorType(i_r2, step_r1.state))(\"label\", step_r1.stepLabel || step_r1.label)(\"selected\", ctx_r0.selectedIndex === i_r2)(\"active\", step_r1.completed || ctx_r0.selectedIndex === i_r2 || !ctx_r0.linear)(\"optional\", step_r1.optional)(\"errorMessage\", step_r1.errorMessage)(\"iconOverrides\", ctx_r0._iconOverrides)(\"disableRipple\", ctx_r0.disableRipple);\n    ɵngcc0.ɵɵattribute(\"aria-posinset\", i_r2 + 1)(\"aria-setsize\", ctx_r0.steps.length)(\"aria-controls\", ctx_r0._getStepContentId(i_r2))(\"aria-selected\", ctx_r0.selectedIndex === i_r2)(\"aria-label\", step_r1.ariaLabel || null)(\"aria-labelledby\", !step_r1.ariaLabel && step_r1.ariaLabelledby ? step_r1.ariaLabelledby : null);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassProp(\"mat-stepper-vertical-line\", !isLast_r3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"@stepTransition\", ctx_r0._getAnimationDirection(i_r2))(\"id\", ctx_r0._getStepContentId(i_r2));\n    ɵngcc0.ɵɵattribute(\"tabindex\", ctx_r0.selectedIndex === i_r2 ? 0 : null)(\"aria-labelledby\", ctx_r0._getStepLabelId(i_r2))(\"aria-expanded\", ctx_r0.selectedIndex === i_r2);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", step_r1.content);\n} }\nclass MatStepLabel extends CdkStepLabel {\n}\nMatStepLabel.ɵfac = function MatStepLabel_Factory(t) { return ɵMatStepLabel_BaseFactory(t || MatStepLabel); };\nMatStepLabel.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatStepLabel, selectors: [[\"\", \"matStepLabel\", \"\"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatStepLabel_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatStepLabel);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatStepLabel, [{\n        type: Directive,\n        args: [{\n                selector: '[matStepLabel]'\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Stepper data that is required for internationalization. */\nclass MatStepperIntl {\n    constructor() {\n        /**\n         * Stream that emits whenever the labels here are changed. Use this to notify\n         * components if the labels have changed after initialization.\n         */\n        this.changes = new Subject();\n        /** Label that is rendered below optional steps. */\n        this.optionalLabel = 'Optional';\n    }\n}\nMatStepperIntl.ɵfac = function MatStepperIntl_Factory(t) { return new (t || MatStepperIntl)(); };\nMatStepperIntl.ɵprov = ɵɵdefineInjectable({ factory: function MatStepperIntl_Factory() { return new MatStepperIntl(); }, token: MatStepperIntl, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatStepperIntl, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, null); })();\n/** @docs-private */\nfunction MAT_STEPPER_INTL_PROVIDER_FACTORY(parentIntl) {\n    return parentIntl || new MatStepperIntl();\n}\n/** @docs-private */\nconst MAT_STEPPER_INTL_PROVIDER = {\n    provide: MatStepperIntl,\n    deps: [[new Optional(), new SkipSelf(), MatStepperIntl]],\n    useFactory: MAT_STEPPER_INTL_PROVIDER_FACTORY\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatStepHeader extends CdkStepHeader {\n    constructor(_intl, _focusMonitor, _elementRef, changeDetectorRef) {\n        super(_elementRef);\n        this._intl = _intl;\n        this._focusMonitor = _focusMonitor;\n        this._intlSubscription = _intl.changes.subscribe(() => changeDetectorRef.markForCheck());\n    }\n    ngAfterViewInit() {\n        this._focusMonitor.monitor(this._elementRef, true);\n    }\n    ngOnDestroy() {\n        this._intlSubscription.unsubscribe();\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /** Focuses the step header. */\n    focus() {\n        this._focusMonitor.focusVia(this._elementRef, 'program');\n    }\n    /** Returns string label of given step if it is a text label. */\n    _stringLabel() {\n        return this.label instanceof MatStepLabel ? null : this.label;\n    }\n    /** Returns MatStepLabel if the label of given step is a template label. */\n    _templateLabel() {\n        return this.label instanceof MatStepLabel ? this.label : null;\n    }\n    /** Returns the host HTML element. */\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n    /** Template context variables that are exposed to the `matStepperIcon` instances. */\n    _getIconContext() {\n        return {\n            index: this.index,\n            active: this.active,\n            optional: this.optional\n        };\n    }\n    _getDefaultTextForState(state) {\n        if (state == 'number') {\n            return `${this.index + 1}`;\n        }\n        if (state == 'edit') {\n            return 'create';\n        }\n        if (state == 'error') {\n            return 'warning';\n        }\n        return state;\n    }\n}\nMatStepHeader.ɵfac = function MatStepHeader_Factory(t) { return new (t || MatStepHeader)(ɵngcc0.ɵɵdirectiveInject(MatStepperIntl), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatStepHeader.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatStepHeader, selectors: [[\"mat-step-header\"]], hostAttrs: [\"role\", \"tab\", 1, \"mat-step-header\", \"mat-focus-indicator\"], inputs: { state: \"state\", label: \"label\", errorMessage: \"errorMessage\", iconOverrides: \"iconOverrides\", index: \"index\", selected: \"selected\", active: \"active\", optional: \"optional\", disableRipple: \"disableRipple\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 10, vars: 19, consts: [[\"matRipple\", \"\", 1, \"mat-step-header-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"], [1, \"mat-step-icon-content\", 3, \"ngSwitch\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\", 4, \"ngSwitchCase\"], [3, \"ngSwitch\", 4, \"ngSwitchDefault\"], [1, \"mat-step-label\"], [3, \"ngTemplateOutlet\", 4, \"ngIf\"], [\"class\", \"mat-step-text-label\", 4, \"ngIf\"], [\"class\", \"mat-step-optional\", 4, \"ngIf\"], [\"class\", \"mat-step-sub-label-error\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [4, \"ngSwitchDefault\"], [3, \"ngTemplateOutlet\"], [1, \"mat-step-text-label\"], [1, \"mat-step-optional\"], [1, \"mat-step-sub-label-error\"]], template: function MatStepHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\");\n        ɵngcc0.ɵɵelementStart(2, \"div\", 1);\n        ɵngcc0.ɵɵtemplate(3, MatStepHeader_ng_container_3_Template, 1, 2, \"ng-container\", 2);\n        ɵngcc0.ɵɵtemplate(4, MatStepHeader_ng_container_4_Template, 3, 2, \"ng-container\", 3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(5, \"div\", 4);\n        ɵngcc0.ɵɵtemplate(6, MatStepHeader_ng_container_6_Template, 1, 1, \"ng-container\", 5);\n        ɵngcc0.ɵɵtemplate(7, MatStepHeader_div_7_Template, 2, 1, \"div\", 6);\n        ɵngcc0.ɵɵtemplate(8, MatStepHeader_div_8_Template, 2, 1, \"div\", 7);\n        ɵngcc0.ɵɵtemplate(9, MatStepHeader_div_9_Template, 2, 1, \"div\", 8);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", ctx._getHostElement())(\"matRippleDisabled\", ctx.disableRipple);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵclassMapInterpolate1(\"mat-step-icon-state-\", ctx.state, \" mat-step-icon\");\n        ɵngcc0.ɵɵclassProp(\"mat-step-icon-selected\", ctx.selected);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", !!(ctx.iconOverrides && ctx.iconOverrides[ctx.state]));\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"mat-step-label-active\", ctx.active)(\"mat-step-label-selected\", ctx.selected)(\"mat-step-label-error\", ctx.state == \"error\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._templateLabel());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._stringLabel());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.optional && ctx.state != \"error\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.state == \"error\");\n    } }, directives: [ɵngcc2.MatRipple, ɵngcc3.NgSwitch, ɵngcc3.NgSwitchCase, ɵngcc3.NgSwitchDefault, ɵngcc3.NgIf, ɵngcc3.NgTemplateOutlet, ɵngcc4.MatIcon], styles: [\".mat-step-header{overflow:hidden;outline:none;cursor:pointer;position:relative;box-sizing:content-box;-webkit-tap-highlight-color:transparent}.mat-step-optional,.mat-step-sub-label-error{font-size:12px}.mat-step-icon{border-radius:50%;height:24px;width:24px;flex-shrink:0;position:relative}.mat-step-icon-content,.mat-step-icon .mat-icon{position:absolute;top:50%;left:50%;transform:translate(-50%, -50%)}.mat-step-icon .mat-icon{font-size:16px;height:16px;width:16px}.mat-step-icon-state-error .mat-icon{font-size:24px;height:24px;width:24px}.mat-step-label{display:inline-block;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;min-width:50px;vertical-align:middle}.mat-step-text-label{text-overflow:ellipsis;overflow:hidden}.mat-step-header .mat-step-header-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatStepHeader.ctorParameters = () => [\n    { type: MatStepperIntl },\n    { type: FocusMonitor },\n    { type: ElementRef },\n    { type: ChangeDetectorRef }\n];\nMatStepHeader.propDecorators = {\n    state: [{ type: Input }],\n    label: [{ type: Input }],\n    errorMessage: [{ type: Input }],\n    iconOverrides: [{ type: Input }],\n    index: [{ type: Input }],\n    selected: [{ type: Input }],\n    active: [{ type: Input }],\n    optional: [{ type: Input }],\n    disableRipple: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatStepHeader, [{\n        type: Component,\n        args: [{\n                selector: 'mat-step-header',\n                template: \"<div class=\\\"mat-step-header-ripple\\\" matRipple\\n     [matRippleTrigger]=\\\"_getHostElement()\\\"\\n     [matRippleDisabled]=\\\"disableRipple\\\"></div>\\n\\n<div class=\\\"mat-step-icon-state-{{state}} mat-step-icon\\\" [class.mat-step-icon-selected]=\\\"selected\\\">\\n  <div class=\\\"mat-step-icon-content\\\" [ngSwitch]=\\\"!!(iconOverrides && iconOverrides[state])\\\">\\n    <ng-container\\n      *ngSwitchCase=\\\"true\\\"\\n      [ngTemplateOutlet]=\\\"iconOverrides[state]\\\"\\n      [ngTemplateOutletContext]=\\\"_getIconContext()\\\"></ng-container>\\n    <ng-container *ngSwitchDefault [ngSwitch]=\\\"state\\\">\\n      <span *ngSwitchCase=\\\"'number'\\\">{{_getDefaultTextForState(state)}}</span>\\n      <mat-icon *ngSwitchDefault>{{_getDefaultTextForState(state)}}</mat-icon>\\n    </ng-container>\\n  </div>\\n</div>\\n<div class=\\\"mat-step-label\\\"\\n     [class.mat-step-label-active]=\\\"active\\\"\\n     [class.mat-step-label-selected]=\\\"selected\\\"\\n     [class.mat-step-label-error]=\\\"state == 'error'\\\">\\n  <!-- If there is a label template, use it. -->\\n  <ng-container *ngIf=\\\"_templateLabel()\\\" [ngTemplateOutlet]=\\\"_templateLabel()!.template\\\">\\n  </ng-container>\\n  <!-- If there is no label template, fall back to the text label. -->\\n  <div class=\\\"mat-step-text-label\\\" *ngIf=\\\"_stringLabel()\\\">{{label}}</div>\\n\\n  <div class=\\\"mat-step-optional\\\" *ngIf=\\\"optional && state != 'error'\\\">{{_intl.optionalLabel}}</div>\\n  <div class=\\\"mat-step-sub-label-error\\\" *ngIf=\\\"state == 'error'\\\">{{errorMessage}}</div>\\n</div>\\n\\n\",\n                host: {\n                    'class': 'mat-step-header mat-focus-indicator',\n                    'role': 'tab'\n                },\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-step-header{overflow:hidden;outline:none;cursor:pointer;position:relative;box-sizing:content-box;-webkit-tap-highlight-color:transparent}.mat-step-optional,.mat-step-sub-label-error{font-size:12px}.mat-step-icon{border-radius:50%;height:24px;width:24px;flex-shrink:0;position:relative}.mat-step-icon-content,.mat-step-icon .mat-icon{position:absolute;top:50%;left:50%;transform:translate(-50%, -50%)}.mat-step-icon .mat-icon{font-size:16px;height:16px;width:16px}.mat-step-icon-state-error .mat-icon{font-size:24px;height:24px;width:24px}.mat-step-label{display:inline-block;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;min-width:50px;vertical-align:middle}.mat-step-text-label{text-overflow:ellipsis;overflow:hidden}.mat-step-header .mat-step-header-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\\n\"]\n            }]\n    }], function () { return [{ type: MatStepperIntl }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }]; }, { state: [{\n            type: Input\n        }], label: [{\n            type: Input\n        }], errorMessage: [{\n            type: Input\n        }], iconOverrides: [{\n            type: Input\n        }], index: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], active: [{\n            type: Input\n        }], optional: [{\n            type: Input\n        }], disableRipple: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the Material steppers.\n * @docs-private\n */\nconst matStepperAnimations = {\n    /** Animation that transitions the step along the X axis in a horizontal stepper. */\n    horizontalStepTransition: trigger('stepTransition', [\n        state('previous', style({ transform: 'translate3d(-100%, 0, 0)', visibility: 'hidden' })),\n        state('current', style({ transform: 'none', visibility: 'visible' })),\n        state('next', style({ transform: 'translate3d(100%, 0, 0)', visibility: 'hidden' })),\n        transition('* => *', animate('500ms cubic-bezier(0.35, 0, 0.25, 1)'))\n    ]),\n    /** Animation that transitions the step along the Y axis in a vertical stepper. */\n    verticalStepTransition: trigger('stepTransition', [\n        state('previous', style({ height: '0px', visibility: 'hidden' })),\n        state('next', style({ height: '0px', visibility: 'hidden' })),\n        state('current', style({ height: '*', visibility: 'visible' })),\n        transition('* <=> current', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)'))\n    ])\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Template to be used to override the icons inside the step header.\n */\nclass MatStepperIcon {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nMatStepperIcon.ɵfac = function MatStepperIcon_Factory(t) { return new (t || MatStepperIcon)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nMatStepperIcon.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatStepperIcon, selectors: [[\"ng-template\", \"matStepperIcon\", \"\"]], inputs: { name: [\"matStepperIcon\", \"name\"] } });\nMatStepperIcon.ctorParameters = () => [\n    { type: TemplateRef }\n];\nMatStepperIcon.propDecorators = {\n    name: [{ type: Input, args: ['matStepperIcon',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatStepperIcon, [{\n        type: Directive,\n        args: [{\n                selector: 'ng-template[matStepperIcon]'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, { name: [{\n            type: Input,\n            args: ['matStepperIcon']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatStep extends CdkStep {\n    /** @breaking-change 8.0.0 remove the `?` after `stepperOptions` */\n    constructor(stepper, _errorStateMatcher, stepperOptions) {\n        super(stepper, stepperOptions);\n        this._errorStateMatcher = _errorStateMatcher;\n    }\n    /** Custom error state matcher that additionally checks for validity of interacted form. */\n    isErrorState(control, form) {\n        const originalErrorState = this._errorStateMatcher.isErrorState(control, form);\n        // Custom error state checks for the validity of form that is not submitted or touched\n        // since user can trigger a form change by calling for another step without directly\n        // interacting with the current form.\n        const customErrorState = !!(control && control.invalid && this.interacted);\n        return originalErrorState || customErrorState;\n    }\n}\nMatStep.ɵfac = function MatStep_Factory(t) { return new (t || MatStep)(ɵngcc0.ɵɵdirectiveInject(forwardRef(() => MatStepper)), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ErrorStateMatcher, 4), ɵngcc0.ɵɵdirectiveInject(STEPPER_GLOBAL_OPTIONS, 8)); };\nMatStep.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatStep, selectors: [[\"mat-step\"]], contentQueries: function MatStep_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatStepLabel, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.stepLabel = _t.first);\n    } }, exportAs: [\"matStep\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: ErrorStateMatcher, useExisting: MatStep },\n            { provide: CdkStep, useExisting: MatStep },\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatStep_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, MatStep_ng_template_0_Template, 1, 0, \"ng-template\");\n    } }, encapsulation: 2, changeDetection: 0 });\nMatStep.ctorParameters = () => [\n    { type: MatStepper, decorators: [{ type: Inject, args: [forwardRef(() => MatStepper),] }] },\n    { type: ErrorStateMatcher, decorators: [{ type: SkipSelf }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [STEPPER_GLOBAL_OPTIONS,] }] }\n];\nMatStep.propDecorators = {\n    stepLabel: [{ type: ContentChild, args: [MatStepLabel,] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatStep, [{\n        type: Component,\n        args: [{\n                selector: 'mat-step',\n                template: \"<ng-template><ng-content></ng-content></ng-template>\\n\",\n                providers: [\n                    { provide: ErrorStateMatcher, useExisting: MatStep },\n                    { provide: CdkStep, useExisting: MatStep },\n                ],\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matStep',\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: MatStepper, decorators: [{\n                type: Inject,\n                args: [forwardRef(() => MatStepper)]\n            }] }, { type: ɵngcc2.ErrorStateMatcher, decorators: [{\n                type: SkipSelf\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [STEPPER_GLOBAL_OPTIONS]\n            }] }]; }, { stepLabel: [{\n            type: ContentChild,\n            args: [MatStepLabel]\n        }] }); })();\nclass MatStepper extends CdkStepper {\n    constructor() {\n        super(...arguments);\n        /** Event emitted when the current step is done transitioning in. */\n        this.animationDone = new EventEmitter();\n        /** Consumer-specified template-refs to be used to override the header icons. */\n        this._iconOverrides = {};\n        /** Stream of animation `done` events when the body expands/collapses. */\n        this._animationDone = new Subject();\n    }\n    ngAfterContentInit() {\n        this._icons.forEach(({ name, templateRef }) => this._iconOverrides[name] = templateRef);\n        // Mark the component for change detection whenever the content children query changes\n        this._steps.changes.pipe(takeUntil(this._destroyed)).subscribe(() => {\n            this._stateChanged();\n        });\n        this._animationDone.pipe(\n        // This needs a `distinctUntilChanged` in order to avoid emitting the same event twice due\n        // to a bug in animations where the `.done` callback gets invoked twice on some browsers.\n        // See https://github.com/angular/angular/issues/24084\n        distinctUntilChanged((x, y) => x.fromState === y.fromState && x.toState === y.toState), takeUntil(this._destroyed)).subscribe(event => {\n            if (event.toState === 'current') {\n                this.animationDone.emit();\n            }\n        });\n    }\n}\nMatStepper.ɵfac = function MatStepper_Factory(t) { return ɵMatStepper_BaseFactory(t || MatStepper); };\nMatStepper.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatStepper, selectors: [[\"\", \"matStepper\", \"\"]], contentQueries: function MatStepper_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatStep, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatStepperIcon, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._steps = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._icons = _t);\n    } }, viewQuery: function MatStepper_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatStepHeader, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._stepHeader = _t);\n    } }, inputs: { disableRipple: \"disableRipple\" }, outputs: { animationDone: \"animationDone\" }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkStepper, useExisting: MatStepper }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatStepper.propDecorators = {\n    _stepHeader: [{ type: ViewChildren, args: [MatStepHeader,] }],\n    _steps: [{ type: ContentChildren, args: [MatStep, { descendants: true },] }],\n    _icons: [{ type: ContentChildren, args: [MatStepperIcon, { descendants: true },] }],\n    animationDone: [{ type: Output }],\n    disableRipple: [{ type: Input }]\n};\nconst ɵMatStepper_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatStepper);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatStepper, [{\n        type: Directive,\n        args: [{ selector: '[matStepper]', providers: [{ provide: CdkStepper, useExisting: MatStepper }] }]\n    }], null, { animationDone: [{\n            type: Output\n        }], _stepHeader: [{\n            type: ViewChildren,\n            args: [MatStepHeader]\n        }], _steps: [{\n            type: ContentChildren,\n            args: [MatStep, { descendants: true }]\n        }], _icons: [{\n            type: ContentChildren,\n            args: [MatStepperIcon, { descendants: true }]\n        }], disableRipple: [{\n            type: Input\n        }] }); })();\nclass MatHorizontalStepper extends MatStepper {\n    constructor() {\n        super(...arguments);\n        /** Whether the label should display in bottom or end position. */\n        this.labelPosition = 'end';\n    }\n}\nMatHorizontalStepper.ɵfac = function MatHorizontalStepper_Factory(t) { return ɵMatHorizontalStepper_BaseFactory(t || MatHorizontalStepper); };\nMatHorizontalStepper.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatHorizontalStepper, selectors: [[\"mat-horizontal-stepper\"]], hostAttrs: [\"aria-orientation\", \"horizontal\", \"role\", \"tablist\", 1, \"mat-stepper-horizontal\"], hostVars: 4, hostBindings: function MatHorizontalStepper_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-stepper-label-position-end\", ctx.labelPosition == \"end\")(\"mat-stepper-label-position-bottom\", ctx.labelPosition == \"bottom\");\n    } }, inputs: { selectedIndex: \"selectedIndex\", labelPosition: \"labelPosition\" }, exportAs: [\"matHorizontalStepper\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MatStepper, useExisting: MatHorizontalStepper },\n            { provide: CdkStepper, useExisting: MatHorizontalStepper }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 4, vars: 2, consts: [[1, \"mat-horizontal-stepper-header-container\"], [4, \"ngFor\", \"ngForOf\"], [1, \"mat-horizontal-content-container\"], [\"class\", \"mat-horizontal-stepper-content\", \"role\", \"tabpanel\", 3, \"id\", 4, \"ngFor\", \"ngForOf\"], [1, \"mat-horizontal-stepper-header\", 3, \"tabIndex\", \"id\", \"index\", \"state\", \"label\", \"selected\", \"active\", \"optional\", \"errorMessage\", \"iconOverrides\", \"disableRipple\", \"click\", \"keydown\"], [\"class\", \"mat-stepper-horizontal-line\", 4, \"ngIf\"], [1, \"mat-stepper-horizontal-line\"], [\"role\", \"tabpanel\", 1, \"mat-horizontal-stepper-content\", 3, \"id\"], [3, \"ngTemplateOutlet\"]], template: function MatHorizontalStepper_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵtemplate(1, MatHorizontalStepper_ng_container_1_Template, 3, 18, \"ng-container\", 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n        ɵngcc0.ɵɵtemplate(3, MatHorizontalStepper_div_3_Template, 2, 6, \"div\", 3);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.steps);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.steps);\n    } }, directives: [ɵngcc3.NgForOf, MatStepHeader, ɵngcc3.NgIf, ɵngcc3.NgTemplateOutlet], styles: [\".mat-stepper-vertical,.mat-stepper-horizontal{display:block}.mat-horizontal-stepper-header-container{white-space:nowrap;display:flex;align-items:center}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header-container{align-items:flex-start}.mat-stepper-horizontal-line{border-top-width:1px;border-top-style:solid;flex:auto;height:0;margin:0 -16px;min-width:32px}.mat-stepper-label-position-bottom .mat-stepper-horizontal-line{margin:0;min-width:0;position:relative}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before,.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{border-top-width:1px;border-top-style:solid;content:\\\"\\\";display:inline-block;height:0;position:absolute;width:calc(50% - 20px)}.mat-horizontal-stepper-header{display:flex;height:72px;overflow:hidden;align-items:center;padding:0 24px}.mat-horizontal-stepper-header .mat-step-icon{margin-right:8px;flex:none}[dir=rtl] .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:8px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header{box-sizing:border-box;flex-direction:column;height:auto}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{right:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before{left:0}[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:last-child::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:first-child::after{display:none}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-label{padding:16px 0 0 0;text-align:center;width:100%}.mat-vertical-stepper-header{display:flex;align-items:center;height:24px}.mat-vertical-stepper-header .mat-step-icon{margin-right:12px}[dir=rtl] .mat-vertical-stepper-header .mat-step-icon{margin-right:0;margin-left:12px}.mat-horizontal-stepper-content{outline:0}.mat-horizontal-stepper-content[aria-expanded=false]{height:0;overflow:hidden}.mat-horizontal-content-container{overflow:hidden;padding:0 24px 24px 24px}.mat-vertical-content-container{margin-left:36px;border:0;position:relative}[dir=rtl] .mat-vertical-content-container{margin-left:0;margin-right:36px}.mat-stepper-vertical-line::before{content:\\\"\\\";position:absolute;left:0;border-left-width:1px;border-left-style:solid}[dir=rtl] .mat-stepper-vertical-line::before{left:auto;right:0}.mat-vertical-stepper-content{overflow:hidden;outline:0}.mat-vertical-content{padding:0 24px 24px 24px}.mat-step:last-child .mat-vertical-content-container{border:none}\\n\"], encapsulation: 2, data: { animation: [matStepperAnimations.horizontalStepTransition] }, changeDetection: 0 });\nMatHorizontalStepper.propDecorators = {\n    labelPosition: [{ type: Input }]\n};\nconst ɵMatHorizontalStepper_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatHorizontalStepper);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatHorizontalStepper, [{\n        type: Component,\n        args: [{\n                selector: 'mat-horizontal-stepper',\n                exportAs: 'matHorizontalStepper',\n                template: \"<div class=\\\"mat-horizontal-stepper-header-container\\\">\\n  <ng-container *ngFor=\\\"let step of steps; let i = index; let isLast = last\\\">\\n    <mat-step-header class=\\\"mat-horizontal-stepper-header\\\"\\n                     (click)=\\\"step.select()\\\"\\n                     (keydown)=\\\"_onKeydown($event)\\\"\\n                     [tabIndex]=\\\"_getFocusIndex() === i ? 0 : -1\\\"\\n                     [id]=\\\"_getStepLabelId(i)\\\"\\n                     [attr.aria-posinset]=\\\"i + 1\\\"\\n                     [attr.aria-setsize]=\\\"steps.length\\\"\\n                     [attr.aria-controls]=\\\"_getStepContentId(i)\\\"\\n                     [attr.aria-selected]=\\\"selectedIndex == i\\\"\\n                     [attr.aria-label]=\\\"step.ariaLabel || null\\\"\\n                     [attr.aria-labelledby]=\\\"(!step.ariaLabel && step.ariaLabelledby) ? step.ariaLabelledby : null\\\"\\n                     [index]=\\\"i\\\"\\n                     [state]=\\\"_getIndicatorType(i, step.state)\\\"\\n                     [label]=\\\"step.stepLabel || step.label\\\"\\n                     [selected]=\\\"selectedIndex === i\\\"\\n                     [active]=\\\"step.completed || selectedIndex === i || !linear\\\"\\n                     [optional]=\\\"step.optional\\\"\\n                     [errorMessage]=\\\"step.errorMessage\\\"\\n                     [iconOverrides]=\\\"_iconOverrides\\\"\\n                     [disableRipple]=\\\"disableRipple\\\">\\n    </mat-step-header>\\n    <div *ngIf=\\\"!isLast\\\" class=\\\"mat-stepper-horizontal-line\\\"></div>\\n  </ng-container>\\n</div>\\n\\n<div class=\\\"mat-horizontal-content-container\\\">\\n  <div *ngFor=\\\"let step of steps; let i = index\\\"\\n       [attr.tabindex]=\\\"selectedIndex === i ? 0 : null\\\"\\n       class=\\\"mat-horizontal-stepper-content\\\" role=\\\"tabpanel\\\"\\n       [@stepTransition]=\\\"_getAnimationDirection(i)\\\"\\n       (@stepTransition.done)=\\\"_animationDone.next($event)\\\"\\n       [id]=\\\"_getStepContentId(i)\\\"\\n       [attr.aria-labelledby]=\\\"_getStepLabelId(i)\\\"\\n       [attr.aria-expanded]=\\\"selectedIndex === i\\\">\\n    <ng-container [ngTemplateOutlet]=\\\"step.content\\\"></ng-container>\\n  </div>\\n</div>\\n\",\n                inputs: ['selectedIndex'],\n                host: {\n                    'class': 'mat-stepper-horizontal',\n                    '[class.mat-stepper-label-position-end]': 'labelPosition == \"end\"',\n                    '[class.mat-stepper-label-position-bottom]': 'labelPosition == \"bottom\"',\n                    'aria-orientation': 'horizontal',\n                    'role': 'tablist'\n                },\n                animations: [matStepperAnimations.horizontalStepTransition],\n                providers: [\n                    { provide: MatStepper, useExisting: MatHorizontalStepper },\n                    { provide: CdkStepper, useExisting: MatHorizontalStepper }\n                ],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-stepper-vertical,.mat-stepper-horizontal{display:block}.mat-horizontal-stepper-header-container{white-space:nowrap;display:flex;align-items:center}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header-container{align-items:flex-start}.mat-stepper-horizontal-line{border-top-width:1px;border-top-style:solid;flex:auto;height:0;margin:0 -16px;min-width:32px}.mat-stepper-label-position-bottom .mat-stepper-horizontal-line{margin:0;min-width:0;position:relative}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before,.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{border-top-width:1px;border-top-style:solid;content:\\\"\\\";display:inline-block;height:0;position:absolute;width:calc(50% - 20px)}.mat-horizontal-stepper-header{display:flex;height:72px;overflow:hidden;align-items:center;padding:0 24px}.mat-horizontal-stepper-header .mat-step-icon{margin-right:8px;flex:none}[dir=rtl] .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:8px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header{box-sizing:border-box;flex-direction:column;height:auto}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{right:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before{left:0}[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:last-child::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:first-child::after{display:none}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-label{padding:16px 0 0 0;text-align:center;width:100%}.mat-vertical-stepper-header{display:flex;align-items:center;height:24px}.mat-vertical-stepper-header .mat-step-icon{margin-right:12px}[dir=rtl] .mat-vertical-stepper-header .mat-step-icon{margin-right:0;margin-left:12px}.mat-horizontal-stepper-content{outline:0}.mat-horizontal-stepper-content[aria-expanded=false]{height:0;overflow:hidden}.mat-horizontal-content-container{overflow:hidden;padding:0 24px 24px 24px}.mat-vertical-content-container{margin-left:36px;border:0;position:relative}[dir=rtl] .mat-vertical-content-container{margin-left:0;margin-right:36px}.mat-stepper-vertical-line::before{content:\\\"\\\";position:absolute;left:0;border-left-width:1px;border-left-style:solid}[dir=rtl] .mat-stepper-vertical-line::before{left:auto;right:0}.mat-vertical-stepper-content{overflow:hidden;outline:0}.mat-vertical-content{padding:0 24px 24px 24px}.mat-step:last-child .mat-vertical-content-container{border:none}\\n\"]\n            }]\n    }], null, { labelPosition: [{\n            type: Input\n        }] }); })();\nclass MatVerticalStepper extends MatStepper {\n    constructor(dir, changeDetectorRef, \n    // @breaking-change 8.0.0 `elementRef` and `_document` parameters to become required.\n    elementRef, _document) {\n        super(dir, changeDetectorRef, elementRef, _document);\n        this._orientation = 'vertical';\n    }\n}\nMatVerticalStepper.ɵfac = function MatVerticalStepper_Factory(t) { return new (t || MatVerticalStepper)(ɵngcc0.ɵɵdirectiveInject(ɵngcc5.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };\nMatVerticalStepper.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatVerticalStepper, selectors: [[\"mat-vertical-stepper\"]], hostAttrs: [\"aria-orientation\", \"vertical\", \"role\", \"tablist\", 1, \"mat-stepper-vertical\"], inputs: { selectedIndex: \"selectedIndex\" }, exportAs: [\"matVerticalStepper\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MatStepper, useExisting: MatVerticalStepper },\n            { provide: CdkStepper, useExisting: MatVerticalStepper }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 1, consts: [[\"class\", \"mat-step\", 4, \"ngFor\", \"ngForOf\"], [1, \"mat-step\"], [1, \"mat-vertical-stepper-header\", 3, \"tabIndex\", \"id\", \"index\", \"state\", \"label\", \"selected\", \"active\", \"optional\", \"errorMessage\", \"iconOverrides\", \"disableRipple\", \"click\", \"keydown\"], [1, \"mat-vertical-content-container\"], [\"role\", \"tabpanel\", 1, \"mat-vertical-stepper-content\", 3, \"id\"], [1, \"mat-vertical-content\"], [3, \"ngTemplateOutlet\"]], template: function MatVerticalStepper_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, MatVerticalStepper_div_0_Template, 6, 25, \"div\", 0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.steps);\n    } }, directives: [ɵngcc3.NgForOf, MatStepHeader, ɵngcc3.NgTemplateOutlet], styles: [\".mat-stepper-vertical,.mat-stepper-horizontal{display:block}.mat-horizontal-stepper-header-container{white-space:nowrap;display:flex;align-items:center}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header-container{align-items:flex-start}.mat-stepper-horizontal-line{border-top-width:1px;border-top-style:solid;flex:auto;height:0;margin:0 -16px;min-width:32px}.mat-stepper-label-position-bottom .mat-stepper-horizontal-line{margin:0;min-width:0;position:relative}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before,.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{border-top-width:1px;border-top-style:solid;content:\\\"\\\";display:inline-block;height:0;position:absolute;width:calc(50% - 20px)}.mat-horizontal-stepper-header{display:flex;height:72px;overflow:hidden;align-items:center;padding:0 24px}.mat-horizontal-stepper-header .mat-step-icon{margin-right:8px;flex:none}[dir=rtl] .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:8px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header{box-sizing:border-box;flex-direction:column;height:auto}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{right:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before{left:0}[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:last-child::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:first-child::after{display:none}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-label{padding:16px 0 0 0;text-align:center;width:100%}.mat-vertical-stepper-header{display:flex;align-items:center;height:24px}.mat-vertical-stepper-header .mat-step-icon{margin-right:12px}[dir=rtl] .mat-vertical-stepper-header .mat-step-icon{margin-right:0;margin-left:12px}.mat-horizontal-stepper-content{outline:0}.mat-horizontal-stepper-content[aria-expanded=false]{height:0;overflow:hidden}.mat-horizontal-content-container{overflow:hidden;padding:0 24px 24px 24px}.mat-vertical-content-container{margin-left:36px;border:0;position:relative}[dir=rtl] .mat-vertical-content-container{margin-left:0;margin-right:36px}.mat-stepper-vertical-line::before{content:\\\"\\\";position:absolute;left:0;border-left-width:1px;border-left-style:solid}[dir=rtl] .mat-stepper-vertical-line::before{left:auto;right:0}.mat-vertical-stepper-content{overflow:hidden;outline:0}.mat-vertical-content{padding:0 24px 24px 24px}.mat-step:last-child .mat-vertical-content-container{border:none}\\n\"], encapsulation: 2, data: { animation: [matStepperAnimations.verticalStepTransition] }, changeDetection: 0 });\nMatVerticalStepper.ctorParameters = () => [\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ChangeDetectorRef },\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatVerticalStepper, [{\n        type: Component,\n        args: [{\n                selector: 'mat-vertical-stepper',\n                exportAs: 'matVerticalStepper',\n                template: \"<div class=\\\"mat-step\\\" *ngFor=\\\"let step of steps; let i = index; let isLast = last\\\">\\n  <mat-step-header class=\\\"mat-vertical-stepper-header\\\"\\n                   (click)=\\\"step.select()\\\"\\n                   (keydown)=\\\"_onKeydown($event)\\\"\\n                   [tabIndex]=\\\"_getFocusIndex() == i ? 0 : -1\\\"\\n                   [id]=\\\"_getStepLabelId(i)\\\"\\n                   [attr.aria-posinset]=\\\"i + 1\\\"\\n                   [attr.aria-setsize]=\\\"steps.length\\\"\\n                   [attr.aria-controls]=\\\"_getStepContentId(i)\\\"\\n                   [attr.aria-selected]=\\\"selectedIndex === i\\\"\\n                   [attr.aria-label]=\\\"step.ariaLabel || null\\\"\\n                   [attr.aria-labelledby]=\\\"(!step.ariaLabel && step.ariaLabelledby) ? step.ariaLabelledby : null\\\"\\n                   [index]=\\\"i\\\"\\n                   [state]=\\\"_getIndicatorType(i, step.state)\\\"\\n                   [label]=\\\"step.stepLabel || step.label\\\"\\n                   [selected]=\\\"selectedIndex === i\\\"\\n                   [active]=\\\"step.completed || selectedIndex === i || !linear\\\"\\n                   [optional]=\\\"step.optional\\\"\\n                   [errorMessage]=\\\"step.errorMessage\\\"\\n                   [iconOverrides]=\\\"_iconOverrides\\\"\\n                   [disableRipple]=\\\"disableRipple\\\">\\n  </mat-step-header>\\n\\n  <div class=\\\"mat-vertical-content-container\\\" [class.mat-stepper-vertical-line]=\\\"!isLast\\\">\\n    <div class=\\\"mat-vertical-stepper-content\\\" role=\\\"tabpanel\\\"\\n         [attr.tabindex]=\\\"selectedIndex === i ? 0 : null\\\"\\n         [@stepTransition]=\\\"_getAnimationDirection(i)\\\"\\n         (@stepTransition.done)=\\\"_animationDone.next($event)\\\"\\n         [id]=\\\"_getStepContentId(i)\\\"\\n         [attr.aria-labelledby]=\\\"_getStepLabelId(i)\\\"\\n         [attr.aria-expanded]=\\\"selectedIndex === i\\\">\\n      <div class=\\\"mat-vertical-content\\\">\\n        <ng-container [ngTemplateOutlet]=\\\"step.content\\\"></ng-container>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\",\n                inputs: ['selectedIndex'],\n                host: {\n                    'class': 'mat-stepper-vertical',\n                    'aria-orientation': 'vertical',\n                    'role': 'tablist'\n                },\n                animations: [matStepperAnimations.verticalStepTransition],\n                providers: [\n                    { provide: MatStepper, useExisting: MatVerticalStepper },\n                    { provide: CdkStepper, useExisting: MatVerticalStepper }\n                ],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-stepper-vertical,.mat-stepper-horizontal{display:block}.mat-horizontal-stepper-header-container{white-space:nowrap;display:flex;align-items:center}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header-container{align-items:flex-start}.mat-stepper-horizontal-line{border-top-width:1px;border-top-style:solid;flex:auto;height:0;margin:0 -16px;min-width:32px}.mat-stepper-label-position-bottom .mat-stepper-horizontal-line{margin:0;min-width:0;position:relative}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before,.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{border-top-width:1px;border-top-style:solid;content:\\\"\\\";display:inline-block;height:0;position:absolute;width:calc(50% - 20px)}.mat-horizontal-stepper-header{display:flex;height:72px;overflow:hidden;align-items:center;padding:0 24px}.mat-horizontal-stepper-header .mat-step-icon{margin-right:8px;flex:none}[dir=rtl] .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:8px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header{box-sizing:border-box;flex-direction:column;height:auto}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{right:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before{left:0}[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:last-child::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:first-child::after{display:none}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-label{padding:16px 0 0 0;text-align:center;width:100%}.mat-vertical-stepper-header{display:flex;align-items:center;height:24px}.mat-vertical-stepper-header .mat-step-icon{margin-right:12px}[dir=rtl] .mat-vertical-stepper-header .mat-step-icon{margin-right:0;margin-left:12px}.mat-horizontal-stepper-content{outline:0}.mat-horizontal-stepper-content[aria-expanded=false]{height:0;overflow:hidden}.mat-horizontal-content-container{overflow:hidden;padding:0 24px 24px 24px}.mat-vertical-content-container{margin-left:36px;border:0;position:relative}[dir=rtl] .mat-vertical-content-container{margin-left:0;margin-right:36px}.mat-stepper-vertical-line::before{content:\\\"\\\";position:absolute;left:0;border-left-width:1px;border-left-style:solid}[dir=rtl] .mat-stepper-vertical-line::before{left:auto;right:0}.mat-vertical-stepper-content{overflow:hidden;outline:0}.mat-vertical-content{padding:0 24px 24px 24px}.mat-step:last-child .mat-vertical-content-container{border:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc5.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Button that moves to the next step in a stepper workflow. */\nclass MatStepperNext extends CdkStepperNext {\n}\nMatStepperNext.ɵfac = function MatStepperNext_Factory(t) { return ɵMatStepperNext_BaseFactory(t || MatStepperNext); };\nMatStepperNext.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatStepperNext, selectors: [[\"button\", \"matStepperNext\", \"\"]], hostVars: 1, hostBindings: function MatStepperNext_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"type\", ctx.type);\n    } }, inputs: { type: \"type\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatStepperNext_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatStepperNext);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatStepperNext, [{\n        type: Directive,\n        args: [{\n                selector: 'button[matStepperNext]',\n                host: {\n                    '[type]': 'type'\n                },\n                inputs: ['type']\n            }]\n    }], null, null); })();\n/** Button that moves to the previous step in a stepper workflow. */\nclass MatStepperPrevious extends CdkStepperPrevious {\n}\nMatStepperPrevious.ɵfac = function MatStepperPrevious_Factory(t) { return ɵMatStepperPrevious_BaseFactory(t || MatStepperPrevious); };\nMatStepperPrevious.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatStepperPrevious, selectors: [[\"button\", \"matStepperPrevious\", \"\"]], hostVars: 1, hostBindings: function MatStepperPrevious_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"type\", ctx.type);\n    } }, inputs: { type: \"type\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatStepperPrevious_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatStepperPrevious);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatStepperPrevious, [{\n        type: Directive,\n        args: [{\n                selector: 'button[matStepperPrevious]',\n                host: {\n                    '[type]': 'type'\n                },\n                inputs: ['type']\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatStepperModule {\n}\nMatStepperModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatStepperModule });\nMatStepperModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatStepperModule_Factory(t) { return new (t || MatStepperModule)(); }, providers: [MAT_STEPPER_INTL_PROVIDER, ErrorStateMatcher], imports: [[\n            MatCommonModule,\n            CommonModule,\n            PortalModule,\n            MatButtonModule,\n            CdkStepperModule,\n            MatIconModule,\n            MatRippleModule,\n        ], MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatStepperModule, { declarations: function () { return [MatHorizontalStepper, MatVerticalStepper, MatStep, MatStepLabel, MatStepper, MatStepperNext, MatStepperPrevious, MatStepHeader, MatStepperIcon]; }, imports: function () { return [MatCommonModule,\n        CommonModule,\n        PortalModule,\n        MatButtonModule,\n        CdkStepperModule,\n        MatIconModule,\n        MatRippleModule]; }, exports: function () { return [MatCommonModule, MatHorizontalStepper, MatVerticalStepper, MatStep, MatStepLabel, MatStepper, MatStepperNext, MatStepperPrevious, MatStepHeader, MatStepperIcon]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatStepperModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    MatCommonModule,\n                    CommonModule,\n                    PortalModule,\n                    MatButtonModule,\n                    CdkStepperModule,\n                    MatIconModule,\n                    MatRippleModule,\n                ],\n                exports: [\n                    MatCommonModule,\n                    MatHorizontalStepper,\n                    MatVerticalStepper,\n                    MatStep,\n                    MatStepLabel,\n                    MatStepper,\n                    MatStepperNext,\n                    MatStepperPrevious,\n                    MatStepHeader,\n                    MatStepperIcon,\n                ],\n                declarations: [\n                    MatHorizontalStepper,\n                    MatVerticalStepper,\n                    MatStep,\n                    MatStepLabel,\n                    MatStepper,\n                    MatStepperNext,\n                    MatStepperPrevious,\n                    MatStepHeader,\n                    MatStepperIcon,\n                ],\n                providers: [MAT_STEPPER_INTL_PROVIDER, ErrorStateMatcher]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_STEPPER_INTL_PROVIDER, MAT_STEPPER_INTL_PROVIDER_FACTORY, MatHorizontalStepper, MatStep, MatStepHeader, MatStepLabel, MatStepper, MatStepperIcon, MatStepperIntl, MatStepperModule, MatStepperNext, MatStepperPrevious, MatVerticalStepper, matStepperAnimations };\n\n//# sourceMappingURL=stepper.js.map","import {Injectable} from '@angular/core';\r\nimport {Plan} from '@common/core/types/models/Plan';\r\nimport {BehaviorSubject} from 'rxjs';\r\nimport { CurrentUser } from '@common/auth/current-user';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class SubscriptionStepperState {\r\n    public mode: 'pricing'|'subscribe'|'changePlan';\r\n\r\n    /**\r\n     * Stripe.js instance.\r\n     */\r\n    public stripe: stripe.Stripe;\r\n\r\n    /**\r\n     * All available plans.\r\n     */\r\n    public plans: Plan[] = [];\r\n\r\n    /**\r\n     * Model for plan period radio group.\r\n     */\r\n    public radioGroupModel: number;\r\n\r\n    /**\r\n     * Base plan, selected in the first step.\r\n     */\r\n    public initialPlan$ = new BehaviorSubject<Plan>(null);\r\n\r\n    /**\r\n     * Final billing plan user has selected (base or yearly alternative)\r\n     */\r\n    public selectedPlan$ = new BehaviorSubject<Plan>(null);\r\n\r\n    constructor(private currentUser: CurrentUser) {\r\n        // if user was subscribed by admin from admin area, they will not have\r\n        // any payment methods attached so we'll need to show payment panel as well\r\n        this.mode = this.currentUser.isSubscribed() && this.currentUser.getSubscription().gateway !== 'none'  ? 'changePlan' : 'subscribe';\r\n    }\r\n\r\n    /**\r\n     * Select initial \"base\" plan.\r\n     */\r\n    public selectInitialPlan(plan: Plan) {\r\n        this.initialPlan$.next(plan);\r\n\r\n        const children = this.getChildPlans(plan);\r\n\r\n        if (children && children[0]) {\r\n            this.radioGroupModel = children[0].id;\r\n            this.selectedPlan$.next(children[0]);\r\n        } else {\r\n            this.selectedPlan$.next(plan);\r\n            this.radioGroupModel = plan.id;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Select plan by specified ID.\r\n     */\r\n    public selectPlanById(id: number) {\r\n        this.selectedPlan$.next(this.plans.find(plan => plan.id === id));\r\n    }\r\n\r\n    /**\r\n     * Get different versions of specified plan.\r\n     * (yearly, weekly, every 2 years etc)\r\n     */\r\n    public getChildPlans(parent: Plan) {\r\n        return this.plans.filter(plan => plan.parent_id === parent.id && !plan.hidden);\r\n    }\r\n\r\n    /**\r\n     * Set all available plans.\r\n     */\r\n    public setPlans(plans: Plan[]) {\r\n        this.plans = plans;\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Observable} from 'rxjs';\r\nimport {AppHttpClient} from '../../core/http/app-http-client.service';\r\nimport {Settings} from '../../core/config/settings.service';\r\nimport {User} from '../../core/types/models/User';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { Subscriptions } from '../../shared/billing/subscriptions.service';\r\nimport { Subscription } from '../../shared/billing/models/subscription';\r\nimport {Plan} from '@common/core/types/models/Plan';\r\nimport { Translations } from '@common/core/translations/translations.service';\r\nimport {BackendErrorResponse} from '@common/core/types/backend-error-response';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class PaypalSubscriptions {\r\n    private popupWidth = 450;\r\n    private popupHeight = 650;\r\n\r\n    /**\r\n     * Params for popup window.\r\n     */\r\n    private popupParams = {\r\n        menubar: 0,\r\n        location: 0,\r\n        locationbar: 0,\r\n        toolbar: 0,\r\n        titlebar: 0,\r\n        status: 0,\r\n        scrollbars: 1,\r\n        width: this.popupWidth,\r\n        height: this.popupHeight\r\n    };\r\n\r\n    // TODO: clean this up with rxjs or checkout.js\r\n    private resolveSubscribe: Function;\r\n    private rejectSubscribe: Function;\r\n    private subscriptionPending = false;\r\n    private executingAgreement = false;\r\n    private popup: Window;\r\n\r\n    constructor(\r\n        private http: AppHttpClient,\r\n        private settings: Settings,\r\n        private subscriptions: Subscriptions,\r\n        private i18n: Translations,\r\n    ) {}\r\n\r\n    /**\r\n     * Subscribe to specified plan on paypal.\r\n     */\r\n    public subscribe(params: {plan_id: number, start_date?: string}): Promise<User> {\r\n        this.subscriptionPending = true;\r\n\r\n        this.popup = this.openPaypalPopup(this.settings.getBaseUrl(true) + 'billing/paypal/loading');\r\n\r\n        return new Promise((resolve, reject) => {\r\n            this.rejectSubscribe = reject;\r\n            this.resolveSubscribe = resolve;\r\n\r\n            this.createPaypalAgreement(params).subscribe(response => {\r\n                this.listenForMessages(params.plan_id);\r\n                this.popup.location.href = response.urls.approve;\r\n            }, errResponse => this.rejectSubscriptionPromise(errResponse));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Change plan of subscription to specified one.\r\n     */\r\n    public changePlan(subscription: Subscription, plan: Plan): Promise<User> {\r\n        return new Promise(resolve => {\r\n            this.subscriptions.cancel(subscription.id, {delete: true}).subscribe(() => {\r\n                this.subscribe({plan_id: plan.id, start_date: subscription.renews_at}).then(user => resolve(user));\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Listen for messages from paypal window and execute paypal agreement.\r\n     */\r\n    private listenForMessages(planId: number) {\r\n        window.addEventListener('message', e => {\r\n            if (this.settings.getBaseUrl().indexOf(e.origin) === -1) return;\r\n\r\n            // user cancelled payment on paypal popup manually\r\n            if (e.data.status !== 'success') {\r\n                return this.rejectSubscriptionPromise();\r\n            }\r\n\r\n            // user approved payment\r\n            this.executingAgreement = true;\r\n            this.executePaypalAgreement(e.data.token, planId)\r\n                .pipe(finalize(() => this.executingAgreement = false))\r\n                .subscribe(\r\n                    response => this.resolveSubscriptionPromise(response.user),\r\n                    (errResponse: BackendErrorResponse) => this.rejectSubscriptionPromise(),\r\n                );\r\n        }, false);\r\n    }\r\n\r\n    /**\r\n     * Open new paypal express popup window.\r\n     */\r\n    private openPaypalPopup(url: string) {\r\n        const params = Object.assign({}, this.popupParams, {\r\n            left: (screen.width / 2) - (this.popupWidth / 2),\r\n            top: (screen.height / 2) - (this.popupHeight / 2)\r\n        });\r\n\r\n        const newWindow = window.open(\r\n            url,\r\n            'PayPal',\r\n            Object.keys(params).map(key => key + '=' + params[key]).join(', '),\r\n        );\r\n\r\n        const interval = setInterval(() => {\r\n            if (newWindow == null || newWindow.closed) {\r\n                window.clearInterval(interval);\r\n\r\n                if (this.subscriptionPending && ! this.executingAgreement) {\r\n                    this.rejectSubscriptionPromise();\r\n                }\r\n            }\r\n        }, 1000);\r\n\r\n        return newWindow;\r\n    }\r\n\r\n    private createPaypalAgreement(params: {plan_id: number, start_date?: string}): Observable<{urls: {execute: string, approve: string}}> {\r\n        return this.http.post('billing/subscriptions/paypal/agreement/create', {plan_id: params.plan_id, start_date: params.start_date});\r\n    }\r\n\r\n    private executePaypalAgreement(agreement_id: string, plan_id: number): Observable<{user: User}> {\r\n        return this.http.post('billing/subscriptions/paypal/agreement/execute', {agreement_id, plan_id});\r\n    }\r\n\r\n    /**\r\n     * Reject subscription promise.\r\n     */\r\n    private rejectSubscriptionPromise(errResponse?: BackendErrorResponse) {\r\n        this.rejectSubscribe(this.i18n.t(errResponse?.message || 'Payment failed. Please try again later.'));\r\n        this.subscriptionPending = false;\r\n        this.popup && this.popup.close();\r\n    }\r\n\r\n    /**\r\n     * Resolve subscription promise.\r\n     */\r\n    private resolveSubscriptionPromise(user: User) {\r\n        this.resolveSubscribe(user);\r\n        this.subscriptionPending = false;\r\n    }\r\n}\r\n","<material-navbar [hideRegisterButton]=\"state.mode === 'pricing'\"></material-navbar>\r\n\r\n<div class=\"bg-wrapper\">\r\n    <mat-horizontal-stepper class=\"container main-content\" [linear]=\"true\">\r\n        <ng-template matStepperIcon=\"edit\">\r\n            <mat-icon svgIcon=\"edit\" class=\"size-16\"></mat-icon>\r\n        </ng-template>\r\n\r\n        <mat-step [label]=\"'Subscription plan' | trans\" [completed]=\"!!(state.initialPlan$ | async)\">\r\n            <select-plan-panel (selected)=\"nextStep()\"></select-plan-panel>\r\n            <contact-widget></contact-widget>\r\n        </mat-step>\r\n\r\n        <mat-step [label]=\"'Subscription interval' | trans\" [completed]=\"!!(state.selectedPlan$ | async)\">\r\n            <select-plan-period-panel [showSidebar]=\"true\" (selected)=\"nextStep()\"></select-plan-period-panel>\r\n        </mat-step>\r\n\r\n        <mat-step [label]=\"'Payment' | trans\" [completed]=\"false\" *ngIf=\"state.mode === 'subscribe'\">\r\n            <div class=\"step-container payment-step\">\r\n                <div class=\"left-col\">\r\n                    <create-subscription-panel [plan]=\"state.selectedPlan$ | async\" (loading)=\"loading$.next($event)\" (completed)=\"onCompleted()\"></create-subscription-panel>\r\n                </div>\r\n\r\n                <upgrade-page-aside [plan]=\"state.selectedPlan$ | async\" class=\"right-col\"></upgrade-page-aside>\r\n            </div>\r\n\r\n            <p\r\n                class=\"legal-info\" *ngIf=\"state.selectedPlan$ | async as plan\"\r\n                trans\r\n                [transValues]=\"{\r\n                    siteName: settings.get('branding.site_name'),\r\n                    intervalCount: plan.interval_count > 1 ? plan.interval_count : '',\r\n                    intervalName: plan.interval_count > 1 ? plan.interval + 's' : plan.interval\r\n                }\">\r\n                You authorise :siteName to charge you automatically every :intervalCount :intervalName, until you cancel your subscription. You consent to get access to your :siteName subscription immediately, and acknowledge that refunds are only available within 14 days and provided you haven't accessed :siteName. You will be able to cancel your subscription at any time from your profile page.\r\n            </p>\r\n        </mat-step>\r\n    </mat-horizontal-stepper>\r\n</div>\r\n\r\n<loading-indicator class=\"overlay\" [isVisible]=\"loading$ | async\"></loading-indicator>\r\n","import { ChangeDetectionStrategy, Component, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { MatStepper } from '@angular/material/stepper';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { SubscriptionStepperState } from '../subscriptions/subscription-stepper-state.service';\r\nimport { Settings } from '../../core/config/settings.service';\r\nimport { Toast } from '../../core/ui/toast.service';\r\nimport { Subscriptions } from '../../shared/billing/subscriptions.service';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { LocalStorage } from '@common/core/services/local-storage.service';\r\nimport { Plan } from '@common/core/types/models/Plan';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { CurrentUser } from '@common/auth/current-user';\r\nimport { PaypalSubscriptions } from '@common/billing/subscriptions/paypal-subscriptions';\r\n\r\nexport interface CreditCard {\r\n    number?: number|string;\r\n    expiration_month?: number|string;\r\n    expiration_year?: number|string;\r\n    security_code?: number|string;\r\n}\r\n\r\nenum Steps {\r\n    Plans = 0,\r\n    Period = 1,\r\n    Payment = 2\r\n}\r\n\r\ninterface LocalStorageState {\r\n    initial?: number;\r\n    final?: number;\r\n}\r\n\r\nconst LOCAL_STORAGE_KEY = 'be.onboarding.selected';\r\n\r\n@Component({\r\n    selector: 'upgrade-page',\r\n    templateUrl: './upgrade-page.component.html',\r\n    styleUrls: ['./upgrade-page.component.scss'],\r\n    providers: [SubscriptionStepperState],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class UpgradePageComponent implements OnInit {\r\n    @ViewChild(MatStepper, { static: true }) stepper: MatStepper;\r\n    @Input() set mode(value: 'pricing'|'subscribe'|'changePlan') {\r\n        this.state.mode = value;\r\n    }\r\n    public loading$ = new BehaviorSubject<boolean>(false);\r\n\r\n    constructor(\r\n        private subscriptions: Subscriptions,\r\n        private route: ActivatedRoute,\r\n        public settings: Settings,\r\n        private router: Router,\r\n        private toast: Toast,\r\n        public state: SubscriptionStepperState,\r\n        private localStorage: LocalStorage,\r\n        private currentUser: CurrentUser,\r\n        private paypalSubscriptions: PaypalSubscriptions,\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        this.route.data.subscribe((data: {plans: Plan[]}) => {\r\n            this.state.setPlans(data.plans);\r\n            if (this.state.mode === 'subscribe') {\r\n               this.hydrateStateFromLocalStorage();\r\n            }\r\n        });\r\n    }\r\n\r\n    private hydrateStateFromLocalStorage() {\r\n        const storedState = this.localStorage.get(LOCAL_STORAGE_KEY) as LocalStorageState;\r\n        if (storedState && storedState.initial && storedState.final) {\r\n            const initialPlan = this.state.plans.find(p => p.id === storedState.initial),\r\n                finalPlan = this.state.plans.find(p => p.id === storedState.final);\r\n            if (initialPlan && finalPlan) {\r\n                this.state.selectInitialPlan(initialPlan);\r\n                this.state.selectPlanById(finalPlan.id);\r\n                this.stepper.selectedIndex = Steps.Payment;\r\n            }\r\n        }\r\n    }\r\n\r\n    public nextStep() {\r\n        // User is changing their plan, there's no need to get their payment information\r\n        if (this.state.mode === 'changePlan' && this.stepper.selectedIndex === Steps.Period) {\r\n            this.changePlan();\r\n        // User has selected free plan in pricing page. Redirect them to sign-up page\r\n        } else if (this.state.mode === 'pricing' && this.state.selectedPlan$.value.free && this.stepper.selectedIndex === Steps.Plans) {\r\n            this.router.navigate(['register']);\r\n        // User has selected paid plan on pricing page, but have not signed up yet,\r\n        // store selected plan data in local storage and redirect to sign-up page\r\n        } else if (this.state.mode === 'pricing' && this.stepper.selectedIndex === Steps.Period) {\r\n            this.localStorage.set(LOCAL_STORAGE_KEY, {\r\n                initial: this.state.initialPlan$.value.id,\r\n                final: this.state.selectedPlan$.value.id\r\n            });\r\n            this.router.navigate(['register']);\r\n        // Continue to next subscription flow step\r\n        } else {\r\n            this.stepper.next();\r\n        }\r\n    }\r\n\r\n    public onCompleted() {\r\n        this.loading$.next(false);\r\n        this.router.navigate(['/']);\r\n        this.localStorage.remove(LOCAL_STORAGE_KEY);\r\n        this.toast.open({\r\n            message: 'Subscribed to \":planName\" plan successfully.',\r\n            replacements: {planName: this.getSelectedOrParentPlanName()},\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Change user's active subscription plan to specified one.\r\n     */\r\n    public changePlan() {\r\n        const plan = this.state.selectedPlan$.value,\r\n            activeSubscription = this.currentUser.getSubscription();\r\n        // user already subscribed\r\n        if (this.currentUser.getSubscription({planId: plan.id})) {\r\n            return;\r\n        }\r\n        this.loading$.next(true);\r\n        if (activeSubscription.gateway === 'paypal') {\r\n            this.paypalSubscriptions.changePlan(activeSubscription, plan).then(user => {\r\n                this.loading$.next(false);\r\n                this.currentUser.assignCurrent(user);\r\n                this.router.navigate(['/billing/subscription']);\r\n                this.toast.open('Subscription plan changed.');\r\n            });\r\n        } else {\r\n            this.subscriptions.changePlan(activeSubscription.id, plan)\r\n                .pipe(finalize(() => this.loading$.next(false)))\r\n                .subscribe(response => {\r\n                    this.currentUser.assignCurrent(response['user']);\r\n                    this.router.navigate(['/billing/subscription']);\r\n                    this.toast.open('Subscription plan changed.');\r\n                });\r\n        }\r\n    }\r\n\r\n    private getSelectedOrParentPlanName(): string {\r\n        const selectedPlan = this.state.selectedPlan$.value;\r\n        const plan = selectedPlan.parent ? selectedPlan.parent : selectedPlan;\r\n        return plan.name;\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Resolve, RouterStateSnapshot, ActivatedRouteSnapshot, Router} from '@angular/router';\r\nimport {catchError, map, mergeMap} from 'rxjs/operators';\r\nimport {EMPTY, Observable, of} from 'rxjs';\r\nimport {Plan} from '@common/core/types/models/Plan';\r\nimport {Plans} from '@common/shared/billing/plans.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class BillingPlansResolver implements Resolve<Plan[]> {\r\n    constructor(\r\n        private plans: Plans,\r\n        private router: Router\r\n    ) {}\r\n\r\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<Plan[]> {\r\n        return this.plans.all({order: 'position|asc', perPage: 30})\r\n            .pipe(map(response => response.pagination.data))\r\n            .pipe(\r\n                catchError(() => {\r\n                    this.router.navigateByUrl('/');\r\n                    return EMPTY;\r\n                }),\r\n                mergeMap((plans: Plan[]) => {\r\n                    return of(plans);\r\n                })\r\n            );\r\n    }\r\n}\r\n\r\n","<div class=\"text\" trans>Accepted Payment Methods</div>\r\n<div class=\"card-icons\">\r\n    <img [src]=\"getCardIcon('paypal')\">\r\n    <img [src]=\"getCardIcon(card)\" *ngFor=\"let card of acceptedCards\">\r\n</div>","import {ChangeDetectionStrategy, Component, ElementRef, OnInit} from '@angular/core';\r\nimport {Settings} from '@common/core/config/settings.service';\r\n\r\n@Component({\r\n    selector: 'accepted-payments-header',\r\n    templateUrl: './accepted-payments-header.component.html',\r\n    styleUrls: ['./accepted-payments-header.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class AcceptedPaymentsHeaderComponent implements OnInit {\r\n    public acceptedCards: string[] = [];\r\n\r\n    constructor(private settings: Settings, public el: ElementRef) {}\r\n\r\n    ngOnInit() {\r\n        this.acceptedCards = this.settings.getJson('billing.accepted_cards', []);\r\n    }\r\n\r\n    public getCardIcon(card: string) {\r\n        return this.settings.getAssetUrl() + 'images/billing/' + card.toLowerCase() + '.png';\r\n    }\r\n}\r\n","<ul *ngIf=\"getPlan()\" [class.dense]=\"dense\">\r\n    <ng-container *ngIf=\"getPlan().show_permissions\">\r\n        <li *ngFor=\"let permission of getPlan().permissions\">\r\n            <mat-icon class=\"check-icon\" svgIcon=\"check\" *ngIf=\"showCheckIcons\"></mat-icon>\r\n            <span>{{permission.display_name || permission.name}}</span>\r\n        </li>\r\n    </ng-container>\r\n    <ng-container *ngIf=\"getPlan().features.length\">\r\n        <li *ngFor=\"let feature of getPlan().features\">\r\n            <mat-icon class=\"check-icon\" svgIcon=\"check\" *ngIf=\"showCheckIcons\"></mat-icon>\r\n            <span>{{feature}}</span>\r\n        </li>\r\n    </ng-container>\r\n</ul>","import {ChangeDetectionStrategy, Component, Input} from '@angular/core';\r\nimport {Plan} from '@common/core/types/models/Plan';\r\n\r\n@Component({\r\n    selector: 'plan-features-list',\r\n    templateUrl: './plan-features-list.component.html',\r\n    styleUrls: ['./plan-features-list.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class PlanFeaturesListComponent {\r\n    @Input() plan: Plan;\r\n    @Input() showCheckIcons = false;\r\n    @Input() dense = false;\r\n\r\n    public getPlan() {\r\n        return this.plan.parent || this.plan;\r\n    }\r\n}\r\n","<accepted-payments-header></accepted-payments-header>\r\n\r\n<ng-container *ngIf=\"plan\">\r\n    <div class=\"selected-plan\">\r\n        <div class=\"header\"><full-plan-name [plan]=\"plan\"></full-plan-name></div>\r\n        <plan-features-list class=\"plan-features-list\" [plan]=\"plan\" [showCheckIcons]=\"true\" [dense]=\"true\"></plan-features-list>\r\n    </div>\r\n\r\n    <div class=\"divider\"></div>\r\n\r\n    <div class=\"secure-shopping\">\r\n        <div class=\"icon-container\">\r\n            <mat-icon svgIcon=\"shield-custom\"></mat-icon>\r\n        </div>\r\n        <div class=\"text\">\r\n            <div class=\"primary\" trans>SSL Secure Payment</div>\r\n            <div class=\"secondary\" trans>Your information is protected by 256-bit SSL encryption</div>\r\n        </div>\r\n    </div>\r\n</ng-container>","import {ChangeDetectionStrategy, Component, Input} from '@angular/core';\r\nimport {Plan} from '@common/core/types/models/Plan';\r\n\r\n@Component({\r\n    selector: 'upgrade-page-aside',\r\n    templateUrl: './upgrade-page-aside.component.html',\r\n    styleUrls: ['./upgrade-page-aside.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class UpgradePageAsideComponent {\r\n    @Input() plan: Plan;\r\n}\r\n","<ng-container *ngIf=\"state.selectedPlan$ | async as selectedPlan\">\r\n    <div class=\"line\">\r\n        <div class=\"summary-left\">\r\n            <full-plan-name [plan]=\"selectedPlan\"></full-plan-name>\r\n        </div>\r\n        <div class=\"summary-right\">{{selectedPlan.amount | currency:selectedPlan.currency}}</div>\r\n    </div>\r\n\r\n    <div class=\"line emphasis\">\r\n        <div class=\"summary-left\" trans>Total</div>\r\n        <div class=\"summary-right\">{{selectedPlan.amount | currency:selectedPlan.currency}}</div>\r\n    </div>\r\n</ng-container>","import {ChangeDetectionStrategy, Component} from '@angular/core';\r\nimport {SubscriptionStepperState} from '@common/billing/subscriptions/subscription-stepper-state.service';\r\n\r\n@Component({\r\n    selector: 'order-summary',\r\n    templateUrl: './order-summary.component.html',\r\n    styleUrls: ['./order-summary.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class OrderSummaryComponent {\r\n    constructor(public state: SubscriptionStepperState) {}\r\n}\r\n","<form (ngSubmit)=\"submitForm()\" class=\"card-form many-inputs\" ngNativeValidate>\r\n    <div class=\"input-container\">\r\n        <label for=\"cardNumber\" trans>Credit or Debit Card</label>\r\n        <div id=\"cardNumber\" class=\"fake-input\"></div>\r\n    </div>\r\n\r\n    <div class=\"input-container\">\r\n        <label for=\"cardExpiry\" trans>Card Expiration</label>\r\n        <div id=\"cardExpiry\" class=\"fake-input\"></div>\r\n    </div>\r\n\r\n    <div class=\"input-container\">\r\n        <label for=\"cardCvc\" trans>CVC</label>\r\n        <div id=\"cardCvc\" class=\"fake-input\"></div>\r\n    </div>\r\n\r\n    <div class=\"error margin-bottom\" role=\"alert\" *ngIf=\"error$ | async as error\">{{error}}</div>\r\n\r\n    <order-summary *ngIf=\"showOrderSummary\"></order-summary>\r\n\r\n    <button type=\"submit\" *ngIf=\"showSubmitButton\" mat-raised-button color=\"accent\" [disabled]=\"loading$ | async\">{{submitButtonText | trans}}</button>\r\n</form>\r\n","import {\r\n    AfterViewInit,\r\n    ChangeDetectionStrategy,\r\n    Component,\r\n    EventEmitter,\r\n    Input,\r\n    NgZone,\r\n    OnDestroy,\r\n    Output\r\n} from '@angular/core';\r\nimport {finalize} from 'rxjs/operators';\r\nimport {User} from '../../core/types/models/User';\r\nimport {Settings} from '../../core/config/settings.service';\r\nimport {LazyLoaderService} from '../../core/utils/lazy-loader.service';\r\nimport {CurrentUser} from '../../auth/current-user';\r\nimport {Subscriptions} from '../../shared/billing/subscriptions.service';\r\nimport {Toast} from '../../core/ui/toast.service';\r\nimport {ThemeService} from '@common/core/theme.service';\r\nimport {BehaviorSubject} from 'rxjs';\r\nimport {SubscriptionStepperState} from '@common/billing/subscriptions/subscription-stepper-state.service';\r\nimport {BackendErrorResponse} from '@common/core/types/backend-error-response';\r\n\r\n@Component({\r\n    selector: 'credit-card-form',\r\n    templateUrl: './credit-card-form.component.html',\r\n    styleUrls: ['./credit-card-form.component.scss'],\r\n    // changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class CreditCardFormComponent implements OnDestroy, AfterViewInit {\r\n\r\n    /**\r\n     * Event fired when form is submitted and card is added successfully on active gateway.\r\n     */\r\n    @Output() created: EventEmitter<User> = new EventEmitter();\r\n\r\n    /**\r\n     * Display text for form submit button.\r\n     */\r\n    @Input() submitButtonText = 'Submit';\r\n\r\n    /**\r\n     * Whether form submit button should be shown.\r\n     */\r\n    @Input() showSubmitButton = true;\r\n\r\n    /**\r\n     * Whether order summary should be shown in the template.\r\n     */\r\n    @Input() showOrderSummary = false;\r\n\r\n    public loading$ = new BehaviorSubject<boolean>(false);\r\n    public error$ = new BehaviorSubject<string>(null);\r\n    private stripeElements: stripe.elements.Element[] = [];\r\n\r\n    constructor(\r\n        private subscriptions: Subscriptions,\r\n        private currentUser: CurrentUser,\r\n        private settings: Settings,\r\n        private zone: NgZone,\r\n        private lazyLoader: LazyLoaderService,\r\n        private toast: Toast,\r\n        private theme: ThemeService,\r\n        private state: SubscriptionStepperState,\r\n    ) {\r\n        this.resetForm();\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.initStripe();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.destroyStripe();\r\n    }\r\n\r\n    /**\r\n     * Submit stripe elements credit card form.\r\n     */\r\n    public async submitForm() {\r\n        this.loading$.next(true);\r\n\r\n        const {token, error} = await this.state.stripe.createToken(this.stripeElements[0]);\r\n\r\n        if (error) {\r\n            this.error$.next(error.message);\r\n            this.loading$.next(false);\r\n        } else {\r\n            this.addCardToUser(token);\r\n        }\r\n    }\r\n\r\n    public addCardToUser(stripeToken: stripe.Token) {\r\n        this.loading$.next(true);\r\n        this.subscriptions.addCard(stripeToken.id)\r\n            .pipe(finalize(() =>  this.loading$.next(false)))\r\n            .subscribe(response => {\r\n                this.resetForm();\r\n                this.currentUser.assignCurrent(response.user);\r\n                this.created.emit(response.user);\r\n            }, (errResponse: BackendErrorResponse) => {\r\n                this.error$.next(errResponse.message);\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Initiate stripe elements credit card form.\r\n     */\r\n    private initStripe() {\r\n        this.lazyLoader.loadAsset('https://js.stripe.com/v3', {type: 'js'}).then(() => {\r\n            const fields = ['cardNumber', 'cardExpiry', 'cardCvc'] as stripe.elements.elementsType[];\r\n            this.state.stripe = Stripe(this.settings.get('billing.stripe_public_key'));\r\n            const elements = this.state.stripe.elements();\r\n\r\n            const isDarkMode = this.theme.selectedTheme$.value.is_dark;\r\n            fields.forEach(field => {\r\n                const el = elements.create(field, {classes: {base: 'base'}, style: {base: {color: isDarkMode ? '#fff' : 'inherit'}}});\r\n                el.mount('#' + field);\r\n                el.on('change', this.onChange.bind(this));\r\n                this.stripeElements.push(el);\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Destroy all stripe elements instances.\r\n     */\r\n    private destroyStripe() {\r\n        this.stripeElements.forEach(el => {\r\n            el.unmount();\r\n            el.destroy();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Fired on stripe element \"change\" event.\r\n     */\r\n    private onChange(change: stripe.elements.ElementChangeResponse) {\r\n        this.zone.run(() => {\r\n            this.error$.next(change.error ? change.error.message : null);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Reset credit card form.\r\n     */\r\n    private resetForm() {\r\n        this.error$.next(null);\r\n    }\r\n}\r\n","<mat-tab-group [dynamicHeight]=\"true\" color=\"accent\" [selectedIndex]=\"selectedIndex$ | async\">\r\n    <mat-tab [label]=\"'Bank Card' | trans\" *ngIf=\"settings.get('billing.stripe.enable')\">\r\n        <credit-card-form (created)=\"subscribeOnStripe()\" [submitButtonText]=\"submitText\" [showOrderSummary]=\"true\"></credit-card-form>\r\n    </mat-tab>\r\n    <mat-tab label=\"Paypal\" [disabled]=\"disablePaypalTab\" *ngIf=\"settings.get('billing.paypal.enable')\">\r\n        <div class=\"paypal-tab\">\r\n            <p class=\"info\" trans>After clicking the button below, you will be redirected to paypal.com to approve the subscription.</p>\r\n            <order-summary></order-summary>\r\n            <button mat-raised-button color=\"accent\" (click)=\"subscribeOnPaypal()\" [disabled]=\"loading$ | async\">{{submitText | trans}}</button>\r\n        </div>\r\n    </mat-tab>\r\n</mat-tab-group>\r\n","import {ChangeDetectionStrategy, Component, EventEmitter, Input, Output} from '@angular/core';\r\nimport {Subscription} from '@common/shared/billing/models/subscription';\r\nimport {Plan} from '@common/core/types/models/Plan';\r\nimport {CreateSubOnStripeResponse, Subscriptions} from '@common/shared/billing/subscriptions.service';\r\nimport {CurrentUser} from '@common/auth/current-user';\r\nimport {PaypalSubscriptions} from '@common/billing/subscriptions/paypal-subscriptions';\r\nimport {Toast} from '@common/core/ui/toast.service';\r\nimport {Settings} from '@common/core/config/settings.service';\r\nimport {User} from '@common/core/types/models/User';\r\nimport {CreditCard} from '@common/billing/upgrade-page/upgrade-page.component';\r\nimport {BehaviorSubject} from 'rxjs';\r\nimport {SubscriptionStepperState} from '@common/billing/subscriptions/subscription-stepper-state.service';\r\nimport {BackendErrorResponse} from '@common/core/types/backend-error-response';\r\nimport {HttpErrors} from '@common/core/http/errors/http-errors.enum';\r\n\r\nexport interface SubscriptionCompletedEvent {\r\n    status: 'created'|'updated';\r\n}\r\n\r\ninterface NewSubscriptionPayload {\r\n    card?: CreditCard;\r\n    start_date?: string;\r\n    plan_id: number;\r\n}\r\n\r\n@Component({\r\n    selector: 'create-subscription-panel',\r\n    templateUrl: './create-subscription-panel.component.html',\r\n    styleUrls: ['./create-subscription-panel.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class CreateSubscriptionPanelComponent {\r\n    public loading$ = new BehaviorSubject<boolean>(false);\r\n    public selectedIndex$ = new BehaviorSubject<number>(0);\r\n\r\n    /**\r\n     * Fired when subscription creation starts or ends.\r\n     */\r\n    @Output() loading = new EventEmitter<boolean>();\r\n\r\n    /**\r\n     * Text for submit purchase button.\r\n     */\r\n    @Input() submitText = 'Submit Purchase';\r\n\r\n    /**\r\n     * Whether paypal tab should be disabled.\r\n     */\r\n    @Input() disablePaypalTab = false;\r\n\r\n    /**\r\n     * We're changing user subscription from this one.\r\n     * Used for prorating the new subscription start date.\r\n     */\r\n    @Input() from: Subscription;\r\n\r\n    /**\r\n     * Plan user should be subscribed to.\r\n     */\r\n    @Input() plan: Plan;\r\n\r\n    /**\r\n     * Fired when subscription is created or updated.\r\n     */\r\n    @Output() completed: EventEmitter<SubscriptionCompletedEvent> = new EventEmitter();\r\n\r\n    constructor(\r\n        private subscriptions: Subscriptions,\r\n        private currentUser: CurrentUser,\r\n        private paypal: PaypalSubscriptions,\r\n        private toast: Toast,\r\n        public settings: Settings,\r\n        private state: SubscriptionStepperState,\r\n    ) {}\r\n\r\n    /**\r\n     * Subscribe user to current plan on stripe gateway.\r\n     */\r\n    public subscribeOnStripe() {\r\n        // if user is already subscribed to this plan, fire \"updated\" event and bail\r\n        if (this.currentUser.getSubscription({gateway: 'stripe', planId: this.plan.id})) {\r\n            return this.completed.emit({status: 'updated'});\r\n        }\r\n\r\n        this.startLoading();\r\n\r\n        this.subscriptions.createOnStripe(this.getNewSubscriptionPayload())\r\n            .subscribe(response => {\r\n                if (response.status === 'complete') {\r\n                    this.completeSubscription(response.user);\r\n                } else {\r\n                   this.confirmCardPayment(response);\r\n                }\r\n            }, (errResponse: BackendErrorResponse) => {\r\n                const key = Object.keys(errResponse.errors)[0];\r\n                this.toast.open(errResponse.errors[key] || HttpErrors.Default);\r\n                this.stopLoading();\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Confirm card payment via 3D secure.\r\n     */\r\n    private confirmCardPayment(response: CreateSubOnStripeResponse) {\r\n        this.state.stripe.confirmCardPayment(response.payment_intent_secret)\r\n            .then(result => {\r\n                if (result.error) {\r\n                    this.stopLoading();\r\n                    this.toast.open('Card payment was not confirmed.', {action: 'Retry'})\r\n                        .onAction()\r\n                        .subscribe(() => {\r\n                            this.confirmCardPayment(response);\r\n                        });\r\n                } else {\r\n                    this.subscriptions.finalizeOnStripe(response.reference, response.user.id)\r\n                        .subscribe(finalResponse => {\r\n                            this.completeSubscription(finalResponse.user);\r\n                        });\r\n                }\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Subscribe user to current plan on paypal gateway.\r\n     */\r\n    public subscribeOnPaypal() {\r\n        // if user is already subscribed to this plan, fire \"updated\" event and bail\r\n        if (this.currentUser.getSubscription({gateway: 'paypal', planId: this.plan.id})) {\r\n            return this.completed.emit({status: 'updated'});\r\n        }\r\n\r\n        this.startLoading();\r\n\r\n        this.paypal.subscribe(this.getNewSubscriptionPayload()).then(user => {\r\n            this.completeSubscription(user);\r\n            this.selectedIndex$.next(0);\r\n        }).catch(message => {\r\n            this.stopLoading();\r\n            this.toast.open(message || 'There was an issue. Please try again later.');\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get payload for backend for creating a new subscription.\r\n     */\r\n    private getNewSubscriptionPayload(): NewSubscriptionPayload {\r\n       const payload = {plan_id: this.plan.id};\r\n\r\n       if (this.from) {\r\n           payload['start_date'] = this.from.renews_at;\r\n       }\r\n\r\n       return payload;\r\n    }\r\n\r\n    private completeSubscription(user: User) {\r\n        this.stopLoading();\r\n        this.currentUser.assignCurrent(user);\r\n        this.completed.emit({status: 'created'});\r\n    }\r\n\r\n    private startLoading() {\r\n        this.loading$.next(true);\r\n        this.loading.emit(true);\r\n    }\r\n\r\n    private stopLoading() {\r\n        this.loading$.next(false);\r\n        this.loading.emit(false);\r\n    }\r\n}\r\n","<material-navbar [menuPosition]=\"settings.get('vebto.navbar.defaultPosition')\"></material-navbar>\r\n\r\n<div class=\"content container mat-elevation-z1\" *ngIf=\"activeSubscription$ | async as activeSubscription\">\r\n    <div class=\"main\">\r\n        <div class=\"main-section\">\r\n            <div class=\"main-section-title\"><full-plan-name [plan]=\"activeSubscription.plan\"></full-plan-name></div>\r\n            <div class=\"main-section-content\">\r\n                <ng-container *ngIf=\"canCancel()\">\r\n                    <p>\r\n                        {{ 'Your plan will automatically renew on' | trans }}\r\n                        <strong>{{getFormattedRenewDate() | formattedDate}}</strong>\r\n                        {{ \"and you'll be charged\" | trans }}\r\n                        <strong>{{activeSubscription.plan.amount | currency:activeSubscription.plan.currency}}</strong>.\r\n                    </p>\r\n\r\n                    <a mat-raised-button color=\"accent\" routerLink=\"/billing/upgrade\" trans>Change Plan</a>\r\n                </ng-container>\r\n\r\n                <ng-container *ngIf=\"canResume()\">\r\n                    <p>{{ 'You are on a grace period until' | trans }} <strong>{{getFormattedEndDate() | formattedDate}}</strong>. {{ 'Your subscription will not automatically resume and you will not be charged' | trans }}.</p>\r\n                    <p trans>You still have access to your plan's features until this date and you can resume your subscription anytime, by clicking button below.</p>\r\n                    <button mat-raised-button color=\"accent\" (click)=\"resumeSubscription()\" trans>Resume</button>\r\n                </ng-container>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"main-section\" *ngIf=\"canCancel() && canChangePaymentMethod()\">\r\n            <div class=\"main-section-title\" trans>Payment Method</div>\r\n            <div class=\"main-title-description\" trans>Change your preferred payment method below. You can use a credit card or PayPal.</div>\r\n\r\n            <p>{{ 'Current payment Method' | trans }}: <strong>{{activeSubscription.gateway === 'paypal' ? 'PayPal' : ('Credit Card' | trans)}}</strong></p>\r\n\r\n            <div class=\"card-preview\" *ngIf=\"activeSubscription.gateway === 'stripe'\">\r\n                <div class=\"icon\"><mat-icon svgIcon=\"credit-card\"></mat-icon></div>\r\n                <div class=\"info\">{{currentUser.get('card_brand')}} **** {{currentUser.get('card_last_four')}}</div>\r\n            </div>\r\n\r\n            <create-subscription-panel\r\n                    (completed)=\"onPaymentMethodChange($event)\"\r\n                    (loading)=\"loading$.next($event)\"\r\n                    [plan]=\"getPlan()\"\r\n                    [from]=\"activeSubscription\"\r\n                    [disablePaypalTab]=\"activeSubscription.gateway === 'paypal'\"\r\n                    submitText=\"Change Payment Method\"\r\n            ></create-subscription-panel>\r\n        </div>\r\n\r\n        <div class=\"main-section\" *ngIf=\"canCancel()\">\r\n            <div class=\"main-section-title\" trans>Cancel Subscription</div>\r\n\r\n            <div class=\"main-section-content\">\r\n                <p trans>After cancelling subscription, you will have access to your active plan until your billing period end.</p>\r\n            </div>\r\n\r\n            <div class=\"main-section-actions\">\r\n                <button mat-raised-button color=\"warn\" (click)=\"maybeCancelSubscription()\" trans>Cancel</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <upgrade-page-aside [plan]=\"getPlan()\"></upgrade-page-aside>\r\n\r\n    <loading-indicator class=\"overlay\" [isVisible]=\"loading$ | async\"></loading-indicator>\r\n</div>\r\n\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { finalize, share } from 'rxjs/operators';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { Subscription } from '@common/shared/billing/models/subscription';\r\nimport { Settings } from '@common/core/config/settings.service';\r\nimport { Modal } from '@common/core/ui/dialogs/modal.service';\r\nimport { Subscriptions } from '@common/shared/billing/subscriptions.service';\r\nimport { CurrentUser } from '@common/auth/current-user';\r\nimport { Toast } from '@common/core/ui/toast.service';\r\nimport { Plan } from '@common/core/types/models/Plan';\r\nimport { ConfirmModalComponent } from '@common/core/ui/confirm-modal/confirm-modal.component';\r\nimport { SubscriptionCompletedEvent } from '@common/billing/subscriptions/create-subscription-panel/create-subscription-panel.component';\r\nimport { User } from '@common/core/types/models/User';\r\n\r\n@Component({\r\n    selector: 'user-subscription-page',\r\n    templateUrl: './user-subscription-page.component.html',\r\n    styleUrls: ['./user-subscription-page.component.scss'],\r\n   changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class UserSubscriptionPageComponent implements OnInit {\r\n    public loading$ = new BehaviorSubject<boolean>(false);\r\n    public activeSubscription$ = new BehaviorSubject<Subscription>(null);\r\n\r\n    constructor(\r\n        public settings: Settings,\r\n        private modal: Modal,\r\n        private subscriptions: Subscriptions,\r\n        public currentUser: CurrentUser,\r\n        private toast: Toast,\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        this.activeSubscription$.next(this.currentUser.getSubscription());\r\n    }\r\n\r\n    public canResume() {\r\n        return this.currentUser.onGracePeriod();\r\n    }\r\n\r\n    public canCancel() {\r\n        return this.currentUser.isSubscribed() && !this.currentUser.onGracePeriod();\r\n    }\r\n\r\n    public canChangePaymentMethod() {\r\n        return this.settings.get('billing.stripe.enable') || this.settings.get('billing.paypal.enable');\r\n    }\r\n\r\n    public getFormattedEndDate(): string {\r\n        if ( ! this.activeSubscription$.value.ends_at) return null;\r\n        return this.activeSubscription$.value.ends_at.split(' ')[0];\r\n    }\r\n\r\n    public getFormattedRenewDate() {\r\n        if ( ! this.activeSubscription$.value.renews_at) return null;\r\n        return this.activeSubscription$.value.renews_at.split(' ')[0];\r\n    }\r\n\r\n    public getPlan(): Plan {\r\n        return this.activeSubscription$.value.plan;\r\n    }\r\n\r\n    /**\r\n     * Ask user to confirm deletion of selected templates\r\n     * and delete selected templates if user confirms.\r\n     */\r\n    public maybeCancelSubscription() {\r\n        this.modal.open(ConfirmModalComponent, {\r\n            title: 'Cancel Subscription',\r\n            body: 'Are you sure you want to cancel your subscription?',\r\n            ok: 'Yes, Cancel',\r\n            cancel: 'Go Back'\r\n        }).afterClosed().subscribe(confirmed => {\r\n            if ( ! confirmed) return;\r\n            this.cancelSubscription().subscribe(() => {\r\n                this.toast.open('Subscription cancelled.');\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Resume cancelled subscription.\r\n     */\r\n    public resumeSubscription() {\r\n        this.loading$.next(true);\r\n        this.subscriptions.resume(this.activeSubscription$.value.id)\r\n            .pipe(finalize(() => this.loading$.next(false)))\r\n            .subscribe(response => {\r\n                this.currentUser.setSubscription(response.subscription);\r\n                this.activeSubscription$.next(this.currentUser.getSubscription());\r\n                this.toast.open('Subscription resumed.');\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Called after user payment method for active subscription has been changed successfully.\r\n     */\r\n    public onPaymentMethodChange(e: SubscriptionCompletedEvent) {\r\n        // if we've only changed customer card information on same\r\n        // payment gateway, show success message and bail\r\n        if (e.status === 'updated') {\r\n            this.toast.open('Payment method updated.');\r\n            return;\r\n        }\r\n\r\n        this.loading$.next(true);\r\n\r\n        // otherwise cancel user's subscription on the other gateway\r\n        this.cancelSubscription({delete: true}).subscribe(() => {\r\n            this.toast.open('Payment method updated.');\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Cancel currently active user subscription.\r\n     */\r\n    private cancelSubscription(params: {delete?: boolean} = {}): Observable<{user: User}> {\r\n        this.loading$.next(true);\r\n\r\n        const request = this.subscriptions.cancel(this.activeSubscription$.value.id, {delete: params.delete})\r\n            .pipe(finalize(() => this.loading$.next(false)))\r\n            .pipe(share());\r\n\r\n        request.subscribe(response => {\r\n            // set new active subscription, if user had more then one\r\n            this.updateUserAndSubscription(response.user);\r\n        });\r\n\r\n        return request;\r\n    }\r\n\r\n    /**\r\n     * Update current user and active subscription.\r\n     */\r\n    private updateUserAndSubscription(user: User) {\r\n        this.currentUser.assignCurrent(user);\r\n        this.activeSubscription$.next(this.currentUser.getSubscription());\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {CanActivate, Router, ActivatedRouteSnapshot, RouterStateSnapshot, CanActivateChild} from '@angular/router';\r\nimport {CurrentUser} from '../../auth/current-user';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class UserSubscribedGuard implements CanActivate, CanActivateChild {\r\n\r\n    constructor(private currentUser: CurrentUser, private router: Router) {}\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n        return this.handle();\r\n    }\r\n\r\n    canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n        return this.handle();\r\n    }\r\n\r\n    private handle() {\r\n        if (this.currentUser.isSubscribed()) { return true; }\r\n\r\n        this.router.navigate(['/billing/upgrade']);\r\n\r\n        return false;\r\n    }\r\n}","import {Injectable} from '@angular/core';\r\nimport {Resolve, RouterStateSnapshot, ActivatedRouteSnapshot} from '@angular/router';\r\nimport {map} from 'rxjs/operators';\r\nimport {ValueLists} from '../../core/services/value-lists.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class CurrenciesListResolver implements Resolve<any> {\r\n    constructor(private valueLists: ValueLists) {}\r\n\r\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Promise<any> {\r\n        return this.valueLists.get(['currencies']).pipe(map(response => response.currencies)).toPromise();\r\n    }\r\n}\r\n\r\n","import {Injectable} from '@angular/core';\nimport {AppHttpClient} from '@common/core/http/app-http-client.service';\nimport {BackendResponse} from '@common/core/types/backend-response';\nimport {Invoice} from '@common/billing/invoices/invoice';\n\nconst BASE_URI = 'billing/invoice';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class InvoiceService {\n    constructor(private http: AppHttpClient) {\n    }\n\n    public index(params: {userId?: number} = {}): BackendResponse<{invoices: Invoice[]}> {\n        return this.http.get(`${BASE_URI}`, params);\n    }\n}\n","<material-navbar [menuPosition]=\"settings.get('vebto.navbar.defaultPosition')\"></material-navbar>\n\n<div class=\"container\">\n    <h1 trans>Your Payment History</h1>\n\n    <table class=\"material-table\">\n        <thead>\n        <tr>\n            <th trans>Date</th>\n            <th trans>Amount</th>\n            <th trans>Status</th>\n            <th trans>Invoice</th>\n        </tr>\n        </thead>\n        <tbody>\n        <tr *ngFor=\"let invoice of invoices$ | async\">\n            <td>{{invoice.created_at | formattedDate}}</td>\n            <td>{{invoice.subscription.plan.currency_symbol + invoice.subscription.plan.amount}}</td>\n            <td>{{invoice.paid ? 'Paid' : 'Pending'}}</td>\n            <td>\n                <a [href]=\"getInvoiceUrl(invoice)\" target=\"_blank\" trans>View</a>\n            </td>\n        </tr>\n        </tbody>\n    </table>\n    <no-results-message svgImage=\"receipt.svg\" *ngIf=\"!(invoices$ | async).length && !(loading$ | async)\">\n        <span primary-text>You do not have any invoices yet.</span>\n    </no-results-message>\n</div>\n","import {ChangeDetectionStrategy, Component, OnInit} from '@angular/core';\nimport {InvoiceService} from '@common/billing/invoices/invoice.service';\nimport {Invoice} from '@common/billing/invoices/invoice';\nimport {BehaviorSubject} from 'rxjs';\nimport {Settings} from '@common/core/config/settings.service';\nimport {finalize} from 'rxjs/operators';\nimport {CurrentUser} from '@common/auth/current-user';\n\n@Component({\n    selector: 'invoice-index',\n    templateUrl: './invoice-index.component.html',\n    styleUrls: ['./invoice-index.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class InvoiceIndexComponent implements OnInit {\n    public invoices$ = new BehaviorSubject<Invoice[]>([]);\n    public loading$ = new BehaviorSubject<boolean>(false);\n\n    constructor(\n       private invoices: InvoiceService,\n       public settings: Settings,\n       private currentUser: CurrentUser,\n    ) {}\n\n    ngOnInit() {\n        this.loading$.next(true);\n        this.invoices.index({userId: this.currentUser.get('id')})\n            .pipe(finalize(() => this.loading$.next(false)))\n            .subscribe(response => {\n                this.invoices$.next(response.invoices);\n            });\n    }\n\n    public getInvoiceUrl(invoice: Invoice) {\n        return this.settings.getBaseUrl(true) + 'secure/billing/invoice/' + invoice.uuid;\n    }\n}\n","import { Component, OnInit, ViewEncapsulation, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'pricing-page',\n  templateUrl: './pricing-page.component.html',\n  styleUrls: ['./pricing-page.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PricingPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import {Injectable} from '@angular/core';\r\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot} from '@angular/router';\r\nimport {CurrentUser} from '../../auth/current-user';\r\nimport {AppearanceListenerService} from '../../shared/appearance/appearance-listener.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class RedirectToUpgradePage implements CanActivate {\r\n    constructor(\r\n        private currentUser: CurrentUser,\r\n        private router: Router,\r\n        private listener: AppearanceListenerService,\r\n    ) {}\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n        if (this.listener.active) {\r\n            return true;\r\n        }\r\n        if (this.currentUser.isSubscribed()) {\r\n            this.router.navigate(['billing/subscription']);\r\n            return false;\r\n        } else if (this.currentUser.isLoggedIn()) {\r\n            this.router.navigate(['billing/upgrade']);\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n}\r\n","import {Route, RouterModule} from '@angular/router';\r\nimport {UpgradePageComponent} from './upgrade-page/upgrade-page.component';\r\nimport {NgModule} from '@angular/core';\r\nimport {BillingPlansResolver} from './upgrade-page/billing-plans-resolver.service';\r\nimport {UserSubscriptionPageComponent} from './subscriptions/user-subscription-page/user-subscription-page.component';\r\nimport {CurrenciesListResolver} from './upgrade-page/currencies-list-resolver.service';\r\nimport {UserSubscribedGuard} from './guards/user-subscribed-guard.service';\r\nimport {AuthGuard} from '../guards/auth-guard.service';\r\nimport {BillingEnabledGuard} from '../shared/billing/guards/billing-enabled-guard.service';\r\nimport {InvoiceIndexComponent} from '@common/billing/invoices/invoice-index/invoice-index.component';\r\nimport {CheckPermissionsGuard} from '@common/guards/check-permissions-guard.service';\r\nimport {PricingPageComponent} from '@common/billing/pricing-page/pricing-page.component';\r\nimport {RedirectToUpgradePage} from '@common/billing/guards/redirect-to-upgrade-page.service';\r\n\r\nexport const routes: Route[] = [\r\n    {\r\n        path: 'pricing',\r\n        component: PricingPageComponent,\r\n        canActivate: [RedirectToUpgradePage],\r\n        resolve: {\r\n            plans: BillingPlansResolver,\r\n            currencies: CurrenciesListResolver\r\n        }\r\n    },\r\n    {\r\n        path: '',\r\n        canActivate: [AuthGuard, CheckPermissionsGuard],\r\n        canActivateChild: [CheckPermissionsGuard],\r\n        children: [\r\n            {\r\n                path: 'upgrade',\r\n                component: UpgradePageComponent,\r\n                canActivate: [BillingEnabledGuard, AuthGuard],\r\n                resolve: {\r\n                    plans: BillingPlansResolver,\r\n                    currencies: CurrenciesListResolver\r\n                }\r\n            },\r\n            {\r\n                path: 'subscription',\r\n                component: UserSubscriptionPageComponent,\r\n                resolve: { plans: BillingPlansResolver },\r\n                canActivate: [BillingEnabledGuard, AuthGuard, UserSubscribedGuard],\r\n                data: { name: 'subscription' }\r\n            },\r\n            {\r\n                path: 'invoices',\r\n                component: InvoiceIndexComponent,\r\n                // canActivate: [BillingEnabledGuard, AuthGuard, UserSubscribedGuard],\r\n            },\r\n        ]\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class BillingRoutingModule {}\r\n","<upgrade-page mode=\"pricing\"></upgrade-page>","<div class=\"plans\" [class.has-recommended]=\"hasRecommendedPlan\">\r\n    <div class=\"plan\" *ngFor=\"let plan of getAllPlans(); last as last; first as first\" [class.recommended]=\"plan.recommended\" [class.last]=\"last\" [class.first]=\"first\">\r\n        <div class=\"name\">{{plan.name}}</div>\r\n        <div class=\"price-box\" *ngIf=\"!plan.free\">\r\n            <span class=\"number\">{{plan.amount | currency:plan.currency}}</span>\r\n            <span class=\"interval\"> / {{plan.interval | trans}}</span>\r\n        </div>\r\n        <div class=\"price-box\" *ngIf=\"plan.free\" trans>Free</div>\r\n        <plan-features-list [plan]=\"plan\"></plan-features-list>\r\n        <button class=\"select-plan-button\" (click)=\"selectPlan(plan)\" mat-raised-button color=\"accent\" *ngIf=\"plan.recommended\" [disabled]=\"userSubscribedToPlan(plan)\">\r\n            {{ selectPlanButtonText(plan) | trans }}\r\n        </button>\r\n        <button class=\"select-plan-button\" (click)=\"selectPlan(plan)\" mat-stroked-button color=\"accent\" *ngIf=\"!plan.recommended\" [disabled]=\"userSubscribedToPlan(plan)\">\r\n            {{ selectPlanButtonText(plan) | trans }}\r\n        </button>\r\n    </div>\r\n</div>\r\n","import {ChangeDetectionStrategy, Component, EventEmitter, OnInit, Output} from '@angular/core';\r\nimport {SubscriptionStepperState} from '../../subscriptions/subscription-stepper-state.service';\r\nimport {Plan} from '@common/core/types/models/Plan';\r\nimport { CurrentUser } from '@common/auth/current-user';\r\n\r\n@Component({\r\n    selector: 'select-plan-panel',\r\n    templateUrl: './select-plan-panel.component.html',\r\n    styleUrls: ['./select-plan-panel.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class SelectPlanPanelComponent implements OnInit {\r\n    public hasRecommendedPlan = false;\r\n    @Output() selected = new EventEmitter();\r\n\r\n    constructor(\r\n        public state: SubscriptionStepperState,\r\n        public currentUser: CurrentUser,\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        this.hasRecommendedPlan = this.state.plans.filter(plan => plan.recommended).length > 0;\r\n    }\r\n\r\n    public selectPlan(plan: Plan) {\r\n        this.state.selectInitialPlan(plan);\r\n        // fire event on next render to avoid race conditions\r\n        setTimeout(() => this.selected.emit(plan));\r\n    }\r\n\r\n    public getAllPlans() {\r\n        return this.state.plans.filter(plan => !plan.parent_id && !plan.hidden);\r\n    }\r\n\r\n    public userSubscribedToPlan(plan: Plan): boolean {\r\n        if (this.state.mode !== 'pricing' && plan.free && !this.currentUser.model$?.value?.subscriptions?.length) {\r\n            return true;\r\n        }\r\n        return !!this.currentUser.getSubscription({planId: plan.id});\r\n    }\r\n\r\n    public selectPlanButtonText(plan: Plan) {\r\n        if (this.userSubscribedToPlan(plan)) {\r\n            return 'Your Current Plan';\r\n        } else if (plan.free && this.state.mode === 'pricing') {\r\n            return 'Get Started';\r\n        } else {\r\n            return 'Choose Plan';\r\n        }\r\n    }\r\n}\r\n","<div class=\"subscription-period-step step-container\" *ngIf=\"state.initialPlan$ | async as initialPlan\">\r\n    <div class=\"left-col\">\r\n        <div class=\"title\" trans>Select the duration of your plan. Longer plans offer better discounts!</div>\r\n        <mat-radio-group class=\"periods\" [(ngModel)]=\"state.radioGroupModel\" (change)=\"state.selectPlanById(state.radioGroupModel)\">\r\n            <div class=\"radio-button-wrapper no-label\">\r\n                <mat-radio-button [value]=\"initialPlan.id\" class=\"period\" color=\"accent\">\r\n                    <div class=\"radio-button-content\">\r\n                        <div class=\"name\">1 {{initialPlan.interval | trans}} {{ 'subscription' | trans }}:</div>\r\n                        <div class=\"price\">{{initialPlan.amount | currency:initialPlan.currency}}/{{initialPlan.interval | trans}}</div>\r\n                    </div>\r\n                </mat-radio-button>\r\n            </div>\r\n            <div class=\"radio-button-wrapper\" *ngFor=\"let plan of state.getChildPlans(initialPlan)\">\r\n                <ng-container *ngIf=\"state.selectedPlan$ | async as selectedPlan\">\r\n                    <div class=\"savings-label\">{{'Save' | trans}} {{getPlanSavings(selectedPlan.parent || selectedPlan, plan)}}%</div>\r\n                </ng-container>\r\n                <mat-radio-button [value]=\"plan.id\" class=\"period\" color=\"accent\">\r\n                    <div class=\"radio-button-content\">\r\n                        <div class=\"name\">{{plan.name | trans}}:</div>\r\n                        <div class=\"price\">{{getAmountForSingleInterval(plan) | currency:plan.currency}}/{{(plan.interval || initialPlan.interval) | trans}}</div>\r\n                    </div>\r\n                </mat-radio-button>\r\n            </div>\r\n        </mat-radio-group>\r\n\r\n        <div class=\"actions\">\r\n            <button mat-button matStepperPrevious trans>Back</button>\r\n            <button mat-raised-button color=\"accent\" (click)=\"selected.emit()\">\r\n                {{ (state.mode === 'changePlan' ? 'Change Plan' : 'Select') | trans }}\r\n            </button>\r\n        </div>\r\n    </div>\r\n\r\n    <upgrade-page-aside *ngIf=\"showSidebar\" [plan]=\"state.selectedPlan$ | async\" class=\"right-col\"></upgrade-page-aside>\r\n</div>\r\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { SubscriptionStepperState } from '../../subscriptions/subscription-stepper-state.service';\r\nimport { Plan } from '@common/core/types/models/Plan';\r\n\r\n@Component({\r\n    selector: 'select-plan-period-panel',\r\n    templateUrl: './select-plan-period-panel.component.html',\r\n    styleUrls: ['./select-plan-period-panel.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class SelectPlanPeriodPanelComponent {\r\n    @Input() showSidebar = false;\r\n    @Output() selected = new EventEmitter();\r\n\r\n    constructor(\r\n        public state: SubscriptionStepperState,\r\n    ) {}\r\n\r\n    public getPlanSavings(base: Plan, parent: Plan): number {\r\n        const baseAmount = this.getAmountPerDay(base);\r\n        const amount = this.getAmountPerDay(parent);\r\n        const savings = (baseAmount - amount) / baseAmount * 100;\r\n        return Math.ceil(savings);\r\n    }\r\n\r\n    private getAmountPerDay(plan: Plan) {\r\n        let days = 1;\r\n        if (plan.interval === 'week') {\r\n            days = 7;\r\n        } else if (plan.interval === 'month') {\r\n            days = 30;\r\n        } else if (plan.interval === 'year') {\r\n            days = 365;\r\n        }\r\n        days = days * plan.interval_count;\r\n        return plan.amount / days;\r\n    }\r\n\r\n    public getAmountForSingleInterval(plan: Plan) {\r\n        return plan.amount / plan.interval_count;\r\n    }\r\n}\r\n","import {ChangeDetectionStrategy, Component} from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'contact-widget',\r\n    templateUrl: './contact-widget.component.html',\r\n    styleUrls: ['./contact-widget.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ContactWidgetComponent {}\r\n","import {Injectable} from '@angular/core';\r\nimport {CanActivate, Router, ActivatedRouteSnapshot, RouterStateSnapshot, CanActivateChild} from '@angular/router';\r\nimport {CurrentUser} from '../../auth/current-user';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class UserNotSubscribedGuard implements CanActivate, CanActivateChild {\r\n\r\n    constructor(private currentUser: CurrentUser, private router: Router) {}\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n        return this.handle();\r\n    }\r\n\r\n    canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n        return this.handle();\r\n    }\r\n\r\n    private handle() {\r\n        if ( ! this.currentUser.isSubscribed()) { return true; }\r\n\r\n        this.router.navigate(['/billing/subscription']);\r\n\r\n        return false;\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { UpgradePageComponent } from './upgrade-page/upgrade-page.component';\r\nimport { BillingPlansResolver } from './upgrade-page/billing-plans-resolver.service';\r\nimport { BillingRoutingModule } from './billing-routing.module';\r\nimport { PlanFeaturesListComponent } from './upgrade-page/plan-features-list/plan-features-list.component';\r\nimport { OrderSummaryComponent } from './upgrade-page/order-summary/order-summary.component';\r\nimport { AcceptedPaymentsHeaderComponent } from './upgrade-page/accepted-payments-header/accepted-payments-header.component';\r\nimport { UserSubscriptionPageComponent } from './subscriptions/user-subscription-page/user-subscription-page.component';\r\nimport { UpgradePageAsideComponent } from './upgrade-page/upgrade-page-aside/upgrade-page-aside.component';\r\nimport { CurrenciesListResolver } from './upgrade-page/currencies-list-resolver.service';\r\nimport { CreditCardFormComponent } from './credit-card-form/credit-card-form.component';\r\nimport { PaypalSubscriptions } from './subscriptions/paypal-subscriptions';\r\nimport { SelectPlanPanelComponent } from './plans/select-plan-panel/select-plan-panel.component';\r\nimport { SelectPlanPeriodPanelComponent } from './plans/select-plan-period-panel/select-plan-period-panel.component';\r\nimport { SubscriptionStepperState } from './subscriptions/subscription-stepper-state.service';\r\nimport { UserNotSubscribedGuard } from './guards/user-not-subscribed-guard.service';\r\nimport { UserSubscribedGuard } from './guards/user-subscribed-guard.service';\r\nimport { CreateSubscriptionPanelComponent } from './subscriptions/create-subscription-panel/create-subscription-panel.component';\r\nimport { ContactWidgetComponent } from './upgrade-page/contact-widget/contact-widget.component';\r\nimport { FullPlanNameModule } from '../shared/billing/full-plan-name/full-plan-name.module';\r\nimport { InvoiceIndexComponent } from '@common/billing/invoices/invoice-index/invoice-index.component';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { PricingPageComponent } from './pricing-page/pricing-page.component';\r\nimport { MaterialNavbarModule } from '@common/core/ui/material-navbar/material-navbar.module';\r\nimport { TranslationsModule } from '@common/core/translations/translations.module';\r\nimport { FormatPipesModule } from '@common/core/ui/format-pipes/format-pipes.module';\r\nimport { NoResultsMessageModule } from '@common/core/ui/no-results-message/no-results-message.module';\r\nimport { LoadingIndicatorModule } from '@common/core/ui/loading-indicator/loading-indicator.module';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        MaterialNavbarModule,\r\n        BillingRoutingModule,\r\n        FullPlanNameModule,\r\n        TranslationsModule,\r\n        FormatPipesModule,\r\n        NoResultsMessageModule,\r\n        LoadingIndicatorModule,\r\n\r\n        // material\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        MatSnackBarModule,\r\n        MatCheckboxModule,\r\n        MatTooltipModule,\r\n        MatDialogModule,\r\n        MatStepperModule,\r\n        MatProgressBarModule,\r\n        MatTabsModule,\r\n        MatRadioModule,\r\n        MatTableModule,\r\n    ],\r\n    declarations: [\r\n        UpgradePageComponent,\r\n        PlanFeaturesListComponent,\r\n        OrderSummaryComponent,\r\n        AcceptedPaymentsHeaderComponent,\r\n        UserSubscriptionPageComponent,\r\n        UpgradePageAsideComponent,\r\n        CreditCardFormComponent,\r\n        CreateSubscriptionPanelComponent,\r\n        SelectPlanPanelComponent,\r\n        SelectPlanPeriodPanelComponent,\r\n        ContactWidgetComponent,\r\n        InvoiceIndexComponent,\r\n        PricingPageComponent,\r\n    ],\r\n    providers: [\r\n        BillingPlansResolver,\r\n        CurrenciesListResolver,\r\n        PaypalSubscriptions,\r\n        SubscriptionStepperState,\r\n        SubscriptionStepperState,\r\n        UserNotSubscribedGuard,\r\n        UserSubscribedGuard,\r\n    ],\r\n    exports: [\r\n        BillingRoutingModule,\r\n    ]\r\n})\r\nexport class BillingModule {\r\n}\r\n","<mat-icon svgIcon=\"question-answer\" class=\"icon\"></mat-icon>\r\n\r\n<div class=\"title\" trans>Do you have any questions about PRO accounts?</div>\r\n<div class=\"subtitle\" trans>Our support team will be happy to assist you.</div>\r\n<a mat-raised-button color=\"accent\" target=\"_blank\" routerLink=\"/contact\" trans>Contact Us</a>","import { InjectionToken, forwardRef, EventEmitter, Directive, ChangeDetectorRef, Output, Input, ContentChildren, ElementRef, ViewChild, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Inject, NgModule } from '@angular/core';\nimport { mixinDisableRipple, mixinTabIndex, MatRippleModule, MatCommonModule } from '@angular/material/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/cdk/collections';\nimport * as ɵngcc3 from '@angular/material/core';\n\nconst _c0 = [\"input\"];\nconst _c1 = function () { return { enterDuration: 150 }; };\nconst _c2 = [\"*\"];\nconst MAT_RADIO_DEFAULT_OPTIONS = new InjectionToken('mat-radio-default-options', {\n    providedIn: 'root',\n    factory: MAT_RADIO_DEFAULT_OPTIONS_FACTORY\n});\nfunction MAT_RADIO_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        color: 'accent'\n    };\n}\n// Increasing integer for generating unique ids for radio components.\nlet nextUniqueId = 0;\n/**\n * Provider Expression that allows mat-radio-group to register as a ControlValueAccessor. This\n * allows it to support [(ngModel)] and ngControl.\n * @docs-private\n */\nconst MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatRadioGroup),\n    multi: true\n};\n/** Change event object emitted by MatRadio and MatRadioGroup. */\nclass MatRadioChange {\n    constructor(\n    /** The MatRadioButton that emits the change event. */\n    source, \n    /** The value of the MatRadioButton. */\n    value) {\n        this.source = source;\n        this.value = value;\n    }\n}\n/**\n * Injection token that can be used to inject instances of `MatRadioGroup`. It serves as\n * alternative token to the actual `MatRadioGroup` class which could cause unnecessary\n * retention of the class and its component metadata.\n */\nconst MAT_RADIO_GROUP = new InjectionToken('MatRadioGroup');\n/**\n * Base class with all of the `MatRadioGroup` functionality.\n * @docs-private\n */\nclass _MatRadioGroupBase {\n    constructor(_changeDetector) {\n        this._changeDetector = _changeDetector;\n        /** Selected value for the radio group. */\n        this._value = null;\n        /** The HTML name attribute applied to radio buttons in this group. */\n        this._name = `mat-radio-group-${nextUniqueId++}`;\n        /** The currently selected radio button. Should match value. */\n        this._selected = null;\n        /** Whether the `value` has been set to its initial value. */\n        this._isInitialized = false;\n        /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\n        this._labelPosition = 'after';\n        /** Whether the radio group is disabled. */\n        this._disabled = false;\n        /** Whether the radio group is required. */\n        this._required = false;\n        /** The method to be called in order to update ngModel */\n        this._controlValueAccessorChangeFn = () => { };\n        /**\n         * onTouch function registered via registerOnTouch (ControlValueAccessor).\n         * @docs-private\n         */\n        this.onTouched = () => { };\n        /**\n         * Event emitted when the group value changes.\n         * Change events are only emitted when the value changes due to user interaction with\n         * a radio button (the same behavior as `<input type-\"radio\">`).\n         */\n        this.change = new EventEmitter();\n    }\n    /** Name of the radio button group. All radio buttons inside this group will use this name. */\n    get name() { return this._name; }\n    set name(value) {\n        this._name = value;\n        this._updateRadioButtonNames();\n    }\n    /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\n    get labelPosition() {\n        return this._labelPosition;\n    }\n    set labelPosition(v) {\n        this._labelPosition = v === 'before' ? 'before' : 'after';\n        this._markRadiosForCheck();\n    }\n    /**\n     * Value for the radio-group. Should equal the value of the selected radio button if there is\n     * a corresponding radio button with a matching value. If there is not such a corresponding\n     * radio button, this value persists to be applied in case a new radio button is added with a\n     * matching value.\n     */\n    get value() { return this._value; }\n    set value(newValue) {\n        if (this._value !== newValue) {\n            // Set this before proceeding to ensure no circular loop occurs with selection.\n            this._value = newValue;\n            this._updateSelectedRadioFromValue();\n            this._checkSelectedRadioButton();\n        }\n    }\n    _checkSelectedRadioButton() {\n        if (this._selected && !this._selected.checked) {\n            this._selected.checked = true;\n        }\n    }\n    /**\n     * The currently selected radio button. If set to a new radio button, the radio group value\n     * will be updated to match the new selected button.\n     */\n    get selected() { return this._selected; }\n    set selected(selected) {\n        this._selected = selected;\n        this.value = selected ? selected.value : null;\n        this._checkSelectedRadioButton();\n    }\n    /** Whether the radio group is disabled */\n    get disabled() { return this._disabled; }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._markRadiosForCheck();\n    }\n    /** Whether the radio group is required */\n    get required() { return this._required; }\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n        this._markRadiosForCheck();\n    }\n    /**\n     * Initialize properties once content children are available.\n     * This allows us to propagate relevant attributes to associated buttons.\n     */\n    ngAfterContentInit() {\n        // Mark this component as initialized in AfterContentInit because the initial value can\n        // possibly be set by NgModel on MatRadioGroup, and it is possible that the OnInit of the\n        // NgModel occurs *after* the OnInit of the MatRadioGroup.\n        this._isInitialized = true;\n    }\n    /**\n     * Mark this group as being \"touched\" (for ngModel). Meant to be called by the contained\n     * radio buttons upon their blur.\n     */\n    _touch() {\n        if (this.onTouched) {\n            this.onTouched();\n        }\n    }\n    _updateRadioButtonNames() {\n        if (this._radios) {\n            this._radios.forEach(radio => {\n                radio.name = this.name;\n                radio._markForCheck();\n            });\n        }\n    }\n    /** Updates the `selected` radio button from the internal _value state. */\n    _updateSelectedRadioFromValue() {\n        // If the value already matches the selected radio, do nothing.\n        const isAlreadySelected = this._selected !== null && this._selected.value === this._value;\n        if (this._radios && !isAlreadySelected) {\n            this._selected = null;\n            this._radios.forEach(radio => {\n                radio.checked = this.value === radio.value;\n                if (radio.checked) {\n                    this._selected = radio;\n                }\n            });\n        }\n    }\n    /** Dispatch change event with current selection and group value. */\n    _emitChangeEvent() {\n        if (this._isInitialized) {\n            this.change.emit(new MatRadioChange(this._selected, this._value));\n        }\n    }\n    _markRadiosForCheck() {\n        if (this._radios) {\n            this._radios.forEach(radio => radio._markForCheck());\n        }\n    }\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     * @param value\n     */\n    writeValue(value) {\n        this.value = value;\n        this._changeDetector.markForCheck();\n    }\n    /**\n     * Registers a callback to be triggered when the model value changes.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnChange(fn) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n    /**\n     * Registers a callback to be triggered when the control is touched.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * Sets the disabled state of the control. Implemented as a part of ControlValueAccessor.\n     * @param isDisabled Whether the control should be disabled.\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetector.markForCheck();\n    }\n}\n_MatRadioGroupBase.ɵfac = function _MatRadioGroupBase_Factory(t) { return new (t || _MatRadioGroupBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\n_MatRadioGroupBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatRadioGroupBase, inputs: { name: \"name\", labelPosition: \"labelPosition\", value: \"value\", selected: \"selected\", disabled: \"disabled\", required: \"required\", color: \"color\" }, outputs: { change: \"change\" } });\n_MatRadioGroupBase.ctorParameters = () => [\n    { type: ChangeDetectorRef }\n];\n_MatRadioGroupBase.propDecorators = {\n    change: [{ type: Output }],\n    color: [{ type: Input }],\n    name: [{ type: Input }],\n    labelPosition: [{ type: Input }],\n    value: [{ type: Input }],\n    selected: [{ type: Input }],\n    disabled: [{ type: Input }],\n    required: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatRadioGroupBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }]; }, { change: [{\n            type: Output\n        }], name: [{\n            type: Input\n        }], labelPosition: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], color: [{\n            type: Input\n        }] }); })();\n/**\n * A group of radio buttons. May contain one or more `<mat-radio-button>` elements.\n */\nclass MatRadioGroup extends _MatRadioGroupBase {\n}\nMatRadioGroup.ɵfac = function MatRadioGroup_Factory(t) { return ɵMatRadioGroup_BaseFactory(t || MatRadioGroup); };\nMatRadioGroup.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatRadioGroup, selectors: [[\"mat-radio-group\"]], contentQueries: function MatRadioGroup_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatRadioButton, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._radios = _t);\n    } }, hostAttrs: [\"role\", \"radiogroup\", 1, \"mat-radio-group\"], exportAs: [\"matRadioGroup\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR,\n            { provide: MAT_RADIO_GROUP, useExisting: MatRadioGroup },\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatRadioGroup.propDecorators = {\n    _radios: [{ type: ContentChildren, args: [forwardRef(() => MatRadioButton), { descendants: true },] }]\n};\nconst ɵMatRadioGroup_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatRadioGroup);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatRadioGroup, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-radio-group',\n                exportAs: 'matRadioGroup',\n                providers: [\n                    MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR,\n                    { provide: MAT_RADIO_GROUP, useExisting: MatRadioGroup },\n                ],\n                host: {\n                    'role': 'radiogroup',\n                    'class': 'mat-radio-group'\n                }\n            }]\n    }], null, { _radios: [{\n            type: ContentChildren,\n            args: [forwardRef(() => MatRadioButton), { descendants: true }]\n        }] }); })();\n// Boilerplate for applying mixins to MatRadioButton.\n/** @docs-private */\nclass MatRadioButtonBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\n// As per Material design specifications the selection control radio should use the accent color\n// palette by default. https://material.io/guidelines/components/selection-controls.html\nconst _MatRadioButtonMixinBase = mixinDisableRipple(mixinTabIndex(MatRadioButtonBase));\n/**\n * Base class with all of the `MatRadioButton` functionality.\n * @docs-private\n */\nclass _MatRadioButtonBase extends _MatRadioButtonMixinBase {\n    constructor(radioGroup, elementRef, _changeDetector, _focusMonitor, _radioDispatcher, _animationMode, _providerOverride) {\n        super(elementRef);\n        this._changeDetector = _changeDetector;\n        this._focusMonitor = _focusMonitor;\n        this._radioDispatcher = _radioDispatcher;\n        this._animationMode = _animationMode;\n        this._providerOverride = _providerOverride;\n        this._uniqueId = `mat-radio-${++nextUniqueId}`;\n        /** The unique ID for the radio button. */\n        this.id = this._uniqueId;\n        /**\n         * Event emitted when the checked state of this radio button changes.\n         * Change events are only emitted when the value changes due to user interaction with\n         * the radio button (the same behavior as `<input type-\"radio\">`).\n         */\n        this.change = new EventEmitter();\n        /** Whether this radio is checked. */\n        this._checked = false;\n        /** Value assigned to this radio. */\n        this._value = null;\n        /** Unregister function for _radioDispatcher */\n        this._removeUniqueSelectionListener = () => { };\n        // Assertions. Ideally these should be stripped out by the compiler.\n        // TODO(jelbourn): Assert that there's no name binding AND a parent radio group.\n        this.radioGroup = radioGroup;\n        this._removeUniqueSelectionListener =\n            _radioDispatcher.listen((id, name) => {\n                if (id !== this.id && name === this.name) {\n                    this.checked = false;\n                }\n            });\n    }\n    /** Whether this radio button is checked. */\n    get checked() { return this._checked; }\n    set checked(value) {\n        const newCheckedState = coerceBooleanProperty(value);\n        if (this._checked !== newCheckedState) {\n            this._checked = newCheckedState;\n            if (newCheckedState && this.radioGroup && this.radioGroup.value !== this.value) {\n                this.radioGroup.selected = this;\n            }\n            else if (!newCheckedState && this.radioGroup && this.radioGroup.value === this.value) {\n                // When unchecking the selected radio button, update the selected radio\n                // property on the group.\n                this.radioGroup.selected = null;\n            }\n            if (newCheckedState) {\n                // Notify all radio buttons with the same name to un-check.\n                this._radioDispatcher.notify(this.id, this.name);\n            }\n            this._changeDetector.markForCheck();\n        }\n    }\n    /** The value of this radio button. */\n    get value() { return this._value; }\n    set value(value) {\n        if (this._value !== value) {\n            this._value = value;\n            if (this.radioGroup !== null) {\n                if (!this.checked) {\n                    // Update checked when the value changed to match the radio group's value\n                    this.checked = this.radioGroup.value === value;\n                }\n                if (this.checked) {\n                    this.radioGroup.selected = this;\n                }\n            }\n        }\n    }\n    /** Whether the label should appear after or before the radio button. Defaults to 'after' */\n    get labelPosition() {\n        return this._labelPosition || (this.radioGroup && this.radioGroup.labelPosition) || 'after';\n    }\n    set labelPosition(value) {\n        this._labelPosition = value;\n    }\n    /** Whether the radio button is disabled. */\n    get disabled() {\n        return this._disabled || (this.radioGroup !== null && this.radioGroup.disabled);\n    }\n    set disabled(value) {\n        this._setDisabled(coerceBooleanProperty(value));\n    }\n    /** Whether the radio button is required. */\n    get required() {\n        return this._required || (this.radioGroup && this.radioGroup.required);\n    }\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n    }\n    /** Theme color of the radio button. */\n    get color() {\n        return this._color ||\n            (this.radioGroup && this.radioGroup.color) ||\n            this._providerOverride && this._providerOverride.color || 'accent';\n    }\n    set color(newValue) { this._color = newValue; }\n    /** ID of the native input element inside `<mat-radio-button>` */\n    get inputId() { return `${this.id || this._uniqueId}-input`; }\n    /** Focuses the radio button. */\n    focus(options) {\n        this._focusMonitor.focusVia(this._inputElement, 'keyboard', options);\n    }\n    /**\n     * Marks the radio button as needing checking for change detection.\n     * This method is exposed because the parent radio group will directly\n     * update bound properties of the radio button.\n     */\n    _markForCheck() {\n        // When group value changes, the button will not be notified. Use `markForCheck` to explicit\n        // update radio button's status\n        this._changeDetector.markForCheck();\n    }\n    ngOnInit() {\n        if (this.radioGroup) {\n            // If the radio is inside a radio group, determine if it should be checked\n            this.checked = this.radioGroup.value === this._value;\n            // Copy name from parent radio group\n            this.name = this.radioGroup.name;\n        }\n    }\n    ngAfterViewInit() {\n        this._focusMonitor\n            .monitor(this._elementRef, true)\n            .subscribe(focusOrigin => {\n            if (!focusOrigin && this.radioGroup) {\n                this.radioGroup._touch();\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        this._removeUniqueSelectionListener();\n    }\n    /** Dispatch change event with current value. */\n    _emitChangeEvent() {\n        this.change.emit(new MatRadioChange(this, this._value));\n    }\n    _isRippleDisabled() {\n        return this.disableRipple || this.disabled;\n    }\n    _onInputClick(event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `radio-button` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n    }\n    /**\n     * Triggered when the radio button received a click or the input recognized any change.\n     * Clicking on a label element, will trigger a change event on the associated input.\n     */\n    _onInputChange(event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n        const groupValueChanged = this.radioGroup && this.value !== this.radioGroup.value;\n        this.checked = true;\n        this._emitChangeEvent();\n        if (this.radioGroup) {\n            this.radioGroup._controlValueAccessorChangeFn(this.value);\n            if (groupValueChanged) {\n                this.radioGroup._emitChangeEvent();\n            }\n        }\n    }\n    /** Sets the disabled state and marks for check if a change occurred. */\n    _setDisabled(value) {\n        if (this._disabled !== value) {\n            this._disabled = value;\n            this._changeDetector.markForCheck();\n        }\n    }\n}\n_MatRadioButtonBase.ɵfac = function _MatRadioButtonBase_Factory(t) { return new (t || _MatRadioButtonBase)(ɵngcc0.ɵɵdirectiveInject(_MatRadioGroupBase), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.UniqueSelectionDispatcher), ɵngcc0.ɵɵdirectiveInject(String), ɵngcc0.ɵɵdirectiveInject(undefined)); };\n_MatRadioButtonBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatRadioButtonBase, viewQuery: function _MatRadioButtonBase_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputElement = _t.first);\n    } }, inputs: { id: \"id\", checked: \"checked\", value: \"value\", labelPosition: \"labelPosition\", disabled: \"disabled\", required: \"required\", color: \"color\", name: \"name\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], ariaDescribedby: [\"aria-describedby\", \"ariaDescribedby\"] }, outputs: { change: \"change\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n_MatRadioButtonBase.ctorParameters = () => [\n    { type: _MatRadioGroupBase },\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: FocusMonitor },\n    { type: UniqueSelectionDispatcher },\n    { type: String },\n    { type: undefined }\n];\n_MatRadioButtonBase.propDecorators = {\n    id: [{ type: Input }],\n    name: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    ariaDescribedby: [{ type: Input, args: ['aria-describedby',] }],\n    checked: [{ type: Input }],\n    value: [{ type: Input }],\n    labelPosition: [{ type: Input }],\n    disabled: [{ type: Input }],\n    required: [{ type: Input }],\n    color: [{ type: Input }],\n    change: [{ type: Output }],\n    _inputElement: [{ type: ViewChild, args: ['input',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatRadioButtonBase, [{\n        type: Directive\n    }], function () { return [{ type: _MatRadioGroupBase }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc2.UniqueSelectionDispatcher }, { type: String }, { type: undefined }]; }, { id: [{\n            type: Input\n        }], change: [{\n            type: Output\n        }], checked: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], labelPosition: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], color: [{\n            type: Input\n        }], name: [{\n            type: Input\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], ariaDescribedby: [{\n            type: Input,\n            args: ['aria-describedby']\n        }], _inputElement: [{\n            type: ViewChild,\n            args: ['input']\n        }] }); })();\n/**\n * A Material design radio-button. Typically placed inside of `<mat-radio-group>` elements.\n */\nclass MatRadioButton extends _MatRadioButtonBase {\n    constructor(radioGroup, elementRef, changeDetector, focusMonitor, radioDispatcher, animationMode, providerOverride) {\n        super(radioGroup, elementRef, changeDetector, focusMonitor, radioDispatcher, animationMode, providerOverride);\n    }\n}\nMatRadioButton.ɵfac = function MatRadioButton_Factory(t) { return new (t || MatRadioButton)(ɵngcc0.ɵɵdirectiveInject(MAT_RADIO_GROUP, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.UniqueSelectionDispatcher), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_RADIO_DEFAULT_OPTIONS, 8)); };\nMatRadioButton.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatRadioButton, selectors: [[\"mat-radio-button\"]], hostAttrs: [1, \"mat-radio-button\"], hostVars: 17, hostBindings: function MatRadioButton_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatRadioButton_focus_HostBindingHandler() { return ctx._inputElement.nativeElement.focus(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"tabindex\", 0 - 1)(\"id\", ctx.id)(\"aria-label\", null)(\"aria-labelledby\", null)(\"aria-describedby\", null);\n        ɵngcc0.ɵɵclassProp(\"mat-radio-checked\", ctx.checked)(\"mat-radio-disabled\", ctx.disabled)(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\")(\"mat-primary\", ctx.color === \"primary\")(\"mat-accent\", ctx.color === \"accent\")(\"mat-warn\", ctx.color === \"warn\");\n    } }, inputs: { disableRipple: \"disableRipple\", tabIndex: \"tabIndex\" }, exportAs: [\"matRadioButton\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c2, decls: 13, vars: 19, consts: [[1, \"mat-radio-label\"], [\"label\", \"\"], [1, \"mat-radio-container\"], [1, \"mat-radio-outer-circle\"], [1, \"mat-radio-inner-circle\"], [\"type\", \"radio\", 1, \"mat-radio-input\", \"cdk-visually-hidden\", 3, \"id\", \"checked\", \"disabled\", \"tabIndex\", \"required\", \"change\", \"click\"], [\"input\", \"\"], [\"mat-ripple\", \"\", 1, \"mat-radio-ripple\", \"mat-focus-indicator\", 3, \"matRippleTrigger\", \"matRippleDisabled\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\"], [1, \"mat-ripple-element\", \"mat-radio-persistent-ripple\"], [1, \"mat-radio-label-content\"], [2, \"display\", \"none\"]], template: function MatRadioButton_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"label\", 0, 1);\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n        ɵngcc0.ɵɵelement(3, \"div\", 3);\n        ɵngcc0.ɵɵelement(4, \"div\", 4);\n        ɵngcc0.ɵɵelementStart(5, \"input\", 5, 6);\n        ɵngcc0.ɵɵlistener(\"change\", function MatRadioButton_Template_input_change_5_listener($event) { return ctx._onInputChange($event); })(\"click\", function MatRadioButton_Template_input_click_5_listener($event) { return ctx._onInputClick($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(7, \"div\", 7);\n        ɵngcc0.ɵɵelement(8, \"div\", 8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(9, \"div\", 9);\n        ɵngcc0.ɵɵelementStart(10, \"span\", 10);\n        ɵngcc0.ɵɵtext(11, \"\\u00A0\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(12);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        const _r0 = ɵngcc0.ɵɵreference(1);\n        ɵngcc0.ɵɵattribute(\"for\", ctx.inputId);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵproperty(\"id\", ctx.inputId)(\"checked\", ctx.checked)(\"disabled\", ctx.disabled)(\"tabIndex\", ctx.tabIndex)(\"required\", ctx.required);\n        ɵngcc0.ɵɵattribute(\"name\", ctx.name)(\"value\", ctx.value)(\"aria-label\", ctx.ariaLabel)(\"aria-labelledby\", ctx.ariaLabelledby)(\"aria-describedby\", ctx.ariaDescribedby);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", _r0)(\"matRippleDisabled\", ctx._isRippleDisabled())(\"matRippleCentered\", true)(\"matRippleRadius\", 20)(\"matRippleAnimation\", ɵngcc0.ɵɵpureFunction0(18, _c1));\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"mat-radio-label-before\", ctx.labelPosition == \"before\");\n    } }, directives: [ɵngcc3.MatRipple], styles: [\".mat-radio-button{display:inline-block;-webkit-tap-highlight-color:transparent;outline:0}.mat-radio-label{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;display:inline-flex;align-items:center;white-space:nowrap;vertical-align:middle;width:100%}.mat-radio-container{box-sizing:border-box;display:inline-block;position:relative;width:20px;height:20px;flex-shrink:0}.mat-radio-outer-circle{box-sizing:border-box;height:20px;left:0;position:absolute;top:0;transition:border-color ease 280ms;width:20px;border-width:2px;border-style:solid;border-radius:50%}._mat-animation-noopable .mat-radio-outer-circle{transition:none}.mat-radio-inner-circle{border-radius:50%;box-sizing:border-box;height:20px;left:0;position:absolute;top:0;transition:transform ease 280ms,background-color ease 280ms;width:20px;transform:scale(0.001)}._mat-animation-noopable .mat-radio-inner-circle{transition:none}.mat-radio-checked .mat-radio-inner-circle{transform:scale(0.5)}.cdk-high-contrast-active .mat-radio-checked .mat-radio-inner-circle{border:solid 10px}.mat-radio-label-content{-webkit-user-select:auto;-moz-user-select:auto;-ms-user-select:auto;user-select:auto;display:inline-block;order:0;line-height:inherit;padding-left:8px;padding-right:0}[dir=rtl] .mat-radio-label-content{padding-right:8px;padding-left:0}.mat-radio-label-content.mat-radio-label-before{order:-1;padding-left:0;padding-right:8px}[dir=rtl] .mat-radio-label-content.mat-radio-label-before{padding-right:0;padding-left:8px}.mat-radio-disabled,.mat-radio-disabled .mat-radio-label{cursor:default}.mat-radio-button .mat-radio-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-radio-button .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple){opacity:.16}.mat-radio-persistent-ripple{width:100%;height:100%;transform:none}.mat-radio-container:hover .mat-radio-persistent-ripple{opacity:.04}.mat-radio-button:not(.mat-radio-disabled).cdk-keyboard-focused .mat-radio-persistent-ripple,.mat-radio-button:not(.mat-radio-disabled).cdk-program-focused .mat-radio-persistent-ripple{opacity:.12}.mat-radio-persistent-ripple,.mat-radio-disabled .mat-radio-container:hover .mat-radio-persistent-ripple{opacity:0}@media(hover: none){.mat-radio-container:hover .mat-radio-persistent-ripple{display:none}}.mat-radio-input{bottom:0;left:50%}.cdk-high-contrast-active .mat-radio-disabled{opacity:.5}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatRadioButton.ctorParameters = () => [\n    { type: MatRadioGroup, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RADIO_GROUP,] }] },\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: FocusMonitor },\n    { type: UniqueSelectionDispatcher },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RADIO_DEFAULT_OPTIONS,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatRadioButton, [{\n        type: Component,\n        args: [{\n                selector: 'mat-radio-button',\n                template: \"<!-- TODO(jelbourn): render the radio on either side of the content -->\\n<!-- TODO(mtlin): Evaluate trade-offs of using native radio vs. cost of additional bindings. -->\\n<label [attr.for]=\\\"inputId\\\" class=\\\"mat-radio-label\\\" #label>\\n  <!-- The actual 'radio' part of the control. -->\\n  <div class=\\\"mat-radio-container\\\">\\n    <div class=\\\"mat-radio-outer-circle\\\"></div>\\n    <div class=\\\"mat-radio-inner-circle\\\"></div>\\n    <input #input class=\\\"mat-radio-input cdk-visually-hidden\\\" type=\\\"radio\\\"\\n        [id]=\\\"inputId\\\"\\n        [checked]=\\\"checked\\\"\\n        [disabled]=\\\"disabled\\\"\\n        [tabIndex]=\\\"tabIndex\\\"\\n        [attr.name]=\\\"name\\\"\\n        [attr.value]=\\\"value\\\"\\n        [required]=\\\"required\\\"\\n        [attr.aria-label]=\\\"ariaLabel\\\"\\n        [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n        [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n        (change)=\\\"_onInputChange($event)\\\"\\n        (click)=\\\"_onInputClick($event)\\\">\\n\\n    <!-- The ripple comes after the input so that we can target it with a CSS\\n         sibling selector when the input is focused. -->\\n    <div mat-ripple class=\\\"mat-radio-ripple mat-focus-indicator\\\"\\n         [matRippleTrigger]=\\\"label\\\"\\n         [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n         [matRippleCentered]=\\\"true\\\"\\n         [matRippleRadius]=\\\"20\\\"\\n         [matRippleAnimation]=\\\"{enterDuration: 150}\\\">\\n\\n      <div class=\\\"mat-ripple-element mat-radio-persistent-ripple\\\"></div>\\n    </div>\\n  </div>\\n\\n  <!-- The label content for radio control. -->\\n  <div class=\\\"mat-radio-label-content\\\" [class.mat-radio-label-before]=\\\"labelPosition == 'before'\\\">\\n    <!-- Add an invisible span so JAWS can read the label -->\\n    <span style=\\\"display:none\\\">&nbsp;</span>\\n    <ng-content></ng-content>\\n  </div>\\n</label>\\n\",\n                inputs: ['disableRipple', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matRadioButton',\n                host: {\n                    'class': 'mat-radio-button',\n                    '[class.mat-radio-checked]': 'checked',\n                    '[class.mat-radio-disabled]': 'disabled',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    '[class.mat-primary]': 'color === \"primary\"',\n                    '[class.mat-accent]': 'color === \"accent\"',\n                    '[class.mat-warn]': 'color === \"warn\"',\n                    // Needs to be -1 so the `focus` event still fires.\n                    '[attr.tabindex]': '-1',\n                    '[attr.id]': 'id',\n                    '[attr.aria-label]': 'null',\n                    '[attr.aria-labelledby]': 'null',\n                    '[attr.aria-describedby]': 'null',\n                    // Note: under normal conditions focus shouldn't land on this element, however it may be\n                    // programmatically set, for example inside of a focus trap, in this case we want to forward\n                    // the focus to the native element.\n                    '(focus)': '_inputElement.nativeElement.focus()'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-radio-button{display:inline-block;-webkit-tap-highlight-color:transparent;outline:0}.mat-radio-label{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;display:inline-flex;align-items:center;white-space:nowrap;vertical-align:middle;width:100%}.mat-radio-container{box-sizing:border-box;display:inline-block;position:relative;width:20px;height:20px;flex-shrink:0}.mat-radio-outer-circle{box-sizing:border-box;height:20px;left:0;position:absolute;top:0;transition:border-color ease 280ms;width:20px;border-width:2px;border-style:solid;border-radius:50%}._mat-animation-noopable .mat-radio-outer-circle{transition:none}.mat-radio-inner-circle{border-radius:50%;box-sizing:border-box;height:20px;left:0;position:absolute;top:0;transition:transform ease 280ms,background-color ease 280ms;width:20px;transform:scale(0.001)}._mat-animation-noopable .mat-radio-inner-circle{transition:none}.mat-radio-checked .mat-radio-inner-circle{transform:scale(0.5)}.cdk-high-contrast-active .mat-radio-checked .mat-radio-inner-circle{border:solid 10px}.mat-radio-label-content{-webkit-user-select:auto;-moz-user-select:auto;-ms-user-select:auto;user-select:auto;display:inline-block;order:0;line-height:inherit;padding-left:8px;padding-right:0}[dir=rtl] .mat-radio-label-content{padding-right:8px;padding-left:0}.mat-radio-label-content.mat-radio-label-before{order:-1;padding-left:0;padding-right:8px}[dir=rtl] .mat-radio-label-content.mat-radio-label-before{padding-right:0;padding-left:8px}.mat-radio-disabled,.mat-radio-disabled .mat-radio-label{cursor:default}.mat-radio-button .mat-radio-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-radio-button .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple){opacity:.16}.mat-radio-persistent-ripple{width:100%;height:100%;transform:none}.mat-radio-container:hover .mat-radio-persistent-ripple{opacity:.04}.mat-radio-button:not(.mat-radio-disabled).cdk-keyboard-focused .mat-radio-persistent-ripple,.mat-radio-button:not(.mat-radio-disabled).cdk-program-focused .mat-radio-persistent-ripple{opacity:.12}.mat-radio-persistent-ripple,.mat-radio-disabled .mat-radio-container:hover .mat-radio-persistent-ripple{opacity:0}@media(hover: none){.mat-radio-container:hover .mat-radio-persistent-ripple{display:none}}.mat-radio-input{bottom:0;left:50%}.cdk-high-contrast-active .mat-radio-disabled{opacity:.5}\\n\"]\n            }]\n    }], function () { return [{ type: MatRadioGroup, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RADIO_GROUP]\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc2.UniqueSelectionDispatcher }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RADIO_DEFAULT_OPTIONS]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatRadioModule {\n}\nMatRadioModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatRadioModule });\nMatRadioModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatRadioModule_Factory(t) { return new (t || MatRadioModule)(); }, imports: [[MatRippleModule, MatCommonModule], MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatRadioModule, { declarations: function () { return [MatRadioGroup, MatRadioButton]; }, imports: function () { return [MatRippleModule, MatCommonModule]; }, exports: function () { return [MatRadioGroup, MatRadioButton, MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatRadioModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatRippleModule, MatCommonModule],\n                exports: [MatRadioGroup, MatRadioButton, MatCommonModule],\n                declarations: [MatRadioGroup, MatRadioButton]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_RADIO_DEFAULT_OPTIONS, MAT_RADIO_DEFAULT_OPTIONS_FACTORY, MAT_RADIO_GROUP, MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR, MatRadioButton, MatRadioChange, MatRadioGroup, MatRadioModule, _MatRadioButtonBase, _MatRadioGroupBase };\n\n//# sourceMappingURL=radio.js.map","import { Injectable } from '@angular/core';\r\nimport { AppHttpClient } from '../../core/http/app-http-client.service';\r\nimport { PaginatedBackendResponse } from '../../core/types/pagination/paginated-backend-response';\r\nimport { BackendResponse } from '@common/core/types/backend-response';\r\nimport { Plan } from '@common/core/types/models/Plan';\r\nimport { PaginationParams } from '@common/core/types/pagination/pagination-params';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class Plans {\r\n    static BASE_URI = 'billing-plan';\r\n    constructor(private http: AppHttpClient) {}\r\n\r\n    public all(params?: PaginationParams): PaginatedBackendResponse<Plan> {\r\n        return this.http.get(Plans.BASE_URI, params);\r\n    }\r\n\r\n    public get(id: number): BackendResponse<{plan: Plan}> {\r\n        return this.http.get(`${Plans.BASE_URI}/${id}`);\r\n    }\r\n\r\n    public create(params: object): BackendResponse<{plan: Plan}> {\r\n        return this.http.post(Plans.BASE_URI, params);\r\n    }\r\n\r\n    public update(id: number, params: object): BackendResponse<{plan: Plan}> {\r\n        return this.http.put(`${Plans.BASE_URI}/${id}`, params);\r\n    }\r\n\r\n    public delete(ids: number[]): BackendResponse<void> {\r\n        return this.http.delete(`${Plans.BASE_URI}/${ids}`);\r\n    }\r\n\r\n    public sync(): BackendResponse<void> {\r\n        return this.http.post(`${Plans.BASE_URI}/sync`);\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class LocalStorage {\r\n    private readonly storage;\r\n\r\n    constructor() {\r\n        if (this.localStorageAvailable()) {\r\n            this.storage = localStorage;\r\n        } else {\r\n            this.storage = null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Retrieve specified item from local storage.\r\n     */\r\n    public get<T>(key: string, defaultValue?: T): any|T {\r\n        if ( ! this.storage) return defaultValue;\r\n\r\n        let value;\r\n        try {\r\n            value = JSON.parse(this.storage.getItem(key));\r\n        } catch (e) {\r\n            //\r\n        }\r\n\r\n        return value == null ? defaultValue : value;\r\n    }\r\n\r\n    /**\r\n     * Store specified item in local storage.\r\n     */\r\n    public set(key: string, value: any) {\r\n        if ( ! this.storage) return null;\r\n        value = JSON.stringify(value);\r\n        this.storage.setItem(key, value);\r\n    }\r\n\r\n    /**\r\n     * Remove specified item from local storage.\r\n     */\r\n    public remove(key: string) {\r\n        if ( ! this.storage) return null;\r\n        this.storage.removeItem(key);\r\n    }\r\n\r\n    /**\r\n     * Check if local storage is available.\r\n     */\r\n    public localStorageAvailable(): boolean {\r\n        const test = 'test';\r\n\r\n        try {\r\n            localStorage.setItem(test, test);\r\n            localStorage.removeItem(test);\r\n            return true;\r\n        } catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {FullPlanNameComponent} from './full-plan-name.component';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        FullPlanNameComponent,\r\n    ],\r\n    exports: [\r\n        FullPlanNameComponent,\r\n    ]\r\n})\r\nexport class FullPlanNameModule {}\r\n","import {Inject, LOCALE_ID, Pipe, PipeTransform} from '@angular/core';\r\nimport {DatePipe} from '@angular/common';\r\nimport {Settings} from '../../config/settings.service';\r\n\r\n@Pipe({\r\n    name: 'formattedDate'\r\n})\r\nexport class FormattedDatePipe implements PipeTransform {\r\n    private readonly format: string;\r\n    private angularPipe: DatePipe;\r\n\r\n    constructor(private settings: Settings, @Inject(LOCALE_ID) private _locale: string) {\r\n        this.format = this.settings.get('dates.format', 'yyyy-MM-dd');\r\n        this.angularPipe = new DatePipe(_locale);\r\n    }\r\n\r\n    transform(value: any, format?: string, timezone?: string, locale?: string): string | null {\r\n        // slash as separator for date will cause parse errors\r\n        value = (value && typeof value === 'string') ? value.replace(/\\//g, '-') : value;\r\n        return this.angularPipe.transform(value, format || this.format, timezone, locale);\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Observable} from 'rxjs';\r\nimport {AppHttpClient} from '../../core/http/app-http-client.service';\r\nimport {PaginationResponse} from '../../core/types/pagination/pagination-response';\r\nimport {User} from '../../core/types/models/User';\r\nimport {Subscription} from '@common/shared/billing/models/subscription';\r\nimport {Plan} from '@common/core/types/models/Plan';\r\nimport {BackendResponse} from '@common/core/types/backend-response';\r\n\r\nexport interface CreateSubOnStripeResponse {\r\n    status: 'complete'|'requires_action';\r\n    user?: User;\r\n    payment_intent_secret: string|undefined;\r\n    reference: string;\r\n    end_date: string;\r\n}\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class Subscriptions {\r\n    static BASE_URI = 'billing/subscriptions';\r\n\r\n    constructor(private http: AppHttpClient) {}\r\n\r\n    public all(params?: object): Observable<PaginationResponse<Subscription>> {\r\n        return this.http.get(Subscriptions.BASE_URI, params);\r\n    }\r\n\r\n    public get(id: number): Observable<{subscription: Subscription}> {\r\n        return this.http.get(`${Subscriptions.BASE_URI}/${id}`);\r\n    }\r\n\r\n    public createOnStripe(params: {plan_id: number, start_date?: string}): Observable<CreateSubOnStripeResponse> {\r\n        return this.http.post(`${Subscriptions.BASE_URI}/stripe`, params);\r\n    }\r\n\r\n    public update(id: number, params: object): Observable<{subscription: Subscription}> {\r\n        return this.http.put(`${Subscriptions.BASE_URI}/${id}`, params);\r\n    }\r\n\r\n    public create(params: object): Observable<{subscription: Subscription}> {\r\n        return this.http.post(Subscriptions.BASE_URI, params);\r\n    }\r\n\r\n    public cancel(id: number, params: {delete: boolean}): Observable<{user: User}> {\r\n        return this.http.delete(`${Subscriptions.BASE_URI}/${id}`, params);\r\n    }\r\n\r\n    public resume(id: number): Observable<{subscription: Subscription}> {\r\n        return this.http.post(`${Subscriptions.BASE_URI}/${id}/resume`);\r\n    }\r\n\r\n    public changePlan(id: number, plan: Plan): Observable<{user: User}|{links: {approve: string}}> {\r\n        return this.http.post(`${Subscriptions.BASE_URI}/${id}/change-plan`, {newPlanId: plan.id});\r\n    }\r\n\r\n    public addCard(token: string): Observable<{user: User}> {\r\n        return this.http.post('billing/stripe/cards/add', {token});\r\n    }\r\n\r\n    public finalizeOnStripe(reference: string, userId: number): BackendResponse<CreateSubOnStripeResponse> {\r\n        return this.http.post(`${Subscriptions.BASE_URI}/stripe/finalize`, {reference, userId});\r\n    }\r\n}\r\n","import { FocusKeyManager, FocusMonitor, A11yModule } from '@angular/cdk/a11y';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { CdkPortal, TemplatePortal, CdkPortalOutlet, PortalHostDirective, PortalModule } from '@angular/cdk/portal';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, ElementRef, NgZone, Inject, Optional, TemplateRef, Component, ChangeDetectionStrategy, ViewEncapsulation, ViewContainerRef, ContentChild, ViewChild, Input, ComponentFactoryResolver, forwardRef, EventEmitter, ChangeDetectorRef, Output, QueryList, ContentChildren, Attribute, NgModule } from '@angular/core';\nimport { mixinDisabled, mixinColor, mixinDisableRipple, mixinTabIndex, MAT_RIPPLE_GLOBAL_OPTIONS, RippleRenderer, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { Subject, Subscription, merge, fromEvent, of, timer } from 'rxjs';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { startWith, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\nimport { normalizePassiveListenerOptions, Platform } from '@angular/cdk/platform';\nimport { hasModifierKey, SPACE, ENTER, END, HOME } from '@angular/cdk/keycodes';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token for the MatInkBar's Positioner. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\nimport * as ɵngcc2 from '@angular/common';\nimport * as ɵngcc3 from '@angular/material/core';\nimport * as ɵngcc4 from '@angular/cdk/a11y';\nimport * as ɵngcc5 from '@angular/cdk/portal';\nimport * as ɵngcc6 from '@angular/cdk/scrolling';\nimport * as ɵngcc7 from '@angular/cdk/platform';\nimport * as ɵngcc8 from '@angular/cdk/observers';\n\nfunction MatTab_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0);\n} }\nconst _c0 = [\"*\"];\nfunction MatTabBody_ng_template_2_Template(rf, ctx) { }\nconst _c1 = function (a0) { return { animationDuration: a0 }; };\nconst _c2 = function (a0, a1) { return { value: a0, params: a1 }; };\nconst _c3 = [\"tabBodyWrapper\"];\nconst _c4 = [\"tabHeader\"];\nfunction MatTabGroup_div_2_ng_template_2_ng_template_0_Template(rf, ctx) { }\nfunction MatTabGroup_div_2_ng_template_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, MatTabGroup_div_2_ng_template_2_ng_template_0_Template, 0, 0, \"ng-template\", 9);\n} if (rf & 2) {\n    const tab_r4 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵproperty(\"cdkPortalOutlet\", tab_r4.templateLabel);\n} }\nfunction MatTabGroup_div_2_ng_template_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtext(0);\n} if (rf & 2) {\n    const tab_r4 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵtextInterpolate(tab_r4.textLabel);\n} }\nfunction MatTabGroup_div_2_Template(rf, ctx) { if (rf & 1) {\n    const _r12 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 6);\n    ɵngcc0.ɵɵlistener(\"click\", function MatTabGroup_div_2_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r12); const tab_r4 = ctx.$implicit; const i_r5 = ctx.index; const ctx_r11 = ɵngcc0.ɵɵnextContext(); const _r0 = ɵngcc0.ɵɵreference(1); return ctx_r11._handleClick(tab_r4, _r0, i_r5); });\n    ɵngcc0.ɵɵelementStart(1, \"div\", 7);\n    ɵngcc0.ɵɵtemplate(2, MatTabGroup_div_2_ng_template_2_Template, 1, 1, \"ng-template\", 8);\n    ɵngcc0.ɵɵtemplate(3, MatTabGroup_div_2_ng_template_3_Template, 1, 1, \"ng-template\", 8);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const tab_r4 = ctx.$implicit;\n    const i_r5 = ctx.index;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-tab-label-active\", ctx_r1.selectedIndex == i_r5);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r1._getTabLabelId(i_r5))(\"disabled\", tab_r4.disabled)(\"matRippleDisabled\", tab_r4.disabled || ctx_r1.disableRipple);\n    ɵngcc0.ɵɵattribute(\"tabIndex\", ctx_r1._getTabIndex(tab_r4, i_r5))(\"aria-posinset\", i_r5 + 1)(\"aria-setsize\", ctx_r1._tabs.length)(\"aria-controls\", ctx_r1._getTabContentId(i_r5))(\"aria-selected\", ctx_r1.selectedIndex == i_r5)(\"aria-label\", tab_r4.ariaLabel || null)(\"aria-labelledby\", !tab_r4.ariaLabel && tab_r4.ariaLabelledby ? tab_r4.ariaLabelledby : null);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", tab_r4.templateLabel);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !tab_r4.templateLabel);\n} }\nfunction MatTabGroup_mat_tab_body_5_Template(rf, ctx) { if (rf & 1) {\n    const _r16 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"mat-tab-body\", 10);\n    ɵngcc0.ɵɵlistener(\"_onCentered\", function MatTabGroup_mat_tab_body_5_Template_mat_tab_body__onCentered_0_listener() { ɵngcc0.ɵɵrestoreView(_r16); const ctx_r15 = ɵngcc0.ɵɵnextContext(); return ctx_r15._removeTabBodyWrapperHeight(); })(\"_onCentering\", function MatTabGroup_mat_tab_body_5_Template_mat_tab_body__onCentering_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r16); const ctx_r17 = ɵngcc0.ɵɵnextContext(); return ctx_r17._setTabBodyWrapperHeight($event); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const tab_r13 = ctx.$implicit;\n    const i_r14 = ctx.index;\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-tab-body-active\", ctx_r3.selectedIndex == i_r14);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r3._getTabContentId(i_r14))(\"content\", tab_r13.content)(\"position\", tab_r13.position)(\"origin\", tab_r13.origin)(\"animationDuration\", ctx_r3.animationDuration);\n    ɵngcc0.ɵɵattribute(\"aria-labelledby\", ctx_r3._getTabLabelId(i_r14));\n} }\nconst _c5 = [\"tabListContainer\"];\nconst _c6 = [\"tabList\"];\nconst _c7 = [\"nextPaginator\"];\nconst _c8 = [\"previousPaginator\"];\nconst _c9 = [\"mat-tab-nav-bar\", \"\"];\nconst _MAT_INK_BAR_POSITIONER = new InjectionToken('MatInkBarPositioner', {\n    providedIn: 'root',\n    factory: _MAT_INK_BAR_POSITIONER_FACTORY\n});\n/**\n * The default positioner function for the MatInkBar.\n * @docs-private\n */\nfunction _MAT_INK_BAR_POSITIONER_FACTORY() {\n    const method = (element) => ({\n        left: element ? (element.offsetLeft || 0) + 'px' : '0',\n        width: element ? (element.offsetWidth || 0) + 'px' : '0',\n    });\n    return method;\n}\n/**\n * The ink-bar is used to display and animate the line underneath the current active tab label.\n * @docs-private\n */\nclass MatInkBar {\n    constructor(_elementRef, _ngZone, _inkBarPositioner, _animationMode) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._inkBarPositioner = _inkBarPositioner;\n        this._animationMode = _animationMode;\n    }\n    /**\n     * Calculates the styles from the provided element in order to align the ink-bar to that element.\n     * Shows the ink bar if previously set as hidden.\n     * @param element\n     */\n    alignToElement(element) {\n        this.show();\n        if (typeof requestAnimationFrame !== 'undefined') {\n            this._ngZone.runOutsideAngular(() => {\n                requestAnimationFrame(() => this._setStyles(element));\n            });\n        }\n        else {\n            this._setStyles(element);\n        }\n    }\n    /** Shows the ink bar. */\n    show() {\n        this._elementRef.nativeElement.style.visibility = 'visible';\n    }\n    /** Hides the ink bar. */\n    hide() {\n        this._elementRef.nativeElement.style.visibility = 'hidden';\n    }\n    /**\n     * Sets the proper styles to the ink bar element.\n     * @param element\n     */\n    _setStyles(element) {\n        const positions = this._inkBarPositioner(element);\n        const inkBar = this._elementRef.nativeElement;\n        inkBar.style.left = positions.left;\n        inkBar.style.width = positions.width;\n    }\n}\nMatInkBar.ɵfac = function MatInkBar_Factory(t) { return new (t || MatInkBar)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(_MAT_INK_BAR_POSITIONER), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatInkBar.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatInkBar, selectors: [[\"mat-ink-bar\"]], hostAttrs: [1, \"mat-ink-bar\"], hostVars: 2, hostBindings: function MatInkBar_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } } });\nMatInkBar.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [_MAT_INK_BAR_POSITIONER,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatInkBar, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-ink-bar',\n                host: {\n                    'class': 'mat-ink-bar',\n                    '[class._mat-animation-noopable]': `_animationMode === 'NoopAnimations'`\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [_MAT_INK_BAR_POSITIONER]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatTabContent`. It serves as\n * alternative token to the actual `MatTabContent` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_TAB_CONTENT = new InjectionToken('MatTabContent');\n/** Decorates the `ng-template` tags and reads out the template from it. */\nclass MatTabContent {\n    constructor(template) {\n        this.template = template;\n    }\n}\nMatTabContent.ɵfac = function MatTabContent_Factory(t) { return new (t || MatTabContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nMatTabContent.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTabContent, selectors: [[\"\", \"matTabContent\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_TAB_CONTENT, useExisting: MatTabContent }])] });\nMatTabContent.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabContent, [{\n        type: Directive,\n        args: [{\n                selector: '[matTabContent]',\n                providers: [{ provide: MAT_TAB_CONTENT, useExisting: MatTabContent }]\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatTabLabel`. It serves as\n * alternative token to the actual `MatTabLabel` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_TAB_LABEL = new InjectionToken('MatTabLabel');\n/** Used to flag tab labels for use with the portal directive */\nclass MatTabLabel extends CdkPortal {\n}\nMatTabLabel.ɵfac = function MatTabLabel_Factory(t) { return ɵMatTabLabel_BaseFactory(t || MatTabLabel); };\nMatTabLabel.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTabLabel, selectors: [[\"\", \"mat-tab-label\", \"\"], [\"\", \"matTabLabel\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_TAB_LABEL, useExisting: MatTabLabel }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatTabLabel_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatTabLabel);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabLabel, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-tab-label], [matTabLabel]',\n                providers: [{ provide: MAT_TAB_LABEL, useExisting: MatTabLabel }]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatTab.\n/** @docs-private */\nclass MatTabBase {\n}\nconst _MatTabMixinBase = mixinDisabled(MatTabBase);\n/**\n * Used to provide a tab group to a tab without causing a circular dependency.\n * @docs-private\n */\nconst MAT_TAB_GROUP = new InjectionToken('MAT_TAB_GROUP');\nclass MatTab extends _MatTabMixinBase {\n    constructor(_viewContainerRef, \n    /**\n     * @deprecated `_closestTabGroup` parameter to become required.\n     * @breaking-change 10.0.0\n     */\n    _closestTabGroup) {\n        super();\n        this._viewContainerRef = _viewContainerRef;\n        this._closestTabGroup = _closestTabGroup;\n        /** Plain text label for the tab, used when there is no template label. */\n        this.textLabel = '';\n        /** Portal that will be the hosted content of the tab */\n        this._contentPortal = null;\n        /** Emits whenever the internal state of the tab changes. */\n        this._stateChanges = new Subject();\n        /**\n         * The relatively indexed position where 0 represents the center, negative is left, and positive\n         * represents the right.\n         */\n        this.position = null;\n        /**\n         * The initial relatively index origin of the tab if it was created and selected after there\n         * was already a selected tab. Provides context of what position the tab should originate from.\n         */\n        this.origin = null;\n        /**\n         * Whether the tab is currently active.\n         */\n        this.isActive = false;\n    }\n    // TODO: Remove cast once https://github.com/angular/angular/pull/37506 is available.\n    /** Content for the tab label given by `<ng-template mat-tab-label>`. */\n    get templateLabel() { return this._templateLabel; }\n    set templateLabel(value) {\n        // Only update the templateLabel via query if there is actually\n        // a MatTabLabel found. This works around an issue where a user may have\n        // manually set `templateLabel` during creation mode, which would then get clobbered\n        // by `undefined` when this query resolves.\n        if (value) {\n            this._templateLabel = value;\n        }\n    }\n    /** @docs-private */\n    get content() {\n        return this._contentPortal;\n    }\n    ngOnChanges(changes) {\n        if (changes.hasOwnProperty('textLabel') || changes.hasOwnProperty('disabled')) {\n            this._stateChanges.next();\n        }\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n    ngOnInit() {\n        this._contentPortal = new TemplatePortal(this._explicitContent || this._implicitContent, this._viewContainerRef);\n    }\n}\nMatTab.ɵfac = function MatTab_Factory(t) { return new (t || MatTab)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(MAT_TAB_GROUP, 8)); };\nMatTab.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTab, selectors: [[\"mat-tab\"]], contentQueries: function MatTab_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_TAB_LABEL, true);\n        ɵngcc0.ɵɵstaticContentQuery(dirIndex, MAT_TAB_CONTENT, true, TemplateRef);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templateLabel = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._explicitContent = _t.first);\n    } }, viewQuery: function MatTab_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(TemplateRef, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._implicitContent = _t.first);\n    } }, inputs: { disabled: \"disabled\", textLabel: [\"label\", \"textLabel\"], ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"] }, exportAs: [\"matTab\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatTab_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, MatTab_ng_template_0_Template, 1, 0, \"ng-template\");\n    } }, encapsulation: 2 });\nMatTab.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_TAB_GROUP,] }] }\n];\nMatTab.propDecorators = {\n    templateLabel: [{ type: ContentChild, args: [MAT_TAB_LABEL,] }],\n    _explicitContent: [{ type: ContentChild, args: [MAT_TAB_CONTENT, { read: TemplateRef, static: true },] }],\n    _implicitContent: [{ type: ViewChild, args: [TemplateRef, { static: true },] }],\n    textLabel: [{ type: Input, args: ['label',] }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTab, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tab',\n                template: \"<!-- Create a template for the content of the <mat-tab> so that we can grab a reference to this\\n    TemplateRef and use it in a Portal to render the tab content in the appropriate place in the\\n    tab-group. -->\\n<ng-template><ng-content></ng-content></ng-template>\\n\",\n                inputs: ['disabled'],\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matTab'\n            }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_TAB_GROUP]\n            }] }]; }, { textLabel: [{\n            type: Input,\n            args: ['label']\n        }], templateLabel: [{\n            type: ContentChild,\n            args: [MAT_TAB_LABEL]\n        }], _explicitContent: [{\n            type: ContentChild,\n            args: [MAT_TAB_CONTENT, { read: TemplateRef, static: true }]\n        }], _implicitContent: [{\n            type: ViewChild,\n            args: [TemplateRef, { static: true }]\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the Material tabs.\n * @docs-private\n */\nconst matTabsAnimations = {\n    /** Animation translates a tab along the X axis. */\n    translateTab: trigger('translateTab', [\n        // Note: transitions to `none` instead of 0, because some browsers might blur the content.\n        state('center, void, left-origin-center, right-origin-center', style({ transform: 'none' })),\n        // If the tab is either on the left or right, we additionally add a `min-height` of 1px\n        // in order to ensure that the element has a height before its state changes. This is\n        // necessary because Chrome does seem to skip the transition in RTL mode if the element does\n        // not have a static height and is not rendered. See related issue: #9465\n        state('left', style({ transform: 'translate3d(-100%, 0, 0)', minHeight: '1px' })),\n        state('right', style({ transform: 'translate3d(100%, 0, 0)', minHeight: '1px' })),\n        transition('* => left, * => right, left => center, right => center', animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')),\n        transition('void => left-origin-center', [\n            style({ transform: 'translate3d(-100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ]),\n        transition('void => right-origin-center', [\n            style({ transform: 'translate3d(100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ])\n    ])\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The portal host directive for the contents of the tab.\n * @docs-private\n */\nclass MatTabBodyPortal extends CdkPortalOutlet {\n    constructor(componentFactoryResolver, viewContainerRef, _host, \n    /**\n     * @deprecated `_document` parameter to be made required.\n     * @breaking-change 9.0.0\n     */\n    _document) {\n        super(componentFactoryResolver, viewContainerRef, _document);\n        this._host = _host;\n        /** Subscription to events for when the tab body begins centering. */\n        this._centeringSub = Subscription.EMPTY;\n        /** Subscription to events for when the tab body finishes leaving from center position. */\n        this._leavingSub = Subscription.EMPTY;\n    }\n    /** Set initial visibility or set up subscription for changing visibility. */\n    ngOnInit() {\n        super.ngOnInit();\n        this._centeringSub = this._host._beforeCentering\n            .pipe(startWith(this._host._isCenterPosition(this._host._position)))\n            .subscribe((isCentering) => {\n            if (isCentering && !this.hasAttached()) {\n                this.attach(this._host._content);\n            }\n        });\n        this._leavingSub = this._host._afterLeavingCenter.subscribe(() => {\n            this.detach();\n        });\n    }\n    /** Clean up centering subscription. */\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._centeringSub.unsubscribe();\n        this._leavingSub.unsubscribe();\n    }\n}\nMatTabBodyPortal.ɵfac = function MatTabBodyPortal_Factory(t) { return new (t || MatTabBodyPortal)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(() => MatTabBody)), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };\nMatTabBodyPortal.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTabBodyPortal, selectors: [[\"\", \"matTabBodyHost\", \"\"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatTabBodyPortal.ctorParameters = () => [\n    { type: ComponentFactoryResolver },\n    { type: ViewContainerRef },\n    { type: MatTabBody, decorators: [{ type: Inject, args: [forwardRef(() => MatTabBody),] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabBodyPortal, [{\n        type: Directive,\n        args: [{\n                selector: '[matTabBodyHost]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ComponentFactoryResolver }, { type: ɵngcc0.ViewContainerRef }, { type: MatTabBody, decorators: [{\n                type: Inject,\n                args: [forwardRef(() => MatTabBody)]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n/**\n * Base class with all of the `MatTabBody` functionality.\n * @docs-private\n */\nclass _MatTabBodyBase {\n    constructor(_elementRef, _dir, changeDetectorRef) {\n        this._elementRef = _elementRef;\n        this._dir = _dir;\n        /** Subscription to the directionality change observable. */\n        this._dirChangeSubscription = Subscription.EMPTY;\n        /** Emits when an animation on the tab is complete. */\n        this._translateTabComplete = new Subject();\n        /** Event emitted when the tab begins to animate towards the center as the active tab. */\n        this._onCentering = new EventEmitter();\n        /** Event emitted before the centering of the tab begins. */\n        this._beforeCentering = new EventEmitter();\n        /** Event emitted before the centering of the tab begins. */\n        this._afterLeavingCenter = new EventEmitter();\n        /** Event emitted when the tab completes its animation towards the center. */\n        this._onCentered = new EventEmitter(true);\n        // Note that the default value will always be overwritten by `MatTabBody`, but we need one\n        // anyway to prevent the animations module from throwing an error if the body is used on its own.\n        /** Duration for the tab's animation. */\n        this.animationDuration = '500ms';\n        if (_dir) {\n            this._dirChangeSubscription = _dir.change.subscribe((dir) => {\n                this._computePositionAnimationState(dir);\n                changeDetectorRef.markForCheck();\n            });\n        }\n        // Ensure that we get unique animation events, because the `.done` callback can get\n        // invoked twice in some browsers. See https://github.com/angular/angular/issues/24084.\n        this._translateTabComplete.pipe(distinctUntilChanged((x, y) => {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        })).subscribe(event => {\n            // If the transition to the center is complete, emit an event.\n            if (this._isCenterPosition(event.toState) && this._isCenterPosition(this._position)) {\n                this._onCentered.emit();\n            }\n            if (this._isCenterPosition(event.fromState) && !this._isCenterPosition(this._position)) {\n                this._afterLeavingCenter.emit();\n            }\n        });\n    }\n    /** The shifted index position of the tab body, where zero represents the active center tab. */\n    set position(position) {\n        this._positionIndex = position;\n        this._computePositionAnimationState();\n    }\n    /**\n     * After initialized, check if the content is centered and has an origin. If so, set the\n     * special position states that transition the tab from the left or right before centering.\n     */\n    ngOnInit() {\n        if (this._position == 'center' && this.origin != null) {\n            this._position = this._computePositionFromOrigin(this.origin);\n        }\n    }\n    ngOnDestroy() {\n        this._dirChangeSubscription.unsubscribe();\n        this._translateTabComplete.complete();\n    }\n    _onTranslateTabStarted(event) {\n        const isCentering = this._isCenterPosition(event.toState);\n        this._beforeCentering.emit(isCentering);\n        if (isCentering) {\n            this._onCentering.emit(this._elementRef.nativeElement.clientHeight);\n        }\n    }\n    /** The text direction of the containing app. */\n    _getLayoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Whether the provided position state is considered center, regardless of origin. */\n    _isCenterPosition(position) {\n        return position == 'center' ||\n            position == 'left-origin-center' ||\n            position == 'right-origin-center';\n    }\n    /** Computes the position state that will be used for the tab-body animation trigger. */\n    _computePositionAnimationState(dir = this._getLayoutDirection()) {\n        if (this._positionIndex < 0) {\n            this._position = dir == 'ltr' ? 'left' : 'right';\n        }\n        else if (this._positionIndex > 0) {\n            this._position = dir == 'ltr' ? 'right' : 'left';\n        }\n        else {\n            this._position = 'center';\n        }\n    }\n    /**\n     * Computes the position state based on the specified origin position. This is used if the\n     * tab is becoming visible immediately after creation.\n     */\n    _computePositionFromOrigin(origin) {\n        const dir = this._getLayoutDirection();\n        if ((dir == 'ltr' && origin <= 0) || (dir == 'rtl' && origin > 0)) {\n            return 'left-origin-center';\n        }\n        return 'right-origin-center';\n    }\n}\n_MatTabBodyBase.ɵfac = function _MatTabBodyBase_Factory(t) { return new (t || _MatTabBodyBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\n_MatTabBodyBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatTabBodyBase, inputs: { animationDuration: \"animationDuration\", position: \"position\", _content: [\"content\", \"_content\"], origin: \"origin\" }, outputs: { _onCentering: \"_onCentering\", _beforeCentering: \"_beforeCentering\", _afterLeavingCenter: \"_afterLeavingCenter\", _onCentered: \"_onCentered\" } });\n_MatTabBodyBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ChangeDetectorRef }\n];\n_MatTabBodyBase.propDecorators = {\n    _onCentering: [{ type: Output }],\n    _beforeCentering: [{ type: Output }],\n    _afterLeavingCenter: [{ type: Output }],\n    _onCentered: [{ type: Output }],\n    _content: [{ type: Input, args: ['content',] }],\n    origin: [{ type: Input }],\n    animationDuration: [{ type: Input }],\n    position: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatTabBodyBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, { _onCentering: [{\n            type: Output\n        }], _beforeCentering: [{\n            type: Output\n        }], _afterLeavingCenter: [{\n            type: Output\n        }], _onCentered: [{\n            type: Output\n        }], animationDuration: [{\n            type: Input\n        }], position: [{\n            type: Input\n        }], _content: [{\n            type: Input,\n            args: ['content']\n        }], origin: [{\n            type: Input\n        }] }); })();\n/**\n * Wrapper for the contents of a tab.\n * @docs-private\n */\nclass MatTabBody extends _MatTabBodyBase {\n    constructor(elementRef, dir, changeDetectorRef) {\n        super(elementRef, dir, changeDetectorRef);\n    }\n}\nMatTabBody.ɵfac = function MatTabBody_Factory(t) { return new (t || MatTabBody)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatTabBody.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTabBody, selectors: [[\"mat-tab-body\"]], viewQuery: function MatTabBody_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(PortalHostDirective, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._portalHost = _t.first);\n    } }, hostAttrs: [1, \"mat-tab-body\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 6, consts: [[1, \"mat-tab-body-content\"], [\"content\", \"\"], [\"matTabBodyHost\", \"\"]], template: function MatTabBody_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"@translateTab.start\", function MatTabBody_Template_div_animation_translateTab_start_0_listener($event) { return ctx._onTranslateTabStarted($event); })(\"@translateTab.done\", function MatTabBody_Template_div_animation_translateTab_done_0_listener($event) { return ctx._translateTabComplete.next($event); });\n        ɵngcc0.ɵɵtemplate(2, MatTabBody_ng_template_2_Template, 0, 0, \"ng-template\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"@translateTab\", ɵngcc0.ɵɵpureFunction2(3, _c2, ctx._position, ɵngcc0.ɵɵpureFunction1(1, _c1, ctx.animationDuration)));\n    } }, directives: [MatTabBodyPortal], styles: [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}\\n\"], encapsulation: 2, data: { animation: [matTabsAnimations.translateTab] } });\nMatTabBody.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ChangeDetectorRef }\n];\nMatTabBody.propDecorators = {\n    _portalHost: [{ type: ViewChild, args: [PortalHostDirective,] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabBody, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tab-body',\n                template: \"<div class=\\\"mat-tab-body-content\\\" #content\\n     [@translateTab]=\\\"{\\n        value: _position,\\n        params: {animationDuration: animationDuration}\\n     }\\\"\\n     (@translateTab.start)=\\\"_onTranslateTabStarted($event)\\\"\\n     (@translateTab.done)=\\\"_translateTabComplete.next($event)\\\">\\n  <ng-template matTabBodyHost></ng-template>\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                animations: [matTabsAnimations.translateTab],\n                host: {\n                    'class': 'mat-tab-body'\n                },\n                styles: [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, { _portalHost: [{\n            type: ViewChild,\n            args: [PortalHostDirective]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that can be used to provide the default options the tabs module. */\nconst MAT_TABS_CONFIG = new InjectionToken('MAT_TABS_CONFIG');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Used to generate unique ID's for each tab component */\nlet nextId = 0;\n/** A simple change event emitted on focus or selection changes. */\nclass MatTabChangeEvent {\n}\n// Boilerplate for applying mixins to MatTabGroup.\n/** @docs-private */\nclass MatTabGroupMixinBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nconst _MatTabGroupMixinBase = mixinColor(mixinDisableRipple(MatTabGroupMixinBase), 'primary');\n/**\n * Base class with all of the `MatTabGroupBase` functionality.\n * @docs-private\n */\nclass _MatTabGroupBase extends _MatTabGroupMixinBase {\n    constructor(elementRef, _changeDetectorRef, defaultConfig, _animationMode) {\n        super(elementRef);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._animationMode = _animationMode;\n        /** All of the tabs that belong to the group. */\n        this._tabs = new QueryList();\n        /** The tab index that should be selected after the content has been checked. */\n        this._indexToSelect = 0;\n        /** Snapshot of the height of the tab body wrapper before another tab is activated. */\n        this._tabBodyWrapperHeight = 0;\n        /** Subscription to tabs being added/removed. */\n        this._tabsSubscription = Subscription.EMPTY;\n        /** Subscription to changes in the tab labels. */\n        this._tabLabelSubscription = Subscription.EMPTY;\n        this._dynamicHeight = false;\n        this._selectedIndex = null;\n        /** Position of the tab header. */\n        this.headerPosition = 'above';\n        /** Output to enable support for two-way binding on `[(selectedIndex)]` */\n        this.selectedIndexChange = new EventEmitter();\n        /** Event emitted when focus has changed within a tab group. */\n        this.focusChange = new EventEmitter();\n        /** Event emitted when the body animation has completed */\n        this.animationDone = new EventEmitter();\n        /** Event emitted when the tab selection has changed. */\n        this.selectedTabChange = new EventEmitter(true);\n        this._groupId = nextId++;\n        this.animationDuration = defaultConfig && defaultConfig.animationDuration ?\n            defaultConfig.animationDuration : '500ms';\n        this.disablePagination = defaultConfig && defaultConfig.disablePagination != null ?\n            defaultConfig.disablePagination : false;\n    }\n    /** Whether the tab group should grow to the size of the active tab. */\n    get dynamicHeight() { return this._dynamicHeight; }\n    set dynamicHeight(value) { this._dynamicHeight = coerceBooleanProperty(value); }\n    /** The index of the active tab. */\n    get selectedIndex() { return this._selectedIndex; }\n    set selectedIndex(value) {\n        this._indexToSelect = coerceNumberProperty(value, null);\n    }\n    /** Duration for the tab animation. Will be normalized to milliseconds if no units are set. */\n    get animationDuration() { return this._animationDuration; }\n    set animationDuration(value) {\n        this._animationDuration = /^\\d+$/.test(value) ? value + 'ms' : value;\n    }\n    /** Background color of the tab group. */\n    get backgroundColor() { return this._backgroundColor; }\n    set backgroundColor(value) {\n        const nativeElement = this._elementRef.nativeElement;\n        nativeElement.classList.remove(`mat-background-${this.backgroundColor}`);\n        if (value) {\n            nativeElement.classList.add(`mat-background-${value}`);\n        }\n        this._backgroundColor = value;\n    }\n    /**\n     * After the content is checked, this component knows what tabs have been defined\n     * and what the selected index should be. This is where we can know exactly what position\n     * each tab should be in according to the new selected index, and additionally we know how\n     * a new selected tab should transition in (from the left or right).\n     */\n    ngAfterContentChecked() {\n        // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n        // the amount of tabs changes before the actual change detection runs.\n        const indexToSelect = this._indexToSelect = this._clampTabIndex(this._indexToSelect);\n        // If there is a change in selected index, emit a change event. Should not trigger if\n        // the selected index has not yet been initialized.\n        if (this._selectedIndex != indexToSelect) {\n            const isFirstRun = this._selectedIndex == null;\n            if (!isFirstRun) {\n                this.selectedTabChange.emit(this._createChangeEvent(indexToSelect));\n            }\n            // Changing these values after change detection has run\n            // since the checked content may contain references to them.\n            Promise.resolve().then(() => {\n                this._tabs.forEach((tab, index) => tab.isActive = index === indexToSelect);\n                if (!isFirstRun) {\n                    this.selectedIndexChange.emit(indexToSelect);\n                }\n            });\n        }\n        // Setup the position for each tab and optionally setup an origin on the next selected tab.\n        this._tabs.forEach((tab, index) => {\n            tab.position = index - indexToSelect;\n            // If there is already a selected tab, then set up an origin for the next selected tab\n            // if it doesn't have one already.\n            if (this._selectedIndex != null && tab.position == 0 && !tab.origin) {\n                tab.origin = indexToSelect - this._selectedIndex;\n            }\n        });\n        if (this._selectedIndex !== indexToSelect) {\n            this._selectedIndex = indexToSelect;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    ngAfterContentInit() {\n        this._subscribeToAllTabChanges();\n        this._subscribeToTabLabels();\n        // Subscribe to changes in the amount of tabs, in order to be\n        // able to re-render the content as new tabs are added or removed.\n        this._tabsSubscription = this._tabs.changes.subscribe(() => {\n            const indexToSelect = this._clampTabIndex(this._indexToSelect);\n            // Maintain the previously-selected tab if a new tab is added or removed and there is no\n            // explicit change that selects a different tab.\n            if (indexToSelect === this._selectedIndex) {\n                const tabs = this._tabs.toArray();\n                for (let i = 0; i < tabs.length; i++) {\n                    if (tabs[i].isActive) {\n                        // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n                        // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n                        // adding a tab within the `selectedIndexChange` event.\n                        this._indexToSelect = this._selectedIndex = i;\n                        break;\n                    }\n                }\n            }\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n    /** Listens to changes in all of the tabs. */\n    _subscribeToAllTabChanges() {\n        // Since we use a query with `descendants: true` to pick up the tabs, we may end up catching\n        // some that are inside of nested tab groups. We filter them out manually by checking that\n        // the closest group to the tab is the current one.\n        this._allTabs.changes\n            .pipe(startWith(this._allTabs))\n            .subscribe((tabs) => {\n            this._tabs.reset(tabs.filter(tab => {\n                // @breaking-change 10.0.0 Remove null check for `_closestTabGroup`\n                // once it becomes a required parameter in MatTab.\n                return !tab._closestTabGroup || tab._closestTabGroup === this;\n            }));\n            this._tabs.notifyOnChanges();\n        });\n    }\n    ngOnDestroy() {\n        this._tabs.destroy();\n        this._tabsSubscription.unsubscribe();\n        this._tabLabelSubscription.unsubscribe();\n    }\n    /** Re-aligns the ink bar to the selected tab element. */\n    realignInkBar() {\n        if (this._tabHeader) {\n            this._tabHeader._alignInkBarToSelectedTab();\n        }\n    }\n    _focusChanged(index) {\n        this.focusChange.emit(this._createChangeEvent(index));\n    }\n    _createChangeEvent(index) {\n        const event = new MatTabChangeEvent;\n        event.index = index;\n        if (this._tabs && this._tabs.length) {\n            event.tab = this._tabs.toArray()[index];\n        }\n        return event;\n    }\n    /**\n     * Subscribes to changes in the tab labels. This is needed, because the @Input for the label is\n     * on the MatTab component, whereas the data binding is inside the MatTabGroup. In order for the\n     * binding to be updated, we need to subscribe to changes in it and trigger change detection\n     * manually.\n     */\n    _subscribeToTabLabels() {\n        if (this._tabLabelSubscription) {\n            this._tabLabelSubscription.unsubscribe();\n        }\n        this._tabLabelSubscription = merge(...this._tabs.map(tab => tab._stateChanges))\n            .subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n    /** Clamps the given index to the bounds of 0 and the tabs length. */\n    _clampTabIndex(index) {\n        // Note the `|| 0`, which ensures that values like NaN can't get through\n        // and which would otherwise throw the component into an infinite loop\n        // (since Math.max(NaN, 0) === NaN).\n        return Math.min(this._tabs.length - 1, Math.max(index || 0, 0));\n    }\n    /** Returns a unique id for each tab label element */\n    _getTabLabelId(i) {\n        return `mat-tab-label-${this._groupId}-${i}`;\n    }\n    /** Returns a unique id for each tab content element */\n    _getTabContentId(i) {\n        return `mat-tab-content-${this._groupId}-${i}`;\n    }\n    /**\n     * Sets the height of the body wrapper to the height of the activating tab if dynamic\n     * height property is true.\n     */\n    _setTabBodyWrapperHeight(tabHeight) {\n        if (!this._dynamicHeight || !this._tabBodyWrapperHeight) {\n            return;\n        }\n        const wrapper = this._tabBodyWrapper.nativeElement;\n        wrapper.style.height = this._tabBodyWrapperHeight + 'px';\n        // This conditional forces the browser to paint the height so that\n        // the animation to the new height can have an origin.\n        if (this._tabBodyWrapper.nativeElement.offsetHeight) {\n            wrapper.style.height = tabHeight + 'px';\n        }\n    }\n    /** Removes the height of the tab body wrapper. */\n    _removeTabBodyWrapperHeight() {\n        const wrapper = this._tabBodyWrapper.nativeElement;\n        this._tabBodyWrapperHeight = wrapper.clientHeight;\n        wrapper.style.height = '';\n        this.animationDone.emit();\n    }\n    /** Handle click events, setting new selected index if appropriate. */\n    _handleClick(tab, tabHeader, index) {\n        if (!tab.disabled) {\n            this.selectedIndex = tabHeader.focusIndex = index;\n        }\n    }\n    /** Retrieves the tabindex for the tab. */\n    _getTabIndex(tab, idx) {\n        if (tab.disabled) {\n            return null;\n        }\n        return this.selectedIndex === idx ? 0 : -1;\n    }\n}\n_MatTabGroupBase.ɵfac = function _MatTabGroupBase_Factory(t) { return new (t || _MatTabGroupBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_TABS_CONFIG, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\n_MatTabGroupBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatTabGroupBase, inputs: { headerPosition: \"headerPosition\", animationDuration: \"animationDuration\", disablePagination: \"disablePagination\", dynamicHeight: \"dynamicHeight\", selectedIndex: \"selectedIndex\", backgroundColor: \"backgroundColor\" }, outputs: { selectedIndexChange: \"selectedIndexChange\", focusChange: \"focusChange\", animationDone: \"animationDone\", selectedTabChange: \"selectedTabChange\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n_MatTabGroupBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_TABS_CONFIG,] }, { type: Optional }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabGroupBase.propDecorators = {\n    dynamicHeight: [{ type: Input }],\n    selectedIndex: [{ type: Input }],\n    headerPosition: [{ type: Input }],\n    animationDuration: [{ type: Input }],\n    disablePagination: [{ type: Input }],\n    backgroundColor: [{ type: Input }],\n    selectedIndexChange: [{ type: Output }],\n    focusChange: [{ type: Output }],\n    animationDone: [{ type: Output }],\n    selectedTabChange: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatTabGroupBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_TABS_CONFIG]\n            }, {\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { headerPosition: [{\n            type: Input\n        }], selectedIndexChange: [{\n            type: Output\n        }], focusChange: [{\n            type: Output\n        }], animationDone: [{\n            type: Output\n        }], selectedTabChange: [{\n            type: Output\n        }], animationDuration: [{\n            type: Input\n        }], disablePagination: [{\n            type: Input\n        }], dynamicHeight: [{\n            type: Input\n        }], selectedIndex: [{\n            type: Input\n        }], backgroundColor: [{\n            type: Input\n        }] }); })();\n/**\n * Material design tab-group component. Supports basic tab pairs (label + content) and includes\n * animated ink-bar, keyboard navigation, and screen reader.\n * See: https://material.io/design/components/tabs.html\n */\nclass MatTabGroup extends _MatTabGroupBase {\n    constructor(elementRef, changeDetectorRef, defaultConfig, animationMode) {\n        super(elementRef, changeDetectorRef, defaultConfig, animationMode);\n    }\n}\nMatTabGroup.ɵfac = function MatTabGroup_Factory(t) { return new (t || MatTabGroup)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_TABS_CONFIG, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatTabGroup.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTabGroup, selectors: [[\"mat-tab-group\"]], contentQueries: function MatTabGroup_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatTab, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._allTabs = _t);\n    } }, viewQuery: function MatTabGroup_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c3, true);\n        ɵngcc0.ɵɵviewQuery(_c4, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabBodyWrapper = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabHeader = _t.first);\n    } }, hostAttrs: [1, \"mat-tab-group\"], hostVars: 4, hostBindings: function MatTabGroup_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-group-dynamic-height\", ctx.dynamicHeight)(\"mat-tab-group-inverted-header\", ctx.headerPosition === \"below\");\n    } }, inputs: { color: \"color\", disableRipple: \"disableRipple\" }, exportAs: [\"matTabGroup\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: MAT_TAB_GROUP,\n                useExisting: MatTabGroup\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 6, vars: 7, consts: [[3, \"selectedIndex\", \"disableRipple\", \"disablePagination\", \"indexFocused\", \"selectFocusedIndex\"], [\"tabHeader\", \"\"], [\"class\", \"mat-tab-label mat-focus-indicator\", \"role\", \"tab\", \"matTabLabelWrapper\", \"\", \"mat-ripple\", \"\", \"cdkMonitorElementFocus\", \"\", 3, \"id\", \"mat-tab-label-active\", \"disabled\", \"matRippleDisabled\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"mat-tab-body-wrapper\"], [\"tabBodyWrapper\", \"\"], [\"role\", \"tabpanel\", 3, \"id\", \"mat-tab-body-active\", \"content\", \"position\", \"origin\", \"animationDuration\", \"_onCentered\", \"_onCentering\", 4, \"ngFor\", \"ngForOf\"], [\"role\", \"tab\", \"matTabLabelWrapper\", \"\", \"mat-ripple\", \"\", \"cdkMonitorElementFocus\", \"\", 1, \"mat-tab-label\", \"mat-focus-indicator\", 3, \"id\", \"disabled\", \"matRippleDisabled\", \"click\"], [1, \"mat-tab-label-content\"], [3, \"ngIf\"], [3, \"cdkPortalOutlet\"], [\"role\", \"tabpanel\", 3, \"id\", \"content\", \"position\", \"origin\", \"animationDuration\", \"_onCentered\", \"_onCentering\"]], template: function MatTabGroup_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"mat-tab-header\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"indexFocused\", function MatTabGroup_Template_mat_tab_header_indexFocused_0_listener($event) { return ctx._focusChanged($event); })(\"selectFocusedIndex\", function MatTabGroup_Template_mat_tab_header_selectFocusedIndex_0_listener($event) { return ctx.selectedIndex = $event; });\n        ɵngcc0.ɵɵtemplate(2, MatTabGroup_div_2_Template, 4, 14, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n        ɵngcc0.ɵɵtemplate(5, MatTabGroup_mat_tab_body_5_Template, 1, 8, \"mat-tab-body\", 5);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"selectedIndex\", ctx.selectedIndex || 0)(\"disableRipple\", ctx.disableRipple)(\"disablePagination\", ctx.disablePagination);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx._tabs);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx._tabs);\n    } }, directives: function () { return [MatTabHeader, ɵngcc2.NgForOf, MatTabLabelWrapper, ɵngcc3.MatRipple, ɵngcc4.CdkMonitorFocus, ɵngcc2.NgIf, ɵngcc5.CdkPortalOutlet, MatTabBody]; }, styles: [\".mat-tab-group{display:flex;flex-direction:column}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{padding:0 12px}}@media(max-width: 959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-tab-body-wrapper{transition:none;animation:none}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\\n\"], encapsulation: 2 });\nMatTabGroup.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_TABS_CONFIG,] }, { type: Optional }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatTabGroup.propDecorators = {\n    _allTabs: [{ type: ContentChildren, args: [MatTab, { descendants: true },] }],\n    _tabBodyWrapper: [{ type: ViewChild, args: ['tabBodyWrapper',] }],\n    _tabHeader: [{ type: ViewChild, args: ['tabHeader',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabGroup, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tab-group',\n                exportAs: 'matTabGroup',\n                template: \"<mat-tab-header #tabHeader\\n               [selectedIndex]=\\\"selectedIndex || 0\\\"\\n               [disableRipple]=\\\"disableRipple\\\"\\n               [disablePagination]=\\\"disablePagination\\\"\\n               (indexFocused)=\\\"_focusChanged($event)\\\"\\n               (selectFocusedIndex)=\\\"selectedIndex = $event\\\">\\n  <div class=\\\"mat-tab-label mat-focus-indicator\\\" role=\\\"tab\\\" matTabLabelWrapper mat-ripple cdkMonitorElementFocus\\n       *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n       [id]=\\\"_getTabLabelId(i)\\\"\\n       [attr.tabIndex]=\\\"_getTabIndex(tab, i)\\\"\\n       [attr.aria-posinset]=\\\"i + 1\\\"\\n       [attr.aria-setsize]=\\\"_tabs.length\\\"\\n       [attr.aria-controls]=\\\"_getTabContentId(i)\\\"\\n       [attr.aria-selected]=\\\"selectedIndex == i\\\"\\n       [attr.aria-label]=\\\"tab.ariaLabel || null\\\"\\n       [attr.aria-labelledby]=\\\"(!tab.ariaLabel && tab.ariaLabelledby) ? tab.ariaLabelledby : null\\\"\\n       [class.mat-tab-label-active]=\\\"selectedIndex == i\\\"\\n       [disabled]=\\\"tab.disabled\\\"\\n       [matRippleDisabled]=\\\"tab.disabled || disableRipple\\\"\\n       (click)=\\\"_handleClick(tab, tabHeader, i)\\\">\\n\\n\\n    <div class=\\\"mat-tab-label-content\\\">\\n      <!-- If there is a label template, use it. -->\\n      <ng-template [ngIf]=\\\"tab.templateLabel\\\">\\n        <ng-template [cdkPortalOutlet]=\\\"tab.templateLabel\\\"></ng-template>\\n      </ng-template>\\n\\n      <!-- If there is not a label template, fall back to the text label. -->\\n      <ng-template [ngIf]=\\\"!tab.templateLabel\\\">{{tab.textLabel}}</ng-template>\\n    </div>\\n  </div>\\n</mat-tab-header>\\n\\n<div\\n  class=\\\"mat-tab-body-wrapper\\\"\\n  [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n  #tabBodyWrapper>\\n  <mat-tab-body role=\\\"tabpanel\\\"\\n               *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n               [id]=\\\"_getTabContentId(i)\\\"\\n               [attr.aria-labelledby]=\\\"_getTabLabelId(i)\\\"\\n               [class.mat-tab-body-active]=\\\"selectedIndex == i\\\"\\n               [content]=\\\"tab.content!\\\"\\n               [position]=\\\"tab.position!\\\"\\n               [origin]=\\\"tab.origin\\\"\\n               [animationDuration]=\\\"animationDuration\\\"\\n               (_onCentered)=\\\"_removeTabBodyWrapperHeight()\\\"\\n               (_onCentering)=\\\"_setTabBodyWrapperHeight($event)\\\">\\n  </mat-tab-body>\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                inputs: ['color', 'disableRipple'],\n                providers: [{\n                        provide: MAT_TAB_GROUP,\n                        useExisting: MatTabGroup\n                    }],\n                host: {\n                    'class': 'mat-tab-group',\n                    '[class.mat-tab-group-dynamic-height]': 'dynamicHeight',\n                    '[class.mat-tab-group-inverted-header]': 'headerPosition === \"below\"'\n                },\n                styles: [\".mat-tab-group{display:flex;flex-direction:column}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{padding:0 12px}}@media(max-width: 959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-tab-body-wrapper{transition:none;animation:none}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_TABS_CONFIG]\n            }, {\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { _allTabs: [{\n            type: ContentChildren,\n            args: [MatTab, { descendants: true }]\n        }], _tabBodyWrapper: [{\n            type: ViewChild,\n            args: ['tabBodyWrapper']\n        }], _tabHeader: [{\n            type: ViewChild,\n            args: ['tabHeader']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatTabLabelWrapper.\n/** @docs-private */\nclass MatTabLabelWrapperBase {\n}\nconst _MatTabLabelWrapperMixinBase = mixinDisabled(MatTabLabelWrapperBase);\n/**\n * Used in the `mat-tab-group` view to display tab labels.\n * @docs-private\n */\nclass MatTabLabelWrapper extends _MatTabLabelWrapperMixinBase {\n    constructor(elementRef) {\n        super();\n        this.elementRef = elementRef;\n    }\n    /** Sets focus on the wrapper element */\n    focus() {\n        this.elementRef.nativeElement.focus();\n    }\n    getOffsetLeft() {\n        return this.elementRef.nativeElement.offsetLeft;\n    }\n    getOffsetWidth() {\n        return this.elementRef.nativeElement.offsetWidth;\n    }\n}\nMatTabLabelWrapper.ɵfac = function MatTabLabelWrapper_Factory(t) { return new (t || MatTabLabelWrapper)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatTabLabelWrapper.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTabLabelWrapper, selectors: [[\"\", \"matTabLabelWrapper\", \"\"]], hostVars: 3, hostBindings: function MatTabLabelWrapper_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-disabled\", !!ctx.disabled);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-disabled\", ctx.disabled);\n    } }, inputs: { disabled: \"disabled\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatTabLabelWrapper.ctorParameters = () => [\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabLabelWrapper, [{\n        type: Directive,\n        args: [{\n                selector: '[matTabLabelWrapper]',\n                inputs: ['disabled'],\n                host: {\n                    '[class.mat-tab-disabled]': 'disabled',\n                    '[attr.aria-disabled]': '!!disabled'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Config used to bind passive event listeners */\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * The distance in pixels that will be overshot when scrolling a tab label into view. This helps\n * provide a small affordance to the label next to it.\n */\nconst EXAGGERATED_OVERSCROLL = 60;\n/**\n * Amount of milliseconds to wait before starting to scroll the header automatically.\n * Set a little conservatively in order to handle fake events dispatched on touch devices.\n */\nconst HEADER_SCROLL_DELAY = 650;\n/**\n * Interval in milliseconds at which to scroll the header\n * while the user is holding their pointer.\n */\nconst HEADER_SCROLL_INTERVAL = 100;\n/**\n * Base class for a tab header that supported pagination.\n * @docs-private\n */\nclass MatPaginatedTabHeader {\n    constructor(_elementRef, _changeDetectorRef, _viewportRuler, _dir, _ngZone, \n    /**\n     * @deprecated @breaking-change 9.0.0 `_platform` and `_animationMode`\n     * parameters to become required.\n     */\n    _platform, _animationMode) {\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._viewportRuler = _viewportRuler;\n        this._dir = _dir;\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        this._animationMode = _animationMode;\n        /** The distance in pixels that the tab labels should be translated to the left. */\n        this._scrollDistance = 0;\n        /** Whether the header should scroll to the selected index after the view has been checked. */\n        this._selectedIndexChanged = false;\n        /** Emits when the component is destroyed. */\n        this._destroyed = new Subject();\n        /** Whether the controls for pagination should be displayed */\n        this._showPaginationControls = false;\n        /** Whether the tab list can be scrolled more towards the end of the tab label list. */\n        this._disableScrollAfter = true;\n        /** Whether the tab list can be scrolled more towards the beginning of the tab label list. */\n        this._disableScrollBefore = true;\n        /** Stream that will stop the automated scrolling. */\n        this._stopScrolling = new Subject();\n        /**\n         * Whether pagination should be disabled. This can be used to avoid unnecessary\n         * layout recalculations if it's known that pagination won't be required.\n         */\n        this.disablePagination = false;\n        this._selectedIndex = 0;\n        /** Event emitted when the option is selected. */\n        this.selectFocusedIndex = new EventEmitter();\n        /** Event emitted when a label is focused. */\n        this.indexFocused = new EventEmitter();\n        // Bind the `mouseleave` event on the outside since it doesn't change anything in the view.\n        _ngZone.runOutsideAngular(() => {\n            fromEvent(_elementRef.nativeElement, 'mouseleave')\n                .pipe(takeUntil(this._destroyed))\n                .subscribe(() => {\n                this._stopInterval();\n            });\n        });\n    }\n    /** The index of the active tab. */\n    get selectedIndex() { return this._selectedIndex; }\n    set selectedIndex(value) {\n        value = coerceNumberProperty(value);\n        if (this._selectedIndex != value) {\n            this._selectedIndexChanged = true;\n            this._selectedIndex = value;\n            if (this._keyManager) {\n                this._keyManager.updateActiveItem(value);\n            }\n        }\n    }\n    ngAfterViewInit() {\n        // We need to handle these events manually, because we want to bind passive event listeners.\n        fromEvent(this._previousPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => {\n            this._handlePaginatorPress('before');\n        });\n        fromEvent(this._nextPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => {\n            this._handlePaginatorPress('after');\n        });\n    }\n    ngAfterContentInit() {\n        const dirChange = this._dir ? this._dir.change : of(null);\n        const resize = this._viewportRuler.change(150);\n        const realign = () => {\n            this.updatePagination();\n            this._alignInkBarToSelectedTab();\n        };\n        this._keyManager = new FocusKeyManager(this._items)\n            .withHorizontalOrientation(this._getLayoutDirection())\n            .withWrap();\n        this._keyManager.updateActiveItem(0);\n        // Defer the first call in order to allow for slower browsers to lay out the elements.\n        // This helps in cases where the user lands directly on a page with paginated tabs.\n        typeof requestAnimationFrame !== 'undefined' ? requestAnimationFrame(realign) : realign();\n        // On dir change or window resize, realign the ink bar and update the orientation of\n        // the key manager if the direction has changed.\n        merge(dirChange, resize, this._items.changes).pipe(takeUntil(this._destroyed)).subscribe(() => {\n            // We need to defer this to give the browser some time to recalculate the element dimensions.\n            Promise.resolve().then(realign);\n            this._keyManager.withHorizontalOrientation(this._getLayoutDirection());\n        });\n        // If there is a change in the focus key manager we need to emit the `indexFocused`\n        // event in order to provide a public event that notifies about focus changes. Also we realign\n        // the tabs container by scrolling the new focused tab into the visible section.\n        this._keyManager.change.pipe(takeUntil(this._destroyed)).subscribe(newFocusIndex => {\n            this.indexFocused.emit(newFocusIndex);\n            this._setTabFocus(newFocusIndex);\n        });\n    }\n    ngAfterContentChecked() {\n        // If the number of tab labels have changed, check if scrolling should be enabled\n        if (this._tabLabelCount != this._items.length) {\n            this.updatePagination();\n            this._tabLabelCount = this._items.length;\n            this._changeDetectorRef.markForCheck();\n        }\n        // If the selected index has changed, scroll to the label and check if the scrolling controls\n        // should be disabled.\n        if (this._selectedIndexChanged) {\n            this._scrollToLabel(this._selectedIndex);\n            this._checkScrollingControls();\n            this._alignInkBarToSelectedTab();\n            this._selectedIndexChanged = false;\n            this._changeDetectorRef.markForCheck();\n        }\n        // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\n        // then translate the header to reflect this.\n        if (this._scrollDistanceChanged) {\n            this._updateTabScrollPosition();\n            this._scrollDistanceChanged = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._stopScrolling.complete();\n    }\n    /** Handles keyboard events on the header. */\n    _handleKeydown(event) {\n        // We don't handle any key bindings with a modifier key.\n        if (hasModifierKey(event)) {\n            return;\n        }\n        switch (event.keyCode) {\n            case HOME:\n                this._keyManager.setFirstItemActive();\n                event.preventDefault();\n                break;\n            case END:\n                this._keyManager.setLastItemActive();\n                event.preventDefault();\n                break;\n            case ENTER:\n            case SPACE:\n                if (this.focusIndex !== this.selectedIndex) {\n                    this.selectFocusedIndex.emit(this.focusIndex);\n                    this._itemSelected(event);\n                }\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    }\n    /**\n     * Callback for when the MutationObserver detects that the content has changed.\n     */\n    _onContentChanges() {\n        const textContent = this._elementRef.nativeElement.textContent;\n        // We need to diff the text content of the header, because the MutationObserver callback\n        // will fire even if the text content didn't change which is inefficient and is prone\n        // to infinite loops if a poorly constructed expression is passed in (see #14249).\n        if (textContent !== this._currentTextContent) {\n            this._currentTextContent = textContent || '';\n            // The content observer runs outside the `NgZone` by default, which\n            // means that we need to bring the callback back in ourselves.\n            this._ngZone.run(() => {\n                this.updatePagination();\n                this._alignInkBarToSelectedTab();\n                this._changeDetectorRef.markForCheck();\n            });\n        }\n    }\n    /**\n     * Updates the view whether pagination should be enabled or not.\n     *\n     * WARNING: Calling this method can be very costly in terms of performance. It should be called\n     * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n     * page.\n     */\n    updatePagination() {\n        this._checkPaginationEnabled();\n        this._checkScrollingControls();\n        this._updateTabScrollPosition();\n    }\n    /** Tracks which element has focus; used for keyboard navigation */\n    get focusIndex() {\n        return this._keyManager ? this._keyManager.activeItemIndex : 0;\n    }\n    /** When the focus index is set, we must manually send focus to the correct label */\n    set focusIndex(value) {\n        if (!this._isValidIndex(value) || this.focusIndex === value || !this._keyManager) {\n            return;\n        }\n        this._keyManager.setActiveItem(value);\n    }\n    /**\n     * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n     * providing a valid index and return true.\n     */\n    _isValidIndex(index) {\n        if (!this._items) {\n            return true;\n        }\n        const tab = this._items ? this._items.toArray()[index] : null;\n        return !!tab && !tab.disabled;\n    }\n    /**\n     * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n     * scrolling is enabled.\n     */\n    _setTabFocus(tabIndex) {\n        if (this._showPaginationControls) {\n            this._scrollToLabel(tabIndex);\n        }\n        if (this._items && this._items.length) {\n            this._items.toArray()[tabIndex].focus();\n            // Do not let the browser manage scrolling to focus the element, this will be handled\n            // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\n            // should be the full width minus the offset width.\n            const containerEl = this._tabListContainer.nativeElement;\n            const dir = this._getLayoutDirection();\n            if (dir == 'ltr') {\n                containerEl.scrollLeft = 0;\n            }\n            else {\n                containerEl.scrollLeft = containerEl.scrollWidth - containerEl.offsetWidth;\n            }\n        }\n    }\n    /** The layout direction of the containing app. */\n    _getLayoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Performs the CSS transformation on the tab list that will cause the list to scroll. */\n    _updateTabScrollPosition() {\n        if (this.disablePagination) {\n            return;\n        }\n        const scrollDistance = this.scrollDistance;\n        const platform = this._platform;\n        const translateX = this._getLayoutDirection() === 'ltr' ? -scrollDistance : scrollDistance;\n        // Don't use `translate3d` here because we don't want to create a new layer. A new layer\n        // seems to cause flickering and overflow in Internet Explorer. For example, the ink bar\n        // and ripples will exceed the boundaries of the visible tab bar.\n        // See: https://github.com/angular/components/issues/10276\n        // We round the `transform` here, because transforms with sub-pixel precision cause some\n        // browsers to blur the content of the element.\n        this._tabList.nativeElement.style.transform = `translateX(${Math.round(translateX)}px)`;\n        // Setting the `transform` on IE will change the scroll offset of the parent, causing the\n        // position to be thrown off in some cases. We have to reset it ourselves to ensure that\n        // it doesn't get thrown off. Note that we scope it only to IE and Edge, because messing\n        // with the scroll position throws off Chrome 71+ in RTL mode (see #14689).\n        // @breaking-change 9.0.0 Remove null check for `platform` after it can no longer be undefined.\n        if (platform && (platform.TRIDENT || platform.EDGE)) {\n            this._tabListContainer.nativeElement.scrollLeft = 0;\n        }\n    }\n    /** Sets the distance in pixels that the tab header should be transformed in the X-axis. */\n    get scrollDistance() { return this._scrollDistance; }\n    set scrollDistance(value) {\n        this._scrollTo(value);\n    }\n    /**\n     * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n     * the end of the list, respectively). The distance to scroll is computed to be a third of the\n     * length of the tab list view window.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _scrollHeader(direction) {\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        // Move the scroll distance one-third the length of the tab list's viewport.\n        const scrollAmount = (direction == 'before' ? -1 : 1) * viewLength / 3;\n        return this._scrollTo(this._scrollDistance + scrollAmount);\n    }\n    /** Handles click events on the pagination arrows. */\n    _handlePaginatorClick(direction) {\n        this._stopInterval();\n        this._scrollHeader(direction);\n    }\n    /**\n     * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _scrollToLabel(labelIndex) {\n        if (this.disablePagination) {\n            return;\n        }\n        const selectedLabel = this._items ? this._items.toArray()[labelIndex] : null;\n        if (!selectedLabel) {\n            return;\n        }\n        // The view length is the visible width of the tab labels.\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        const { offsetLeft, offsetWidth } = selectedLabel.elementRef.nativeElement;\n        let labelBeforePos, labelAfterPos;\n        if (this._getLayoutDirection() == 'ltr') {\n            labelBeforePos = offsetLeft;\n            labelAfterPos = labelBeforePos + offsetWidth;\n        }\n        else {\n            labelAfterPos = this._tabList.nativeElement.offsetWidth - offsetLeft;\n            labelBeforePos = labelAfterPos - offsetWidth;\n        }\n        const beforeVisiblePos = this.scrollDistance;\n        const afterVisiblePos = this.scrollDistance + viewLength;\n        if (labelBeforePos < beforeVisiblePos) {\n            // Scroll header to move label to the before direction\n            this.scrollDistance -= beforeVisiblePos - labelBeforePos + EXAGGERATED_OVERSCROLL;\n        }\n        else if (labelAfterPos > afterVisiblePos) {\n            // Scroll header to move label to the after direction\n            this.scrollDistance += labelAfterPos - afterVisiblePos + EXAGGERATED_OVERSCROLL;\n        }\n    }\n    /**\n     * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n     * tab list is wider than the size of the header container, then the pagination controls should\n     * be shown.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _checkPaginationEnabled() {\n        if (this.disablePagination) {\n            this._showPaginationControls = false;\n        }\n        else {\n            const isEnabled = this._tabList.nativeElement.scrollWidth > this._elementRef.nativeElement.offsetWidth;\n            if (!isEnabled) {\n                this.scrollDistance = 0;\n            }\n            if (isEnabled !== this._showPaginationControls) {\n                this._changeDetectorRef.markForCheck();\n            }\n            this._showPaginationControls = isEnabled;\n        }\n    }\n    /**\n     * Evaluate whether the before and after controls should be enabled or disabled.\n     * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n     * before button. If the header is at the end of the list (scroll distance is equal to the\n     * maximum distance we can scroll), then disable the after button.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _checkScrollingControls() {\n        if (this.disablePagination) {\n            this._disableScrollAfter = this._disableScrollBefore = true;\n        }\n        else {\n            // Check if the pagination arrows should be activated.\n            this._disableScrollBefore = this.scrollDistance == 0;\n            this._disableScrollAfter = this.scrollDistance == this._getMaxScrollDistance();\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n     * is equal to the difference in width between the tab list container and tab header container.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _getMaxScrollDistance() {\n        const lengthOfTabList = this._tabList.nativeElement.scrollWidth;\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        return (lengthOfTabList - viewLength) || 0;\n    }\n    /** Tells the ink-bar to align itself to the current label wrapper */\n    _alignInkBarToSelectedTab() {\n        const selectedItem = this._items && this._items.length ?\n            this._items.toArray()[this.selectedIndex] : null;\n        const selectedLabelWrapper = selectedItem ? selectedItem.elementRef.nativeElement : null;\n        if (selectedLabelWrapper) {\n            this._inkBar.alignToElement(selectedLabelWrapper);\n        }\n        else {\n            this._inkBar.hide();\n        }\n    }\n    /** Stops the currently-running paginator interval.  */\n    _stopInterval() {\n        this._stopScrolling.next();\n    }\n    /**\n     * Handles the user pressing down on one of the paginators.\n     * Starts scrolling the header after a certain amount of time.\n     * @param direction In which direction the paginator should be scrolled.\n     */\n    _handlePaginatorPress(direction, mouseEvent) {\n        // Don't start auto scrolling for right mouse button clicks. Note that we shouldn't have to\n        // null check the `button`, but we do it so we don't break tests that use fake events.\n        if (mouseEvent && mouseEvent.button != null && mouseEvent.button !== 0) {\n            return;\n        }\n        // Avoid overlapping timers.\n        this._stopInterval();\n        // Start a timer after the delay and keep firing based on the interval.\n        timer(HEADER_SCROLL_DELAY, HEADER_SCROLL_INTERVAL)\n            // Keep the timer going until something tells it to stop or the component is destroyed.\n            .pipe(takeUntil(merge(this._stopScrolling, this._destroyed)))\n            .subscribe(() => {\n            const { maxScrollDistance, distance } = this._scrollHeader(direction);\n            // Stop the timer if we've reached the start or the end.\n            if (distance === 0 || distance >= maxScrollDistance) {\n                this._stopInterval();\n            }\n        });\n    }\n    /**\n     * Scrolls the header to a given position.\n     * @param position Position to which to scroll.\n     * @returns Information on the current scroll distance and the maximum.\n     */\n    _scrollTo(position) {\n        if (this.disablePagination) {\n            return { maxScrollDistance: 0, distance: 0 };\n        }\n        const maxScrollDistance = this._getMaxScrollDistance();\n        this._scrollDistance = Math.max(0, Math.min(maxScrollDistance, position));\n        // Mark that the scroll distance has changed so that after the view is checked, the CSS\n        // transformation can move the header.\n        this._scrollDistanceChanged = true;\n        this._checkScrollingControls();\n        return { maxScrollDistance, distance: this._scrollDistance };\n    }\n}\nMatPaginatedTabHeader.ɵfac = function MatPaginatedTabHeader_Factory(t) { return new (t || MatPaginatedTabHeader)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatPaginatedTabHeader.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatPaginatedTabHeader, inputs: { disablePagination: \"disablePagination\" } });\nMatPaginatedTabHeader.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatPaginatedTabHeader.propDecorators = {\n    disablePagination: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPaginatedTabHeader, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc7.Platform }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { disablePagination: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Base class with all of the `MatTabHeader` functionality.\n * @docs-private\n */\nclass _MatTabHeaderBase extends MatPaginatedTabHeader {\n    constructor(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, \n    // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n    animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n        this._disableRipple = false;\n    }\n    /** Whether the ripple effect is disabled or not. */\n    get disableRipple() { return this._disableRipple; }\n    set disableRipple(value) { this._disableRipple = coerceBooleanProperty(value); }\n    _itemSelected(event) {\n        event.preventDefault();\n    }\n}\n_MatTabHeaderBase.ɵfac = function _MatTabHeaderBase_Factory(t) { return new (t || _MatTabHeaderBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\n_MatTabHeaderBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatTabHeaderBase, inputs: { disableRipple: \"disableRipple\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n_MatTabHeaderBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabHeaderBase.propDecorators = {\n    disableRipple: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatTabHeaderBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc7.Platform }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { disableRipple: [{\n            type: Input\n        }] }); })();\n/**\n * The header of the tab group which displays a list of all the tabs in the tab group. Includes\n * an ink bar that follows the currently selected tab. When the tabs list's width exceeds the\n * width of the header container, then arrows will be displayed to allow the user to scroll\n * left and right across the header.\n * @docs-private\n */\nclass MatTabHeader extends _MatTabHeaderBase {\n    constructor(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, \n    // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n    animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n    }\n}\nMatTabHeader.ɵfac = function MatTabHeader_Factory(t) { return new (t || MatTabHeader)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatTabHeader.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTabHeader, selectors: [[\"mat-tab-header\"]], contentQueries: function MatTabHeader_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatTabLabelWrapper, false);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._items = _t);\n    } }, viewQuery: function MatTabHeader_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(MatInkBar, true);\n        ɵngcc0.ɵɵstaticViewQuery(_c5, true);\n        ɵngcc0.ɵɵstaticViewQuery(_c6, true);\n        ɵngcc0.ɵɵviewQuery(_c7, true);\n        ɵngcc0.ɵɵviewQuery(_c8, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inkBar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabListContainer = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabList = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._nextPaginator = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._previousPaginator = _t.first);\n    } }, hostAttrs: [1, \"mat-tab-header\"], hostVars: 4, hostBindings: function MatTabHeader_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-controls-enabled\", ctx._showPaginationControls)(\"mat-tab-header-rtl\", ctx._getLayoutDirection() == \"rtl\");\n    } }, inputs: { selectedIndex: \"selectedIndex\" }, outputs: { selectFocusedIndex: \"selectFocusedIndex\", indexFocused: \"indexFocused\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 13, vars: 8, consts: [[\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-before\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"click\", \"mousedown\", \"touchend\"], [\"previousPaginator\", \"\"], [1, \"mat-tab-header-pagination-chevron\"], [1, \"mat-tab-label-container\", 3, \"keydown\"], [\"tabListContainer\", \"\"], [\"role\", \"tablist\", 1, \"mat-tab-list\", 3, \"cdkObserveContent\"], [\"tabList\", \"\"], [1, \"mat-tab-labels\"], [\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-after\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"mousedown\", \"click\", \"touchend\"], [\"nextPaginator\", \"\"]], template: function MatTabHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function MatTabHeader_Template_div_click_0_listener() { return ctx._handlePaginatorClick(\"before\"); })(\"mousedown\", function MatTabHeader_Template_div_mousedown_0_listener($event) { return ctx._handlePaginatorPress(\"before\", $event); })(\"touchend\", function MatTabHeader_Template_div_touchend_0_listener() { return ctx._stopInterval(); });\n        ɵngcc0.ɵɵelement(2, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatTabHeader_Template_div_keydown_3_listener($event) { return ctx._handleKeydown($event); });\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5, 6);\n        ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatTabHeader_Template_div_cdkObserveContent_5_listener() { return ctx._onContentChanges(); });\n        ɵngcc0.ɵɵelementStart(7, \"div\", 7);\n        ɵngcc0.ɵɵprojection(8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(9, \"mat-ink-bar\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(10, \"div\", 8, 9);\n        ɵngcc0.ɵɵlistener(\"mousedown\", function MatTabHeader_Template_div_mousedown_10_listener($event) { return ctx._handlePaginatorPress(\"after\", $event); })(\"click\", function MatTabHeader_Template_div_click_10_listener() { return ctx._handlePaginatorClick(\"after\"); })(\"touchend\", function MatTabHeader_Template_div_touchend_10_listener() { return ctx._stopInterval(); });\n        ɵngcc0.ɵɵelement(12, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollBefore);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollBefore || ctx.disableRipple);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollAfter);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollAfter || ctx.disableRipple);\n    } }, directives: [ɵngcc3.MatRipple, ɵngcc8.CdkObserveContent, MatInkBar], styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-labels{display:flex}[mat-align-tabs=center]>.mat-tab-header .mat-tab-labels{justify-content:center}[mat-align-tabs=end]>.mat-tab-header .mat-tab-labels{justify-content:flex-end}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}._mat-animation-noopable.mat-tab-list{transition:none;animation:none}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{min-width:72px}}\\n\"], encapsulation: 2 });\nMatTabHeader.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatTabHeader.propDecorators = {\n    _items: [{ type: ContentChildren, args: [MatTabLabelWrapper, { descendants: false },] }],\n    _inkBar: [{ type: ViewChild, args: [MatInkBar, { static: true },] }],\n    _tabListContainer: [{ type: ViewChild, args: ['tabListContainer', { static: true },] }],\n    _tabList: [{ type: ViewChild, args: ['tabList', { static: true },] }],\n    _nextPaginator: [{ type: ViewChild, args: ['nextPaginator',] }],\n    _previousPaginator: [{ type: ViewChild, args: ['previousPaginator',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabHeader, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tab-header',\n                template: \"<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\\n<div class=\\\"mat-tab-label-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div\\n    #tabList\\n    class=\\\"mat-tab-list\\\"\\n    [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n    role=\\\"tablist\\\"\\n    (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-labels\\\">\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\",\n                inputs: ['selectedIndex'],\n                outputs: ['selectFocusedIndex', 'indexFocused'],\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                host: {\n                    'class': 'mat-tab-header',\n                    '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n                    '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\"\n                },\n                styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-labels{display:flex}[mat-align-tabs=center]>.mat-tab-header .mat-tab-labels{justify-content:center}[mat-align-tabs=end]>.mat-tab-header .mat-tab-labels{justify-content:flex-end}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}._mat-animation-noopable.mat-tab-list{transition:none;animation:none}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{min-width:72px}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc7.Platform }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { _items: [{\n            type: ContentChildren,\n            args: [MatTabLabelWrapper, { descendants: false }]\n        }], _inkBar: [{\n            type: ViewChild,\n            args: [MatInkBar, { static: true }]\n        }], _tabListContainer: [{\n            type: ViewChild,\n            args: ['tabListContainer', { static: true }]\n        }], _tabList: [{\n            type: ViewChild,\n            args: ['tabList', { static: true }]\n        }], _nextPaginator: [{\n            type: ViewChild,\n            args: ['nextPaginator']\n        }], _previousPaginator: [{\n            type: ViewChild,\n            args: ['previousPaginator']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Base class with all of the `MatTabNav` functionality.\n * @docs-private\n */\nclass _MatTabNavBase extends MatPaginatedTabHeader {\n    constructor(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, \n    /**\n     * @deprecated @breaking-change 9.0.0 `platform` parameter to become required.\n     */\n    platform, animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n        this._disableRipple = false;\n        /** Theme color of the nav bar. */\n        this.color = 'primary';\n    }\n    /** Background color of the tab nav. */\n    get backgroundColor() { return this._backgroundColor; }\n    set backgroundColor(value) {\n        const classList = this._elementRef.nativeElement.classList;\n        classList.remove(`mat-background-${this.backgroundColor}`);\n        if (value) {\n            classList.add(`mat-background-${value}`);\n        }\n        this._backgroundColor = value;\n    }\n    /** Whether the ripple effect is disabled or not. */\n    get disableRipple() { return this._disableRipple; }\n    set disableRipple(value) { this._disableRipple = coerceBooleanProperty(value); }\n    _itemSelected() {\n        // noop\n    }\n    ngAfterContentInit() {\n        // We need this to run before the `changes` subscription in parent to ensure that the\n        // selectedIndex is up-to-date by the time the super class starts looking for it.\n        this._items.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\n            this.updateActiveLink();\n        });\n        super.ngAfterContentInit();\n    }\n    /**\n     * Notifies the component that the active link has been changed.\n     * @breaking-change 8.0.0 `element` parameter to be removed.\n     */\n    updateActiveLink(_element) {\n        if (!this._items) {\n            return;\n        }\n        const items = this._items.toArray();\n        for (let i = 0; i < items.length; i++) {\n            if (items[i].active) {\n                this.selectedIndex = i;\n                this._changeDetectorRef.markForCheck();\n                return;\n            }\n        }\n        // The ink bar should hide itself if no items are active.\n        this.selectedIndex = -1;\n        this._inkBar.hide();\n    }\n}\n_MatTabNavBase.ɵfac = function _MatTabNavBase_Factory(t) { return new (t || _MatTabNavBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\n_MatTabNavBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatTabNavBase, inputs: { color: \"color\", backgroundColor: \"backgroundColor\", disableRipple: \"disableRipple\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n_MatTabNavBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Platform, decorators: [{ type: Optional }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabNavBase.propDecorators = {\n    backgroundColor: [{ type: Input }],\n    disableRipple: [{ type: Input }],\n    color: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatTabNavBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc7.Platform, decorators: [{\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { color: [{\n            type: Input\n        }], backgroundColor: [{\n            type: Input\n        }], disableRipple: [{\n            type: Input\n        }] }); })();\n/**\n * Navigation component matching the styles of the tab group header.\n * Provides anchored navigation with animated ink bar.\n */\nclass MatTabNav extends _MatTabNavBase {\n    constructor(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, \n    /**\n     * @deprecated @breaking-change 9.0.0 `platform` parameter to become required.\n     */\n    platform, animationMode) {\n        super(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode);\n    }\n}\nMatTabNav.ɵfac = function MatTabNav_Factory(t) { return new (t || MatTabNav)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatTabNav.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTabNav, selectors: [[\"\", \"mat-tab-nav-bar\", \"\"]], contentQueries: function MatTabNav_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatTabLink, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._items = _t);\n    } }, viewQuery: function MatTabNav_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(MatInkBar, true);\n        ɵngcc0.ɵɵstaticViewQuery(_c5, true);\n        ɵngcc0.ɵɵstaticViewQuery(_c6, true);\n        ɵngcc0.ɵɵviewQuery(_c7, true);\n        ɵngcc0.ɵɵviewQuery(_c8, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inkBar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabListContainer = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabList = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._nextPaginator = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._previousPaginator = _t.first);\n    } }, hostAttrs: [1, \"mat-tab-nav-bar\", \"mat-tab-header\"], hostVars: 10, hostBindings: function MatTabNav_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-controls-enabled\", ctx._showPaginationControls)(\"mat-tab-header-rtl\", ctx._getLayoutDirection() == \"rtl\")(\"mat-primary\", ctx.color !== \"warn\" && ctx.color !== \"accent\")(\"mat-accent\", ctx.color === \"accent\")(\"mat-warn\", ctx.color === \"warn\");\n    } }, inputs: { color: \"color\" }, exportAs: [\"matTabNavBar\", \"matTabNav\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c9, ngContentSelectors: _c0, decls: 13, vars: 8, consts: [[\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-before\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"click\", \"mousedown\", \"touchend\"], [\"previousPaginator\", \"\"], [1, \"mat-tab-header-pagination-chevron\"], [1, \"mat-tab-link-container\", 3, \"keydown\"], [\"tabListContainer\", \"\"], [1, \"mat-tab-list\", 3, \"cdkObserveContent\"], [\"tabList\", \"\"], [1, \"mat-tab-links\"], [\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-after\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"mousedown\", \"click\", \"touchend\"], [\"nextPaginator\", \"\"]], template: function MatTabNav_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function MatTabNav_Template_div_click_0_listener() { return ctx._handlePaginatorClick(\"before\"); })(\"mousedown\", function MatTabNav_Template_div_mousedown_0_listener($event) { return ctx._handlePaginatorPress(\"before\", $event); })(\"touchend\", function MatTabNav_Template_div_touchend_0_listener() { return ctx._stopInterval(); });\n        ɵngcc0.ɵɵelement(2, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatTabNav_Template_div_keydown_3_listener($event) { return ctx._handleKeydown($event); });\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5, 6);\n        ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatTabNav_Template_div_cdkObserveContent_5_listener() { return ctx._onContentChanges(); });\n        ɵngcc0.ɵɵelementStart(7, \"div\", 7);\n        ɵngcc0.ɵɵprojection(8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(9, \"mat-ink-bar\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(10, \"div\", 8, 9);\n        ɵngcc0.ɵɵlistener(\"mousedown\", function MatTabNav_Template_div_mousedown_10_listener($event) { return ctx._handlePaginatorPress(\"after\", $event); })(\"click\", function MatTabNav_Template_div_click_10_listener() { return ctx._handlePaginatorClick(\"after\"); })(\"touchend\", function MatTabNav_Template_div_touchend_10_listener() { return ctx._stopInterval(); });\n        ɵngcc0.ɵɵelement(12, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollBefore);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollBefore || ctx.disableRipple);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollAfter);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollAfter || ctx.disableRipple);\n    } }, directives: [ɵngcc3.MatRipple, ɵngcc8.CdkObserveContent, MatInkBar], styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-tab-links{display:flex}[mat-align-tabs=center]>.mat-tab-link-container .mat-tab-links{justify-content:center}[mat-align-tabs=end]>.mat-tab-link-container .mat-tab-links{justify-content:flex-end}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:transparent}.mat-tab-link:focus{outline:none}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-link:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-link.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-link.mat-tab-disabled{opacity:.5}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-link{opacity:1}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}@media(max-width: 599px){.mat-tab-link{min-width:72px}}\\n\"], encapsulation: 2 });\nMatTabNav.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Platform, decorators: [{ type: Optional }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatTabNav.propDecorators = {\n    _items: [{ type: ContentChildren, args: [forwardRef(() => MatTabLink), { descendants: true },] }],\n    _inkBar: [{ type: ViewChild, args: [MatInkBar, { static: true },] }],\n    _tabListContainer: [{ type: ViewChild, args: ['tabListContainer', { static: true },] }],\n    _tabList: [{ type: ViewChild, args: ['tabList', { static: true },] }],\n    _nextPaginator: [{ type: ViewChild, args: ['nextPaginator',] }],\n    _previousPaginator: [{ type: ViewChild, args: ['previousPaginator',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabNav, [{\n        type: Component,\n        args: [{\n                selector: '[mat-tab-nav-bar]',\n                exportAs: 'matTabNavBar, matTabNav',\n                inputs: ['color'],\n                template: \"<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\\n<div class=\\\"mat-tab-link-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div\\n    class=\\\"mat-tab-list\\\"\\n    [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n    #tabList\\n    (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-links\\\">\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\",\n                host: {\n                    'class': 'mat-tab-nav-bar mat-tab-header',\n                    '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n                    '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n                    '[class.mat-primary]': 'color !== \"warn\" && color !== \"accent\"',\n                    '[class.mat-accent]': 'color === \"accent\"',\n                    '[class.mat-warn]': 'color === \"warn\"'\n                },\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-tab-links{display:flex}[mat-align-tabs=center]>.mat-tab-link-container .mat-tab-links{justify-content:center}[mat-align-tabs=end]>.mat-tab-link-container .mat-tab-links{justify-content:flex-end}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:transparent}.mat-tab-link:focus{outline:none}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-link:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-link.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-link.mat-tab-disabled{opacity:.5}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-link{opacity:1}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}@media(max-width: 599px){.mat-tab-link{min-width:72px}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc7.Platform, decorators: [{\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { _items: [{\n            type: ContentChildren,\n            args: [forwardRef(() => MatTabLink), { descendants: true }]\n        }], _inkBar: [{\n            type: ViewChild,\n            args: [MatInkBar, { static: true }]\n        }], _tabListContainer: [{\n            type: ViewChild,\n            args: ['tabListContainer', { static: true }]\n        }], _tabList: [{\n            type: ViewChild,\n            args: ['tabList', { static: true }]\n        }], _nextPaginator: [{\n            type: ViewChild,\n            args: ['nextPaginator']\n        }], _previousPaginator: [{\n            type: ViewChild,\n            args: ['previousPaginator']\n        }] }); })();\n// Boilerplate for applying mixins to MatTabLink.\nclass MatTabLinkMixinBase {\n}\nconst _MatTabLinkMixinBase = mixinTabIndex(mixinDisableRipple(mixinDisabled(MatTabLinkMixinBase)));\n/** Base class with all of the `MatTabLink` functionality. */\nclass _MatTabLinkBase extends _MatTabLinkMixinBase {\n    constructor(_tabNavBar, elementRef, globalRippleOptions, tabIndex, _focusMonitor, animationMode) {\n        super();\n        this._tabNavBar = _tabNavBar;\n        this.elementRef = elementRef;\n        this._focusMonitor = _focusMonitor;\n        /** Whether the tab link is active or not. */\n        this._isActive = false;\n        this.rippleConfig = globalRippleOptions || {};\n        this.tabIndex = parseInt(tabIndex) || 0;\n        if (animationMode === 'NoopAnimations') {\n            this.rippleConfig.animation = { enterDuration: 0, exitDuration: 0 };\n        }\n    }\n    /** Whether the link is active. */\n    get active() { return this._isActive; }\n    set active(value) {\n        if (value !== this._isActive) {\n            this._isActive = value;\n            this._tabNavBar.updateActiveLink(this.elementRef);\n        }\n    }\n    /**\n     * Whether ripples are disabled on interaction.\n     * @docs-private\n     */\n    get rippleDisabled() {\n        return this.disabled || this.disableRipple || this._tabNavBar.disableRipple ||\n            !!this.rippleConfig.disabled;\n    }\n    focus() {\n        this.elementRef.nativeElement.focus();\n    }\n    ngAfterViewInit() {\n        this._focusMonitor.monitor(this.elementRef);\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this.elementRef);\n    }\n}\n_MatTabLinkBase.ɵfac = function _MatTabLinkBase_Factory(t) { return new (t || _MatTabLinkBase)(ɵngcc0.ɵɵdirectiveInject(_MatTabNavBase), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\n_MatTabLinkBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatTabLinkBase, inputs: { active: \"active\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n_MatTabLinkBase.ctorParameters = () => [\n    { type: _MatTabNavBase },\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: FocusMonitor },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabLinkBase.propDecorators = {\n    active: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatTabLinkBase, [{\n        type: Directive\n    }], function () { return [{ type: _MatTabNavBase }, { type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: ɵngcc4.FocusMonitor }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { active: [{\n            type: Input\n        }] }); })();\n/**\n * Link inside of a `mat-tab-nav-bar`.\n */\nclass MatTabLink extends _MatTabLinkBase {\n    constructor(tabNavBar, elementRef, ngZone, platform, globalRippleOptions, tabIndex, focusMonitor, animationMode) {\n        super(tabNavBar, elementRef, globalRippleOptions, tabIndex, focusMonitor, animationMode);\n        this._tabLinkRipple = new RippleRenderer(this, ngZone, elementRef, platform);\n        this._tabLinkRipple.setupTriggerEvents(elementRef.nativeElement);\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._tabLinkRipple._removeTriggerEvents();\n    }\n}\nMatTabLink.ɵfac = function MatTabLink_Factory(t) { return new (t || MatTabLink)(ɵngcc0.ɵɵdirectiveInject(MatTabNav), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatTabLink.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTabLink, selectors: [[\"\", \"mat-tab-link\", \"\"], [\"\", \"matTabLink\", \"\"]], hostAttrs: [1, \"mat-tab-link\", \"mat-focus-indicator\"], hostVars: 7, hostBindings: function MatTabLink_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-current\", ctx.active ? \"page\" : null)(\"aria-disabled\", ctx.disabled)(\"tabIndex\", ctx.tabIndex);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-disabled\", ctx.disabled)(\"mat-tab-label-active\", ctx.active);\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", tabIndex: \"tabIndex\" }, exportAs: [\"matTabLink\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatTabLink.ctorParameters = () => [\n    { type: MatTabNav },\n    { type: ElementRef },\n    { type: NgZone },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: FocusMonitor },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabLink, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-tab-link], [matTabLink]',\n                exportAs: 'matTabLink',\n                inputs: ['disabled', 'disableRipple', 'tabIndex'],\n                host: {\n                    'class': 'mat-tab-link mat-focus-indicator',\n                    '[attr.aria-current]': 'active ? \"page\" : null',\n                    '[attr.aria-disabled]': 'disabled',\n                    '[attr.tabIndex]': 'tabIndex',\n                    '[class.mat-tab-disabled]': 'disabled',\n                    '[class.mat-tab-label-active]': 'active'\n                }\n            }]\n    }], function () { return [{ type: MatTabNav }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc7.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: ɵngcc4.FocusMonitor }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatTabsModule {\n}\nMatTabsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatTabsModule });\nMatTabsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatTabsModule_Factory(t) { return new (t || MatTabsModule)(); }, imports: [[\n            CommonModule,\n            MatCommonModule,\n            PortalModule,\n            MatRippleModule,\n            ObserversModule,\n            A11yModule,\n        ], MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatTabsModule, { declarations: function () { return [MatTabGroup, MatTabLabel, MatTab, MatInkBar, MatTabLabelWrapper, MatTabNav, MatTabLink, MatTabBody, MatTabBodyPortal, MatTabHeader, MatTabContent]; }, imports: function () { return [CommonModule,\n        MatCommonModule,\n        PortalModule,\n        MatRippleModule,\n        ObserversModule,\n        A11yModule]; }, exports: function () { return [MatCommonModule, MatTabGroup, MatTabLabel, MatTab, MatTabNav, MatTabLink, MatTabContent]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabsModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    MatCommonModule,\n                    PortalModule,\n                    MatRippleModule,\n                    ObserversModule,\n                    A11yModule,\n                ],\n                // Don't export all components because some are only to be used internally.\n                exports: [\n                    MatCommonModule,\n                    MatTabGroup,\n                    MatTabLabel,\n                    MatTab,\n                    MatTabNav,\n                    MatTabLink,\n                    MatTabContent,\n                ],\n                declarations: [\n                    MatTabGroup,\n                    MatTabLabel,\n                    MatTab,\n                    MatInkBar,\n                    MatTabLabelWrapper,\n                    MatTabNav,\n                    MatTabLink,\n                    MatTabBody,\n                    MatTabBodyPortal,\n                    MatTabHeader,\n                    MatTabContent,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_TABS_CONFIG, MAT_TAB_GROUP, MatInkBar, MatTab, MatTabBody, MatTabBodyPortal, MatTabChangeEvent, MatTabContent, MatTabGroup, MatTabHeader, MatTabLabel, MatTabLabelWrapper, MatTabLink, MatTabNav, MatTabsModule, _MAT_INK_BAR_POSITIONER, _MatTabBodyBase, _MatTabGroupBase, _MatTabHeaderBase, _MatTabLinkBase, _MatTabNavBase, matTabsAnimations, _MAT_INK_BAR_POSITIONER_FACTORY as ɵangular_material_src_material_tabs_tabs_a, MAT_TAB_LABEL as ɵangular_material_src_material_tabs_tabs_b, MAT_TAB_CONTENT as ɵangular_material_src_material_tabs_tabs_c, MatPaginatedTabHeader as ɵangular_material_src_material_tabs_tabs_d };\n\n//# sourceMappingURL=tabs.js.map"]}