{"version":3,"sources":["webpack:///src/common/admin/analytics/components/analytics-host/analytics-host.component.html","webpack:///src/common/admin/analytics/components/analytics-host/analytics-host.component.ts","webpack:///src/common/admin/analytics/components/analytics-header/analytics-header.component.html","webpack:///src/common/admin/analytics/components/analytics-header/analytics-header.component.ts","webpack:///src/app/admin/analytics/click-analytics-host/click-analytics-host.component.html","webpack:///src/app/admin/analytics/click-analytics-host/click-analytics-host.component.ts","webpack:///src/common/admin/analytics/components/default-analytics/transformers/weekly-data-transformer.ts","webpack:///src/common/admin/analytics/components/default-analytics/utils/timestamp-to-day-name.ts","webpack:///src/common/admin/analytics/components/default-analytics/transformers/monthly-data-transformer.ts","webpack:///src/common/admin/analytics/components/default-analytics/transformers/browser-data-transformer.ts","webpack:///src/common/admin/analytics/components/default-analytics/transformers/country-data-transformer.ts","webpack:///src/common/admin/analytics/components/default-analytics/default-analytics.component.html","webpack:///src/app/admin/analytics/analytics-routing.module.ts","webpack:///src/common/admin/analytics/components/default-analytics/default-analytics.component.ts","webpack:///src/app/admin/analytics/analytics.module.ts"],"names":["AnalyticsHostComponent","settings","channels","this","get","filter","channel","condition","tooltipEl","document","querySelector","remove","AnalyticsHeaderComponent","ClickAnalyticsHostComponent","http","loading$","ReplaySubject","linkStats$","next","pipe","finalize","subscribe","response","headerData","mainData","transformWeeklyData","weeklyPageViews","config","type","LINE","labels","tooltip","data","current","forEach","dayData","key","push","timestamp","locale","Date","toLocaleDateString","weekday","date","pageViews","previous","transformMonthlyData","monthlyData","selector","monthData","prevDay","transformBrowserData","browserData","PIE","map","browser","sessions","legend","options","showLabel","donut","transformCountryData","countriesData","country","routes","path","component","children","redirectTo","DefaultAnalyticsComponent","chartHeight","charts","generateCharts","monthlyPageViews","browsers","countries","AnalyticsRoutingRoutingModule","forChild","AnalyticsModule"],"mappings":"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","file":"x","sourcesContent":["<header *ngIf=\"channels && channels.length\">\r\n    <h1 trans>Analytics</h1>\r\n    <ul class=\"analytics-nav\">\r\n        <li class=\"analytics-nav-item\" *ngFor=\"let navItem of channels\">\r\n            <a mat-button routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\" [routerLink]=\"[navItem.route]\" trans>{{navItem.name}}</a>\r\n        </li>\r\n    </ul>\r\n</header>\r\n\r\n<router-outlet></router-outlet>\r\n","import {ChangeDetectionStrategy, Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {Settings} from '@common/core/config/settings.service';\r\nimport {AnalyticsChannel} from '@common/core/config/app-config';\r\n\r\n@Component({\r\n    selector: 'analytics-host',\r\n    templateUrl: './analytics-host.component.html',\r\n    styleUrls: ['./analytics-host.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class AnalyticsHostComponent implements OnInit, OnDestroy {\r\n    public channels: AnalyticsChannel[] = [];\r\n\r\n    constructor(\r\n        public settings: Settings,\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        this.channels = (this.settings.get('vebto.admin.analytics.channels', []) as AnalyticsChannel[])\r\n            .filter(channel => {\r\n                return !channel.condition || this.settings.get(channel.condition);\r\n            });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        const tooltipEl = document.querySelector('.chartist-tooltip');\r\n        if (tooltipEl) {\r\n            tooltipEl.remove();\r\n        }\r\n    }\r\n}\r\n","<div class=\"stat\" *ngFor=\"let item of data\">\r\n    <mat-icon [svgIcon]=\"item.icon\"></mat-icon>\r\n    <div class=\"details\">\r\n        <div class=\"name\" trans>{{item.name}}</div>\r\n        <div class=\"count\" *ngIf=\"item.type === 'number'\">{{item.value | number}}</div>\r\n        <div class=\"count\" *ngIf=\"item.type === 'fileSize'\">{{item.value | formattedFileSize}}</div>\r\n    </div>\r\n</div>","import {ChangeDetectionStrategy, Component, Input} from '@angular/core';\r\nimport {AnalyticsHeaderData} from '../../types/analytics-response';\r\n\r\n@Component({\r\n    selector: 'analytics-header',\r\n    templateUrl: './analytics-header.component.html',\r\n    styleUrls: ['./analytics-header.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class AnalyticsHeaderComponent {\r\n    @Input() data: AnalyticsHeaderData[];\r\n}\r\n","<mat-progress-bar mode=\"indeterminate\" color=\"accent\" *ngIf=\"loading$ | async\"></mat-progress-bar>\r\n<analytics-header [data]=\"headerData\"></analytics-header>\r\n\r\n<click-charts [reports]=\"linkStats$ | async\"></click-charts>\r\n","import {ChangeDetectionStrategy, Component, OnInit} from '@angular/core';\nimport {AnalyticsHeaderData, AnalyticsResponse} from '@common/admin/analytics/types/analytics-response';\nimport {ReplaySubject} from 'rxjs';\nimport {HttpCacheClient} from '@common/core/http/http-cache-client';\nimport {finalize} from 'rxjs/operators';\nimport {LinkStats} from '../../../shared/link/link.service';\n\n@Component({\n    selector: 'click-analytics-host',\n    templateUrl: './click-analytics-host.component.html',\n    styleUrls: ['./click-analytics-host.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ClickAnalyticsHostComponent implements OnInit {\n    public headerData: AnalyticsHeaderData[];\n    public loading$ = new ReplaySubject<boolean>(1);\n    public linkStats$ = new ReplaySubject<LinkStats>(1);\n\n    constructor(\n        private http: HttpCacheClient\n    ) {}\n\n    ngOnInit() {\n        this.loading$.next(true);\n        this.http.get<AnalyticsResponse<LinkStats>>('admin/analytics/stats', {channel: 'clicks'})\n            .pipe(finalize(() => this.loading$.next(false)))\n            .subscribe(response => {\n                this.headerData = response.headerData;\n                this.linkStats$.next(response.mainData);\n            });\n    }\n}\n","import { WeeklyPageViews } from '../../../types/site-analytics-data';\r\nimport { timestampToDayName } from '../utils/timestamp-to-day-name';\r\nimport {ChartType, LineChartConfig} from '@common/shared/charts/base-chart';\r\n\r\nexport function transformWeeklyData(weeklyPageViews: WeeklyPageViews): LineChartConfig {\r\n    const config = {\r\n        type: ChartType.LINE,\r\n        labels: [],\r\n        tooltip: 'Pageviews',\r\n        data: [[], []]\r\n    } as LineChartConfig;\r\n\r\n    weeklyPageViews?.current?.forEach((dayData, key) => {\r\n        config.labels.push(timestampToDayName(dayData.date));\r\n\r\n        // current week data\r\n        config.data[0].push(dayData.pageViews);\r\n\r\n        // previous week data\r\n        config.data[1].push(weeklyPageViews.previous[key]?.pageViews || 0);\r\n    });\r\n\r\n    return config;\r\n}\r\n","export function timestampToDayName(timestamp: number, locale: string = 'en-US') {\r\n    const date = new Date(timestamp * 1000);\r\n    return date.toLocaleDateString(locale, {weekday: 'short'});\r\n}\r\n","import { MonthlyPageViews } from '../../../types/site-analytics-data';\r\nimport {ChartType, LineChartConfig} from '@common/shared/charts/base-chart';\r\n\r\nexport function transformMonthlyData(monthlyData: MonthlyPageViews): LineChartConfig {\r\n    const config = {\r\n        selector: '.monthly-chart',\r\n        type: ChartType.LINE,\r\n        labels: [],\r\n        tooltip: 'Pageviews',\r\n        data: [[], []]\r\n    } as LineChartConfig;\r\n\r\n    monthlyData && monthlyData.current.forEach((monthData, key) => {\r\n        // month numbers are returned 0 based from backend\r\n        config.labels.push('' + (key + 1));\r\n\r\n        // current month data\r\n        config.data[0].push(monthData.pageViews);\r\n\r\n        // previous month data\r\n        const prevDay = monthlyData.previous[key];\r\n        config.data[1].push(prevDay ? prevDay.pageViews : 0);\r\n    });\r\n\r\n    return config;\r\n}\r\n","import { BrowserData } from '../../../types/site-analytics-data';\r\nimport {ChartType, PieChartConfig} from '@common/shared/charts/base-chart';\r\n\r\nexport function transformBrowserData(browserData: BrowserData[] = []): PieChartConfig {\r\n    return {\r\n        type: ChartType.PIE,\r\n        tooltip: 'Number of sessions',\r\n        labels: browserData.map(data => data.browser),\r\n        data: browserData.map(data => data.sessions),\r\n        legend: false,\r\n        options: {\r\n            showLabel: true,\r\n            donut: true,\r\n        }\r\n    };\r\n}\r\n","import { CountryData } from '../../../types/site-analytics-data';\r\nimport {ChartType, PieChartConfig} from '@common/shared/charts/base-chart';\r\n\r\nexport function transformCountryData(countriesData: CountryData[] = []): PieChartConfig {\r\n    return {\r\n        selector: '.countries-chart',\r\n        type: ChartType.PIE,\r\n        tooltip: 'Number of sessions',\r\n        labels: countriesData.map(data => data.country),\r\n        data: countriesData.map(data => data.sessions),\r\n        options: {\r\n            showLabel: true,\r\n            donut: true,\r\n        }\r\n    };\r\n}\r\n","<mat-progress-bar mode=\"indeterminate\" color=\"accent\" *ngIf=\"loading$ | async\"></mat-progress-bar>\n<analytics-header [data]=\"headerData\"></analytics-header>\n\n<div class=\"content\">\n    <div class=\"chart-row\">\n        <div class=\"chart-wrapper\">\n            <chart [chartConfig]=\"charts?.weeklyPageViews\" [height]=\"chartHeight\">\n                <div class=\"chart-header\">\n                    <div class=\"title\" trans>This Week vs Last Week</div>\n                    <div class=\"subtitle\" trans>By page views</div>\n                </div>\n                <div class=\"chart-legend\">\n                    <div class=\"legend-item\" trans>This week</div>\n                    <div class=\"legend-item\" trans>Last week</div>\n                </div>\n            </chart>\n        </div>\n\n        <div class=\"chart-wrapper pie-wrapper\">\n            <chart [chartConfig]=\"charts?.browsers\" [height]=\"380\">\n                <div class=\"chart-header\">\n                    <div class=\"title\" trans>Top Browsers</div>\n                    <div class=\"subtitle\" trans>By sessions</div>\n                </div>\n            </chart>\n        </div>\n    </div>\n\n    <div class=\"chart-row\">\n        <div class=\"chart-wrapper\">\n            <chart [chartConfig]=\"charts?.monthlyPageViews\" [height]=\"chartHeight\">\n                <div class=\"chart-header\">\n                    <div class=\"title\" trans>This Month vs Last Month</div>\n                    <div class=\"subtitle\" trans>By page views</div>\n                </div>\n                <div class=\"chart-legend\">\n                    <div class=\"legend-item\" trans>This month</div>\n                    <div class=\"legend-item\" trans>Last month</div>\n                </div>\n            </chart>\n        </div>\n\n        <div class=\"chart-wrapper pie-wrapper\">\n            <chart [chartConfig]=\"charts?.countries\" [height]=\"380\">\n                <div class=\"chart-header\">\n                    <div class=\"title\" trans>Top Countries</div>\n                    <div class=\"subtitle\" trans>By sessions</div>\n                </div>\n            </chart>\n        </div>\n    </div>\n</div>\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {AnalyticsHostComponent} from '@common/admin/analytics/components/analytics-host/analytics-host.component';\r\nimport {ClickAnalyticsHostComponent} from './click-analytics-host/click-analytics-host.component';\r\nimport {DefaultAnalyticsComponent} from '@common/admin/analytics/components/default-analytics/default-analytics.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: AnalyticsHostComponent,\r\n        children: [\r\n            {path: '', redirectTo: 'links'},\r\n            {\r\n                path: 'links',\r\n                component: ClickAnalyticsHostComponent,\r\n            },\r\n            {\r\n                path: 'google',\r\n                component: DefaultAnalyticsComponent,\r\n            },\r\n        ],\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class AnalyticsRoutingRoutingModule { }\r\n","import {ChangeDetectionStrategy, Component, OnInit} from '@angular/core';\nimport {SiteAnalyticsData} from '@common/admin/analytics/types/site-analytics-data';\nimport {transformWeeklyData} from '@common/admin/analytics/components/default-analytics/transformers/weekly-data-transformer';\nimport {transformMonthlyData} from '@common/admin/analytics/components/default-analytics/transformers/monthly-data-transformer';\nimport {transformBrowserData} from '@common/admin/analytics/components/default-analytics/transformers/browser-data-transformer';\nimport {transformCountryData} from '@common/admin/analytics/components/default-analytics/transformers/country-data-transformer';\nimport {ChartConfigs} from '@common/admin/analytics/types/chart-configs';\nimport {ReplaySubject} from 'rxjs';\nimport {AnalyticsHeaderData, AnalyticsResponse} from '@common/admin/analytics/types/analytics-response';\nimport {HttpCacheClient} from '@common/core/http/http-cache-client';\nimport {finalize} from 'rxjs/operators';\n\n@Component({\n    selector: 'default-analytics',\n    templateUrl: './default-analytics.component.html',\n    styleUrls: ['./default-analytics.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DefaultAnalyticsComponent implements OnInit {\n    protected channel = 'default';\n    public readonly chartHeight = 400;\n    public headerData: AnalyticsHeaderData[];\n    public loading$ = new ReplaySubject<boolean>(1);\n    public charts: ChartConfigs;\n\n    constructor(\n        private http: HttpCacheClient\n    ) {}\n\n    ngOnInit() {\n        this.loading$.next(true);\n        this.http.get<AnalyticsResponse>('admin/analytics/stats', {channel: this.channel})\n            .pipe(finalize(() => this.loading$.next(false)))\n            .subscribe(response => {\n                this.headerData = response.headerData;\n                this.charts = this.generateCharts(response.mainData);\n            });\n    }\n\n    private generateCharts(data: SiteAnalyticsData) {\n        return {\n            weeklyPageViews: transformWeeklyData(data.weeklyPageViews),\n            monthlyPageViews: transformMonthlyData(data.monthlyPageViews),\n            browsers: transformBrowserData(data.browsers),\n            countries: transformCountryData(data.countries)\n        };\n    }\n}\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {ChartsModule} from '@common/shared/charts/charts.module';\r\nimport {AnalyticsHostComponent} from '@common/admin/analytics/components/analytics-host/analytics-host.component';\r\nimport {DefaultAnalyticsComponent} from '@common/admin/analytics/components/default-analytics/default-analytics.component';\r\nimport {AnalyticsHeaderComponent} from '@common/admin/analytics/components/analytics-header/analytics-header.component';\r\nimport {TranslationsModule} from '@common/core/translations/translations.module';\r\nimport {AnalyticsRoutingRoutingModule} from './analytics-routing.module';\r\nimport {ClickAnalyticsHostComponent} from './click-analytics-host/click-analytics-host.component';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {FormatPipesModule} from '@common/core/ui/format-pipes/format-pipes.module';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {ClickChartsModule} from '../../dashboard/click-charts/click-charts.module';\r\nimport {MatButtonModule} from '@angular/material/button';\r\n\r\n@NgModule({\r\n    imports: [\r\n        AnalyticsRoutingRoutingModule,\r\n        CommonModule,\r\n        ChartsModule,\r\n        TranslationsModule,\r\n        FormatPipesModule,\r\n        ClickChartsModule,\r\n\r\n        // material\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        MatProgressBarModule,\r\n    ],\r\n    declarations: [\r\n        AnalyticsHostComponent,\r\n        AnalyticsHeaderComponent,\r\n        DefaultAnalyticsComponent,\r\n\r\n        // app\r\n        ClickAnalyticsHostComponent,\r\n    ]\r\n})\r\nexport class AnalyticsModule {\r\n}\r\n"]}